{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"contributing/","text":"Contributing \u00b6 Interested in contributing to the Material for MkDocs? Want to report a bug? Before you do, please read the following guidelines. Submission context \u00b6 Got a question or problem? \u00b6 For quick questions there's no need to open an issue as you can reach us on gitter.im . Found a bug? \u00b6 If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository. Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines . Missing a feature? \u00b6 You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that it is of use for everyone, as the Material for MkDocs is highly opinionated. Please consider what kind of change it is: For a major feature , first open an issue and outline your proposal so that it can be discussed. This will also allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project. Small features and bugs can be crafted and directly submitted as a Pull Request. However, there is no guarantee that your feature will make it into the master , as it's always a matter of opinion whether if benefits the overall functionality of the project. Submission guidelines \u00b6 Submitting an issue \u00b6 Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue. Submitting a Pull Request (PR) \u00b6 Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development : Fork the project, set up the development environment , make your changes in a separate git branch and add descriptive messages to your commits. Build : Before submitting a pull requests, build the theme . This is a mandatory requirement for your PR to get accepted, as the theme should at all times be installable through GitHub. Pull Request : After building the theme, commit the compiled output, push your branch to GitHub and send a PR to mkdocs-material:master . If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Contributing"},{"location":"contributing/#contributing","text":"Interested in contributing to the Material for MkDocs? Want to report a bug? Before you do, please read the following guidelines.","title":"Contributing"},{"location":"contributing/#submission-context","text":"","title":"Submission context"},{"location":"contributing/#got-a-question-or-problem","text":"For quick questions there's no need to open an issue as you can reach us on gitter.im .","title":"Got a question or problem?"},{"location":"contributing/#found-a-bug","text":"If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository. Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines .","title":"Found a bug?"},{"location":"contributing/#missing-a-feature","text":"You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that it is of use for everyone, as the Material for MkDocs is highly opinionated. Please consider what kind of change it is: For a major feature , first open an issue and outline your proposal so that it can be discussed. This will also allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project. Small features and bugs can be crafted and directly submitted as a Pull Request. However, there is no guarantee that your feature will make it into the master , as it's always a matter of opinion whether if benefits the overall functionality of the project.","title":"Missing a feature?"},{"location":"contributing/#submission-guidelines","text":"","title":"Submission guidelines"},{"location":"contributing/#submitting-an-issue","text":"Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue.","title":"Submitting an issue"},{"location":"contributing/#submitting-a-pull-request-pr","text":"Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development : Fork the project, set up the development environment , make your changes in a separate git branch and add descriptive messages to your commits. Build : Before submitting a pull requests, build the theme . This is a mandatory requirement for your PR to get accepted, as the theme should at all times be installable through GitHub. Pull Request : After building the theme, commit the compiled output, push your branch to GitHub and send a PR to mkdocs-material:master . If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Submitting a Pull Request (PR)"},{"location":"customization/","text":"Customization \u00b6 A great starting point \u00b6 Project documentation is as diverse as the projects themselves and Material for MkDocs is a good starting point for making it look great. However, as you write your documentation, you may reach a point where some small adjustments are necessary to preserve your brand's style. Adding assets \u00b6 MkDocs provides several ways to interfere with themes. In order to make a few tweaks to an existing theme, you can just add your stylesheets and JavaScript files to the docs directory. Additional stylesheets \u00b6 If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate stylesheet. The easiest way is by creating a new stylesheet file in your docs directory: mkdir docs/stylesheets touch docs/stylesheets/extra.css Then, add the following line to your mkdocs.yml : extra_css : - stylesheets/extra.css Spin up the development server with mkdocs serve and start typing your changes in your additional stylesheet file \u2013 you can see them instantly after saving, as the MkDocs development server supports live reloading. Additional JavaScript \u00b6 The same is true for additional JavaScript. If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in your docs directory: mkdir docs/javascripts touch docs/javascripts/extra.js Then, add the following line to your mkdocs.yml : extra_javascript : - javascripts/extra.js Further assistance can be found in the MkDocs documentation . Extending the theme \u00b6 If you want to alter the HTML source (e.g. add or remove some part), you can extend the theme. MkDocs supports theme extension , an easy way to override parts of a theme without forking and changing the main theme. Setup and theme structure \u00b6 Reference the Material theme as usual in your mkdocs.yml , and create a new folder for overrides which you reference using custom_dir : theme : name : material custom_dir : overrides Theme extension prerequisites As the custom_dir variable is used for the theme extension process, the Material for MkDocs needs to be installed via pip and referenced with the name parameter in your mkdocs.yml . The structure in the overrides directory must mirror the directory structure of the original theme, as any file in the overrides directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the overrides directory. The directory layout of the theme is as follows: . \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript \u2502 \u2514\u2500 stylesheets/ # Stylesheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # 3rd-party integrations \u2502 \u251c\u2500 language/ # Localized languages \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 hero.html # Hero teaser \u2502 \u251c\u2500 language.html # Localized labels \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 search.html # Search box \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source-date.html # Last updated date \u2502 \u251c\u2500 source-link.html # Link to source file \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 toc-item.html # Table of contents item \u2502 \u2514\u2500 toc.html # Table of contents \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page Overriding partials \u00b6 In order to override the footer, we can replace the footer.html partial with our own partial. To do this, create the file partials/footer.html in the overrides directory. MkDocs will now use the new partial when rendering the theme. This can be done with any file. Overriding template blocks \u00b6 Besides overriding partials, one can also override so called template blocks , which are defined inside the templates and wrap specific features. To override a template block, create a main.html inside the overrides directory and define the block, e.g.: {% extends \"base.html\" %} {% block htmltitle %} <title>Lorem ipsum dolor sit amet</title> {% endblock %} Material for MkDocs provides the following template blocks: Block name Wrapped contents analytics Wraps the Google Analytics integration announce Wraps the Announcement bar config Wraps the JavaScript application config content Wraps the main content disqus Wraps the disqus integration extrahead Empty block to define additional meta tags fonts Wraps the webfont definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser (if available) htmltitle Wraps the <title> tag libs Wraps the JavaScript libraries (header) scripts Wraps the JavaScript application (footer) source Wraps the linked source files site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the stylesheets (also extra sources) tabs Wraps the tabs navigation (if available) For more on this topic refer to the MkDocs documentation Theme development \u00b6 Material for MkDocs uses Webpack as a build tool to leverage modern web technologies like TypeScript and SASS . If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the theme and recompile it. This is fairly easy. Environment setup \u00b6 In order to start development on Material for MkDocs, a Node.js version of at least 12 is required. First, clone the repository: git clone https://github.com/squidfunk/mkdocs-material Next, all dependencies need to be installed, which is done with: cd mkdocs-material pip install -r requirements.txt npm install Development mode \u00b6 Start the Webpack watchdog with: npm start Then, in a second session, start the MkDocs server with: mkdocs serve Point your browser to localhost:8000 and you should see this documentation in front of you. Automatically generated files Never make any changes in the material directory, as the contents of this directory are automatically generated from the src directory and will be overridden when the theme is built. Build process \u00b6 When you've finished making your changes, you can build the theme by invoking: npm run build This triggers the production-level compilation and minification of all stylesheets and JavaScript sources. When the command exits, the final files are located in the material directory. Add the theme_dir variable pointing to the aforementioned directory in your original mkdocs.yml . Now you can run mkdocs build and you should see your documentation with your changes to the original theme.","title":"Customization"},{"location":"customization/#customization","text":"","title":"Customization"},{"location":"customization/#a-great-starting-point","text":"Project documentation is as diverse as the projects themselves and Material for MkDocs is a good starting point for making it look great. However, as you write your documentation, you may reach a point where some small adjustments are necessary to preserve your brand's style.","title":"A great starting point"},{"location":"customization/#adding-assets","text":"MkDocs provides several ways to interfere with themes. In order to make a few tweaks to an existing theme, you can just add your stylesheets and JavaScript files to the docs directory.","title":"Adding assets"},{"location":"customization/#additional-stylesheets","text":"If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate stylesheet. The easiest way is by creating a new stylesheet file in your docs directory: mkdir docs/stylesheets touch docs/stylesheets/extra.css Then, add the following line to your mkdocs.yml : extra_css : - stylesheets/extra.css Spin up the development server with mkdocs serve and start typing your changes in your additional stylesheet file \u2013 you can see them instantly after saving, as the MkDocs development server supports live reloading.","title":"Additional stylesheets"},{"location":"customization/#additional-javascript","text":"The same is true for additional JavaScript. If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in your docs directory: mkdir docs/javascripts touch docs/javascripts/extra.js Then, add the following line to your mkdocs.yml : extra_javascript : - javascripts/extra.js Further assistance can be found in the MkDocs documentation .","title":"Additional JavaScript"},{"location":"customization/#extending-the-theme","text":"If you want to alter the HTML source (e.g. add or remove some part), you can extend the theme. MkDocs supports theme extension , an easy way to override parts of a theme without forking and changing the main theme.","title":"Extending the theme"},{"location":"customization/#setup-and-theme-structure","text":"Reference the Material theme as usual in your mkdocs.yml , and create a new folder for overrides which you reference using custom_dir : theme : name : material custom_dir : overrides Theme extension prerequisites As the custom_dir variable is used for the theme extension process, the Material for MkDocs needs to be installed via pip and referenced with the name parameter in your mkdocs.yml . The structure in the overrides directory must mirror the directory structure of the original theme, as any file in the overrides directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the overrides directory. The directory layout of the theme is as follows: . \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript \u2502 \u2514\u2500 stylesheets/ # Stylesheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # 3rd-party integrations \u2502 \u251c\u2500 language/ # Localized languages \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 hero.html # Hero teaser \u2502 \u251c\u2500 language.html # Localized labels \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 search.html # Search box \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source-date.html # Last updated date \u2502 \u251c\u2500 source-link.html # Link to source file \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 toc-item.html # Table of contents item \u2502 \u2514\u2500 toc.html # Table of contents \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page","title":"Setup and theme structure"},{"location":"customization/#overriding-partials","text":"In order to override the footer, we can replace the footer.html partial with our own partial. To do this, create the file partials/footer.html in the overrides directory. MkDocs will now use the new partial when rendering the theme. This can be done with any file.","title":"Overriding partials"},{"location":"customization/#overriding-template-blocks","text":"Besides overriding partials, one can also override so called template blocks , which are defined inside the templates and wrap specific features. To override a template block, create a main.html inside the overrides directory and define the block, e.g.: {% extends \"base.html\" %} {% block htmltitle %} <title>Lorem ipsum dolor sit amet</title> {% endblock %} Material for MkDocs provides the following template blocks: Block name Wrapped contents analytics Wraps the Google Analytics integration announce Wraps the Announcement bar config Wraps the JavaScript application config content Wraps the main content disqus Wraps the disqus integration extrahead Empty block to define additional meta tags fonts Wraps the webfont definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser (if available) htmltitle Wraps the <title> tag libs Wraps the JavaScript libraries (header) scripts Wraps the JavaScript application (footer) source Wraps the linked source files site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the stylesheets (also extra sources) tabs Wraps the tabs navigation (if available) For more on this topic refer to the MkDocs documentation","title":"Overriding template blocks"},{"location":"customization/#theme-development","text":"Material for MkDocs uses Webpack as a build tool to leverage modern web technologies like TypeScript and SASS . If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the theme and recompile it. This is fairly easy.","title":"Theme development"},{"location":"customization/#environment-setup","text":"In order to start development on Material for MkDocs, a Node.js version of at least 12 is required. First, clone the repository: git clone https://github.com/squidfunk/mkdocs-material Next, all dependencies need to be installed, which is done with: cd mkdocs-material pip install -r requirements.txt npm install","title":"Environment setup"},{"location":"customization/#development-mode","text":"Start the Webpack watchdog with: npm start Then, in a second session, start the MkDocs server with: mkdocs serve Point your browser to localhost:8000 and you should see this documentation in front of you. Automatically generated files Never make any changes in the material directory, as the contents of this directory are automatically generated from the src directory and will be overridden when the theme is built.","title":"Development mode"},{"location":"customization/#build-process","text":"When you've finished making your changes, you can build the theme by invoking: npm run build This triggers the production-level compilation and minification of all stylesheets and JavaScript sources. When the command exits, the final files are located in the material directory. Add the theme_dir variable pointing to the aforementioned directory in your original mkdocs.yml . Now you can run mkdocs build and you should see your documentation with your changes to the original theme.","title":"Build process"},{"location":"data-privacy/","text":"Data privacy \u00b6 In itself, Material for MkDocs does not perform any tracking and should adhere to the General Data Protection Regulation (GDPR), but it integrates with some third-party services that may not. Third-party services \u00b6 Google Fonts \u00b6 Material for MkDocs makes fonts easily configurable by relying on Google Fonts CDN. Embedding fonts from Google is currently within a gray area as there's no official statement or ruling regarding GDPR compliance and the topic is still actively discussed . If you need to ensure GDPR compliance, you may disable the usage of the Google Font CDN with: theme : font : false When Google Fonts are disabled, Material for MkDocs will default to Helvetica Neue and Monaco with their corresponding fall backs, relying on system fonts. You can easily include your own, self-hosted webfont by overriding the fonts block. Google Analytics and Disqus \u00b6 Material for MkDocs comes with optional Google Analytics and Disqus integrations, both of which must be enabled explicitly.","title":"Data privacy"},{"location":"data-privacy/#data-privacy","text":"In itself, Material for MkDocs does not perform any tracking and should adhere to the General Data Protection Regulation (GDPR), but it integrates with some third-party services that may not.","title":"Data privacy"},{"location":"data-privacy/#third-party-services","text":"","title":"Third-party services"},{"location":"data-privacy/#google-fonts","text":"Material for MkDocs makes fonts easily configurable by relying on Google Fonts CDN. Embedding fonts from Google is currently within a gray area as there's no official statement or ruling regarding GDPR compliance and the topic is still actively discussed . If you need to ensure GDPR compliance, you may disable the usage of the Google Font CDN with: theme : font : false When Google Fonts are disabled, Material for MkDocs will default to Helvetica Neue and Monaco with their corresponding fall backs, relying on system fonts. You can easily include your own, self-hosted webfont by overriding the fonts block.","title":"Google Fonts"},{"location":"data-privacy/#google-analytics-and-disqus","text":"Material for MkDocs comes with optional Google Analytics and Disqus integrations, both of which must be enabled explicitly.","title":"Google Analytics and Disqus"},{"location":"getting-started/","text":"Getting started \u00b6 Installation \u00b6 While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image . with pip recommended \u00b6 Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes. with docker recommended \u00b6 The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material with git \u00b6 Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material . Configuration \u00b6 Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true Feature flags \u00b6 These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml . Instant loading \u00b6 The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches. Tabs \u00b6 The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages. Language \u00b6 Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl Color scheme \u00b6 Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Color palette \u00b6 The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; } Primary color \u00b6 Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Accent color \u00b6 Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) }) Fonts \u00b6 Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false Icons \u00b6 Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown ! Logo \u00b6 Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer. Favicon \u00b6 Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png Extras \u00b6 Adding a source repository \u00b6 To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not. Adding social links \u00b6 Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link. Adding a Web App Manifest \u00b6 A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest Integrations \u00b6 Google Analytics \u00b6 MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q . Disqus \u00b6 Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata . Extensions \u00b6 Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions Plugins \u00b6 MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Getting started"},{"location":"getting-started/#getting-started","text":"","title":"Getting started"},{"location":"getting-started/#installation","text":"While there are several ways of installing Material for MkDocs, the recommended methods are either by using pip \u2013 the Python package manager \u2013 or by pulling the official Docker image .","title":"Installation"},{"location":"getting-started/#with-pip-recommended","text":"Material for MkDocs can be installed with pip : pip install mkdocs-material Note that this will automatically install compatible versions of MkDocs , Markdown , Pygments and PyMdown Extensions . Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. Installation in a virtual environment The best way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . Don't know what this is or how to set it up? We recommend to start by reading a tutorial on virtual environments for Python. Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you could be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes.","title":"with pip recommended"},{"location":"getting-started/#with-docker-recommended","text":"The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Pull the image for the latest version with: docker pull squidfunk/mkdocs-material The mkdocs executable is provided as an entry point and serve is the default command. Start the development server in your project root \u2013 the folder where mkdocs.yml resides \u2014 with: Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material","title":"with docker recommended"},{"location":"getting-started/#with-git","text":"Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version: git clone https://github.com/squidfunk/mkdocs-material.git The theme will reside in the folder mkdocs-material/material .","title":"with git"},{"location":"getting-started/#configuration","text":"Depending on your installation method, you can now add the following lines to mkdocs.yml in your project root. If you installed Material for MkDocs using a package manager, add: theme : name : material If you cloned Material for MkDocs from GitHub add: theme : name : null custom_dir : mkdocs-material/material MkDocs includes a development server, so you can preview your changes as you write your documentation. The development server can be started with the following command: mkdocs serve Point your browser to http://localhost:8000 and your documentation should greet you in a new look. If you're starting from scratch, the following configuration can be used as a starting point: Example configuration This is an excerpt from the mkdocs.yml used to render these pages: # Project information site_name : Material for MkDocs site_description : A Material Design theme for MkDocs site_author : Martin Donath site_url : https://squidfunk.github.io/mkdocs-material/ # Repository repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material # Copyright copyright : Copyright &copy; 2016 - 2020 Martin Donath # Configuration theme : name : material language : en palette : primary : indigo accent : indigo font : text : Roboto code : Roboto Mono # Extras extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk # Google Analytics google_analytics : - UA-XXXXXXXX-X - auto # Extensions markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true","title":"Configuration"},{"location":"getting-started/#feature-flags","text":"These optional features are hidden behind flags and can be explicitly enabled in mkdocs.yml .","title":"Feature flags"},{"location":"getting-started/#instant-loading","text":"The (still experimental) instant loading feature will intercept clicks on all internal links and dispatch them directly via XHR without a full page reload. It can be enabled from mkdocs.yml with: theme : features : - instant The resulting page is parsed and injected and all event handlers and components are automatically rebound. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a huge search index, as the search index will now remain intact in-between document switches.","title":"Instant loading"},{"location":"getting-started/#tabs","text":"The tabs feature will render top-level subsections in another navigational layer below the header on big screens (but leave them untouched on mobile). It can be enabled from mkdocs.yml with: theme : features : - tabs Note that all top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml will be grouped under the first tab which will receive the title of the first page. This means that there will effectively be no collapsible subsections for the first tab, as each subsection is rendered as another tab. If you want more fine-grained control, i.e., collapsible subsections for the first tab, you can move all top-level pages into a subsection , so that the top-level is entirely made up of subsections. Note that tabs are only shown for larger screens, so make sure that navigation is plausible on mobile devices. As an example, see the mkdocs.yml used to render these pages.","title":"Tabs"},{"location":"getting-started/#language","text":"Default: en Material for MkDocs supports internationalization (i18n) and provides translations for all template variables and labels. You can set the language from mkdocs.yml with: theme : language : en The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } af / Afrikaans ar / Arabic my / Burmese ca / Catalan zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) hr / Croatian cs / Czech da / Danish nl / Dutch en / English et / Estonian fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian nn / Norwegian (Nynorsk) fa / Persian pl / Polish pt / Portuguese ro / Romanian ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak si / Slovenian es / Spanish sv / Swedish th / Thai tr / Turkish uk / Ukrainian vi / Vietnamese Add language While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : rtl","title":"Language"},{"location":"getting-started/#color-scheme","text":"Default: default Material for MkDocs supports two color schemes: a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set from mkdocs.yml : theme : palette : scheme : slate Click on a color name to change the color scheme of the theme: .md-typeset button[data-md-color-scheme] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-scheme]:hover { opacity: 0.75; } .md-typeset button[data-md-color-scheme] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { var attr = \"data-md-color-scheme\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Color scheme"},{"location":"getting-started/#color-palette","text":"The Material Design color palette comes with 20 hues, all of which are included with Material for MkDocs. Primary and accent colors can be set from the project root's mkdocs.yml : theme : palette : primary : indigo accent : indigo If the colors are set with these configuration options, an additional CSS file that includes the hues of the color palette is automatically included and linked from the template. Custom colors with CSS variables Material for MkDocs defines all colors as CSS variables. If you want to customize the colors beyond the palette (e.g. to use your brand's colors), you can add an additional stylesheet and override the defaults: : root { /* Default color shades */ -- md-default-fg-color : ... ; -- md-default-fg-color--light : ... ; -- md-default-fg-color--lighter : ... ; -- md-default-fg-color--lightest : ... ; -- md-default-bg-color : ... ; -- md-default-bg-color--light : ... ; -- md-default-bg-color--lighter : ... ; -- md-default-bg-color--lightest : ... ; /* Primary color shades */ -- md-primary-fg-color : ... ; -- md-primary-fg-color--light : ... ; -- md-primary-fg-color--dark : ... ; -- md-primary-bg-color : ... ; -- md-primary-bg-color--light : ... ; /* Accent color shades */ -- md-accent-fg-color : ... ; -- md-accent-fg-color--transparent : ... ; -- md-accent-bg-color : ... ; -- md-accent-bg-color--light : ... ; /* Code block color shades */ -- md-code-bg-color : ... ; -- md-code-fg-color : ... ; }","title":"Color palette"},{"location":"getting-started/#primary-color","text":"Default: indigo Click on a color name to change the primary color of the theme: .md-typeset button[data-md-color-primary] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-primary]:hover { opacity: 0.75; } .md-typeset button[data-md-color-primary] > code { display: block; color: var(--md-primary-bg-color); background-color: var(--md-primary-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { var attr = \"data-md-color-primary\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Primary color"},{"location":"getting-started/#accent-color","text":"Default: indigo Click on a color name to change the accent color of the theme: .md-typeset button[data-md-color-accent] { cursor: pointer; transition: opacity 250ms; } .md-typeset button[data-md-color-accent]:hover { opacity: 0.75; } .md-typeset button[data-md-color-accent] > code { display: block; color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { var attr = \"data-md-color-accent\" button.addEventListener(\"click\", function() { document.body.setAttribute(attr, this.getAttribute(attr)) }) })","title":"Accent color"},{"location":"getting-started/#fonts","text":"Default: Roboto and Roboto Mono The Roboto font family is the default font included with the theme, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from Google Fonts and can be changed to any valid webfont, like for example the Ubuntu font family : theme : font : text : Ubuntu code : Ubuntu Mono The text font will be loaded in weights 400 and 700 , the monospaced font in regular weight. If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, just set font to false : theme : font : false","title":"Fonts"},{"location":"getting-started/#icons","text":"Default: material/library and fontawesome/brands/git-alt Material for MkDocs uses icons in several places. Currently, the following icons can be changed from mkdocs.yml : the logo icon, the repository icon and the social link icons . While the social link icons are tied to the respective entries, the other icons can be changed by referencing a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: theme : icon : logo : material/library repo : fontawesome/brands/git-alt All icons are directly inlined as *.svg files, so no further requests will be made. Icon sets which are bundled with Material for MkDocs: Material Design icons ( material ): 5.1k icons FontAwesome icons ( fontawesome ): 1.6k icons GitHub's Octicons ( octicons ): 200 icons You can use all those icons directly from Markdown !","title":"Icons"},{"location":"getting-started/#logo","text":"Default: icon set through theme.icon.logo If you want to replace the icon in the header (screen) and drawer (mobile) with your brand's logo, you can place an image file in your docs folder and use the following option in mkdocs.yml : theme : logo : images/logo.svg Ideally, the image should be a square with a minimum resolution of 96x96, leave some room towards the edges and be composed of high contrast areas on a transparent ground, as it will be placed on the colored header and drawer.","title":"Logo"},{"location":"getting-started/#favicon","text":"Default: assets/images/favicon.png The default favicon can be changed with: theme : favicon : images/favicon.png","title":"Favicon"},{"location":"getting-started/#extras","text":"","title":"Extras"},{"location":"getting-started/#adding-a-source-repository","text":"To include a link to the repository of your project within your documentation, set the following variables via your project's mkdocs.yml : repo_name : squidfunk/mkdocs-material repo_url : https://github.com/squidfunk/mkdocs-material The name of the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is shown. Note that the repository icon can be explicitly set through theme.icon.repo . Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not.","title":"Adding a source repository"},{"location":"getting-started/#adding-social-links","text":"Social accounts can be linked in the footer of the documentation using the icons which are bundled with the theme. Note that each icon must point to a valid path (without the trailing .svg ) relative to the .icons folder which comes with the theme: extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk - icon : fontawesome/brands/linkedin link : https://linkedin.com/in/squidfunk By default, the link title will be set to the domain name, e.g. github.com . If you want to set a discernable name, e.g., to improve your Lighthouse score, you can set the name attribute on each social link.","title":"Adding social links"},{"location":"getting-started/#adding-a-web-app-manifest","text":"A Web App Manifest is a simple JSON file that tells the browser about your web application and how it should behave when installed on the user's mobile device or desktop. You can specify such a manifest in mkdocs.yml : extra : manifest : manifest.webmanifest","title":"Adding a Web App Manifest"},{"location":"getting-started/#integrations","text":"","title":"Integrations"},{"location":"getting-started/#google-analytics","text":"MkDocs makes it easy to integrate site tracking with Google Analytics. To enable tracking, which is disabled by default, you must add your tracking identifier to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Besides basic page views, site search can also be tracked to better understand how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q .","title":"Google Analytics"},{"location":"getting-started/#disqus","text":"Material for MkDocs is integrated with Disqus , so if you want to add a comments section to your documentation set the shortname of your Disqus project in mkdocs.yml : extra : disqus : your-shortname The comments section is inserted on every page, except the index page . The necessary JavaScript is automatically included. Requirements Note that site_url must be set in mkdocs.yml for the Disqus integration to load properly. Disqus can also be enabled or disabled for specific pages using Metadata .","title":"Disqus"},{"location":"getting-started/#extensions","text":"Markdown comes with several very useful extensions, the following of which are not enabled by default but highly recommended, so enabling them should definitely be a good idea: markdown_extensions : - admonition - codehilite : guess_lang : false - toc : permalink : true See the following list of extensions supported by Material for MkDocs including some more information on configuration and usage: Admonition Codehilite Footnotes Metadata Permalinks PyMdown Extensions","title":"Extensions"},{"location":"getting-started/#plugins","text":"MkDocs' plugin architecture makes it possible to add pre- or post-processing steps that sit between the theme and your documentation. For more information, see the following list of plugins tested and supported by Material for MkDocs including more information regarding installation and usage: Search (enabled by default) Minification Revision date Awesome pages For further reference, the MkDocs wiki contains a list of all available plugins .","title":"Plugins"},{"location":"license/","text":"License \u00b6 MIT License Copyright \u00a9 2016 - 2020 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright \u00a9 2016 - 2020 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"extensions/admonition/","text":"Admonition \u00b6 Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, e.g. summaries, notes, hints or warnings. Configuration \u00b6 Add the following lines to mkdocs.yml : markdown_extensions : - admonition Usage \u00b6 Admonitions follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Changing the title \u00b6 By default, the Admonition title will equal the type qualifier in titlecase. However, it can be changed by adding a quoted string after the type qualifier. Example: !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Removing the title \u00b6 Similar to changing the title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Embedded content \u00b6 Admonitions can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. The PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = '087652' ; Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Collapsible blocks \u00b6 The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default. Types \u00b6 Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by Material for MkDocs, whereas the default type, and thus fallback for unknown type qualifiers, is note . Note \u00b6 Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso Abstract \u00b6 Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr Info \u00b6 Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo Tip \u00b6 Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important Success \u00b6 Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done Question \u00b6 Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq Warning \u00b6 Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention Failure \u00b6 Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing Danger \u00b6 Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error Bug \u00b6 Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug Example \u00b6 Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example Quote \u00b6 Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Admonition"},{"location":"extensions/admonition/#admonition","text":"Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, e.g. summaries, notes, hints or warnings.","title":"Admonition"},{"location":"extensions/admonition/#configuration","text":"Add the following lines to mkdocs.yml : markdown_extensions : - admonition","title":"Configuration"},{"location":"extensions/admonition/#usage","text":"Admonitions follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Usage"},{"location":"extensions/admonition/#changing-the-title","text":"By default, the Admonition title will equal the type qualifier in titlecase. However, it can be changed by adding a quoted string after the type qualifier. Example: !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Changing the title"},{"location":"extensions/admonition/#removing-the-title","text":"Similar to changing the title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Removing the title"},{"location":"extensions/admonition/#embedded-content","text":"Admonitions can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. The PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = '087652' ; Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.","title":"Embedded content"},{"location":"extensions/admonition/#collapsible-blocks","text":"The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default.","title":"Collapsible blocks"},{"location":"extensions/admonition/#types","text":"Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by Material for MkDocs, whereas the default type, and thus fallback for unknown type qualifiers, is note .","title":"Types"},{"location":"extensions/admonition/#note","text":"Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso","title":"Note"},{"location":"extensions/admonition/#abstract","text":"Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr","title":"Abstract"},{"location":"extensions/admonition/#info","text":"Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo","title":"Info"},{"location":"extensions/admonition/#tip","text":"Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important","title":"Tip"},{"location":"extensions/admonition/#success","text":"Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done","title":"Success"},{"location":"extensions/admonition/#question","text":"Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq","title":"Question"},{"location":"extensions/admonition/#warning","text":"Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention","title":"Warning"},{"location":"extensions/admonition/#failure","text":"Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing","title":"Failure"},{"location":"extensions/admonition/#danger","text":"Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error","title":"Danger"},{"location":"extensions/admonition/#bug","text":"Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug","title":"Bug"},{"location":"extensions/admonition/#example","text":"Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example","title":"Example"},{"location":"extensions/admonition/#quote","text":"Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Quote"},{"location":"extensions/codehilite/","text":"CodeHilite \u00b6 CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. It uses Pygments during the compilation of the Markdown file to provide syntax highlighting for over 300 languages and has no JavaScript runtime dependency. Configuration \u00b6 Add the following lines to mkdocs.yml : markdown_extensions : - codehilite Usage \u00b6 Specifying the language \u00b6 The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways. via Markdown syntax recommended \u00b6 In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language identifier directly after the opening block. Example: ``` python import tensorflow as tf ``` Result: import tensorflow as tf via Shebang \u00b6 Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: #!/usr/bin/python import tensorflow as tf Result: #!/usr/bin/python import tensorflow as tf via three colons \u00b6 If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: :::python import tensorflow as tf Result: import tensorflow as tf Adding line numbers \u00b6 Line numbers can be added to a code block by enabling the linenums flag in mkdocs.yml or adding linenums=1 right after the language identifier: markdown_extensions : - codehilite : linenums : true Example: ``` python linenums=\"1\" \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Grouping code blocks \u00b6 The Tabbed extension which is part of the PyMdown Extensions package adds support for grouping Markdown blocks with tabs. This is especially useful for documenting projects with multiple language bindings. Example: === \"Bash\" ``` bash #!/bin/bash echo \"Hello world!\" ``` === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` === \"C#\" ``` c# using System; class Program { static void Main(string[] args) { Console.WriteLine(\"Hello world!\"); } } ``` Result: Bash #!/bin/bash echo \"Hello world!\" C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( \"Hello world!\" ); } } Highlighting specific lines \u00b6 Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language identifier. Line counts start at 1. Example: ``` python hl_lines=\"3 4\" \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Supported languages excerpt \u00b6 CodeHilite uses Pygments , a generic syntax highlighter with support for over 300 languages , so the following list of examples is just an excerpt. Bash \u00b6 #!/bin/bash for OPT in \" $@ \" do case \" $OPT \" in '-f' ) canonicalize = 1 ;; '-n' ) switchlf = \"-n\" ;; esac done # readlink -f function __readlink_f { target = \" $1 \" while test -n \" $target \" ; do filepath = \" $target \" cd ` dirname \" $filepath \" ` target = ` readlink \" $filepath \" ` done /bin/echo $switchlf ` pwd -P ` / ` basename \" $filepath \" ` } if [ ! \" $canonicalize \" ] ; then readlink $switchlf \" $@ \" else for file in \" $@ \" do case \" $file \" in -* ) ;; * ) __readlink_f \" $file \" ;; esac done fi exit $? C \u00b6 extern size_t pb_varint_scan ( const uint8_t data [], size_t left ) { assert ( data && left ); left = left > 10 ? 10 : left ; #ifdef __SSE2__ /* Mapping: remaining bytes ==> bitmask */ static const int mask_map [] = { 0x0000 , 0x0001 , 0x0003 , 0x0007 , 0x000F , 0x001F , 0x003F , 0x007F , 0x00FF , 0x01FF , 0x03FF }; /* Load buffer into 128-bit integer and create high-bit mask */ __m128i temp = _mm_loadu_si128 (( const __m128i * ) data ); __m128i high = _mm_set1_epi8 ( 0x80 ); /* Intersect and extract mask with high-bits set */ int mask = _mm_movemask_epi8 ( _mm_and_si128 ( temp , high )); mask = ( mask & mask_map [ left ]) ^ mask_map [ left ]; /* Count trailing zeroes */ return mask ? __builtin_ctz ( mask ) + 1 : 0 ; #else /* Linear scan */ size_t size = 0 ; while ( data [ size ++ ] & 0x80 ) if ( !-- left ) return 0 ; return size ; #endif /* __SSE2__ */ } C++ \u00b6 Extension :: Extension ( const Descriptor * descriptor , const Descriptor * scope ) : descriptor_ ( descriptor ), scope_ ( scope ) { /* Extract full name for signature */ variables_ [ \"signature\" ] = descriptor_ -> full_name (); /* Prepare message symbol */ variables_ [ \"message\" ] = StringReplace ( variables_ [ \"signature\" ], \".\" , \"_\" , true ); LowerString ( & ( variables_ [ \"message\" ])); /* Suffix scope to identifiers, if given */ string suffix ( \"\" ); if ( scope_ ) { suffix = scope_ -> full_name (); /* Check if the base and extension types are in the same package */ if ( ! scope_ -> file () -> package (). compare ( descriptor_ -> file () -> package ())) suffix = StripPrefixString ( suffix , scope_ -> file () -> package () + \".\" ); /* Append to signature */ variables_ [ \"signature\" ] += \".[\" + suffix + \"]\" ; suffix = \"_\" + suffix ; } /* Prepare extension symbol */ variables_ [ \"extension\" ] = StringReplace ( suffix , \".\" , \"_\" , true ); LowerString ( & ( variables_ [ \"extension\" ])); } C# \u00b6 public static void Send ( Socket socket , byte [] buffer , int offset , int size , int timeout ) { int startTickCount = Environment . TickCount ; int sent = 0 ; do { if ( Environment . TickCount > startTickCount + timeout ) throw new Exception ( \"Timeout.\" ); try { sent += socket . Send ( buffer , offset + sent , size - sent , SocketFlags . None ); } catch ( SocketException ex ) { if ( ex . SocketErrorCode == SocketError . WouldBlock || ex . SocketErrorCode == SocketError . IOPending || ex . SocketErrorCode == SocketError . NoBufferSpaceAvailable ) { /* Socket buffer is probably full, wait and try again */ Thread . Sleep ( 30 ); } else { throw ex ; } } } while ( sent < size ); } Clojure \u00b6 ( clojure-version ) ( defn partition-when [ f ] ( fn [ rf ] ( let [ a ( java.util.ArrayList. ) fval ( volatile! false )] ( fn ([] ( rf )) ([ result ] ( let [ result ( if ( .isEmpty a ) result ( let [ v ( vec ( .toArray a ))] ;; Clear first ( .clear a ) ( unreduced ( rf result v ))))] ( rf result ))) ([ result input ] ( if-not ( and ( f input ) @ fval ) ( do ( vreset! fval true ) ( .add a input ) result ) ( let [ v ( vec ( .toArray a ))] ( .clear a ) ( let [ ret ( rf result v )] ( when-not ( reduced? ret ) ( .add a input )) ret )))))))) ( into [] ( partition-when # ( .startsWith % \">>\" )) [ \"1d\" \"33\" \">> 1\" \">> 2\" \"22\" \">> 3\" ]) Diff \u00b6 Index: grunt.js =================================================================== --- grunt.js (revision 31200) +++ grunt.js (working copy) @@ -12,6 +12,7 @@ module.exports = function (grunt) { + console.log('hello world'); // Project configuration. grunt.initConfig({ lint: { @@ -19,10 +20,6 @@ 'packages/services.web/{!(test)/**/,}*.js', 'packages/error/**/*.js' ], - scripts: [ - 'grunt.js', - 'db/**/*.js' - ], browser: [ 'packages/web/server.js', 'packages/web/server/**/*.js', Docker \u00b6 FROM ubuntu # Install vnc, xvfb in order to create a 'fake' display and firefox RUN apt-get update && apt-get install -y x11vnc xvfb firefox RUN mkdir ~/.vnc # Setup a password RUN x11vnc -storepasswd 1234 ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick) RUN bash -c 'echo \"firefox\" >> /.bashrc' EXPOSE 5900 CMD [ \"x11vnc\" , \"-forever\" , \"-usepw\" , \"-create\" ] Elixir \u00b6 require Logger def accept ( port ) do { :ok , socket } = :gen_tcp . listen ( port , [ :binary , packet : :line , active : false , reuseaddr : true ]) Logger . info \"Accepting connections on port #{ port } \" loop_acceptor ( socket ) end defp loop_acceptor ( socket ) do { :ok , client } = :gen_tcp . accept ( socket ) serve ( client ) loop_acceptor ( socket ) end defp serve ( socket ) do socket |> read_line () |> write_line ( socket ) serve ( socket ) end defp read_line ( socket ) do { :ok , data } = :gen_tcp . recv ( socket , 0 ) data end defp write_line ( line , socket ) do :gen_tcp . send ( socket , line ) end Erlang \u00b6 circular ( Defs ) -> [ { { Type , Base }, Fields } || { { Type , Base }, Fields } <- Defs , Type == msg , circular ( Base , Defs ) ]. circular ( Base , Defs ) -> Fields = proplists : get_value ({ msg , Base }, Defs ), circular ( Defs , Fields , [ Base ]). circular (_ Defs , [], _ Path ) -> false ; circular ( Defs , [ Field | Fields ], Path ) -> case Field #field.type of { msg , Type } -> case lists : member ( Type , Path ) of false -> Children = proplists : get_value ({ msg , Type }, Defs ), case circular ( Defs , Children , [ Type | Path ]) of false -> circular ( Defs , Fields , Path ); true -> true end ; true -> Type == lists : last ( Path ) andalso ( length ( Path ) == 1 orelse not is_tree ( Path )) end ; _ -> circular ( Defs , Fields , Path ) end . F# \u00b6 /// Asynchronously download retangles from the server /// and decode the JSON format to F# Rectangle record let [< Js >] getRectangles () : Async < Rectangle [] > = async { let req = XMLHttpRequest () req . Open ( \"POST\" , \"/get\" , true ) let! resp = req . AsyncSend () return JSON . parse ( resp ) } /// Repeatedly update rectangles after 0.5 sec let [< Js >] updateLoop () = async { while true do do ! Async . Sleep ( 500 ) let! rects = getRectangles () cleanRectangles () rects |> Array . iter createRectangle } Go \u00b6 package main import \"fmt\" func counter ( id int , channel chan int , closer bool ) { for i := 0 ; i < 10000000 ; i ++ { fmt . Println ( \"process\" , id , \" send\" , i ) channel <- 1 } if closer { close ( channel ) } } func main () { channel := make ( chan int ) go counter ( 1 , channel , false ) go counter ( 2 , channel , true ) x := 0 // receiving data from channel for i := range channel { fmt . Println ( \"receiving\" ) x += i } fmt . Println ( x ) } HTML \u00b6 <!doctype html> < html class = \"no-js\" lang = \"\" > < head > < meta charset = \"utf-8\" > < meta http-equiv = \"x-ua-compatible\" content = \"ie=edge\" > < title > HTML5 Boilerplate </ title > < meta name = \"description\" content = \"\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < link rel = \"apple-touch-icon\" href = \"apple-touch-icon.png\" > < link rel = \"stylesheet\" href = \"css/normalize.css\" > < link rel = \"stylesheet\" href = \"css/main.css\" > < script src = \"js/vendor/modernizr-2.8.3.min.js\" ></ script > </ head > < body > < p > Hello world! This is HTML5 Boilerplate. </ p > </ body > </ html > Java \u00b6 import java.util.LinkedList ; import java.lang.reflect.Array ; public class UnsortedHashSet < E > { private static final double LOAD_FACTOR_LIMIT = 0.7 ; private int size ; private LinkedList < E >[] con ; public UnsortedHashSet () { con = ( LinkedList < E >[] )( new LinkedList [ 10 ] ); } public boolean add ( E obj ) { int oldSize = size ; int index = Math . abs ( obj . hashCode ()) % con . length ; if ( con [ index ] == null ) con [ index ] = new LinkedList < E > (); if ( ! con [ index ] . contains ( obj )) { con [ index ] . add ( obj ); size ++ ; } if ( 1.0 * size / con . length > LOAD_FACTOR_LIMIT ) resize (); return oldSize != size ; } private void resize () { UnsortedHashSet < E > temp = new UnsortedHashSet < E > (); temp . con = ( LinkedList < E >[] )( new LinkedList [ con . length * 2 + 1 ] ); for ( int i = 0 ; i < con . length ; i ++ ) { if ( con [ i ] != null ) for ( E e : con [ i ] ) temp . add ( e ); } con = temp . con ; } public int size () { return size ; } } JavaScript \u00b6 var Math = require ( 'lib/math' ); var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; var e = exports . e = 2.71828182846 ; exports [ 'default' ] = function ( x ) { return Math . exp ( x ); }; module . exports = _extends ( exports [ 'default' ], exports ); JSON \u00b6 { \"name\" : \"mkdocs-material\" , \"version\" : \"0.2.4\" , \"description\" : \"A Material Design theme for MkDocs\" , \"homepage\" : \"http://squidfunk.github.io/mkdocs-material/\" , \"authors\" : [ \"squidfunk <martin.donath@squidfunk.com>\" ], \"license\" : \"MIT\" , \"main\" : \"Gulpfile.js\" , \"scripts\" : { \"start\" : \"./node_modules/.bin/gulp watch --mkdocs\" , \"build\" : \"./node_modules/.bin/gulp build --production\" } ... } Julia \u00b6 using MXNet mlp = @mx . chain mx . Variable ( : data ) => mx . FullyConnected ( name =: fc1 , num_hidden = 128 ) => mx . Activation ( name =: relu1 , act_type =: relu ) => mx . FullyConnected ( name =: fc2 , num_hidden = 64 ) => mx . Activation ( name =: relu2 , act_type =: relu ) => mx . FullyConnected ( name =: fc3 , num_hidden = 10 ) => mx . SoftmaxOutput ( name =: softmax ) # data provider batch_size = 100 include ( Pkg . dir ( \"MXNet\" , \"examples\" , \"mnist\" , \"mnist-data.jl\" )) train_provider , eval_provider = get_mnist_providers ( batch_size ) # setup model model = mx . FeedForward ( mlp , context = mx . cpu ()) # optimization algorithm optimizer = mx . SGD ( lr = 0.1 , momentum = 0.9 ) # fit parameters mx . fit ( model , optimizer , train_provider , n_epoch = 20 , eval_data = eval_provider ) Lua \u00b6 local ffi = require ( \"ffi\" ) ffi . cdef [[ void Sleep(int ms); int poll(struct pollfd *fds, unsigned long nfds, int timeout); ]] local sleep if ffi . os == \"Windows\" then function sleep ( s ) ffi . C . Sleep ( s * 1000 ) end else function sleep ( s ) ffi . C . poll ( nil , 0 , s * 1000 ) end end for i = 1 , 160 do io.write ( \".\" ); io.flush () sleep ( 0.01 ) end io.write ( \" \\n \" ) MySQL \u00b6 SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = '087652' ; PHP \u00b6 <?php // src/AppBundle/Controller/LuckyController.php namespace AppBundle\\Controller ; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ; use Symfony\\Component\\HttpFoundation\\Response ; class LuckyController { /** * @Route(\"/lucky/number\") */ public function numberAction () { $number = mt_rand ( 0 , 100 ); return new Response ( '<html><body>Lucky number: ' . $number . '</body></html>' ); } } Protocol Buffers \u00b6 syntax = \"proto2\" ; package caffe ; // Specifies the shape (dimensions) of a Blob. message BlobShape { repeated int64 dim = 1 [ packed = true ]; } message BlobProto { optional BlobShape shape = 7 ; repeated float data = 5 [ packed = true ]; repeated float diff = 6 [ packed = true ]; // 4D dimensions -- deprecated. Use \"shape\" instead. optional int32 num = 1 [ default = 0 ]; optional int32 channels = 2 [ default = 0 ]; optional int32 height = 3 [ default = 0 ]; optional int32 width = 4 [ default = 0 ]; } Python \u00b6 \"\"\" A very simple MNIST classifier. See extensive documentation at http://tensorflow.org/tutorials/mnist/beginners/index.md \"\"\" from __future__ import absolute_import from __future__ import division from __future__ import print_function # Import data from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf flags = tf . app . flags FLAGS = flags . FLAGS flags . DEFINE_string ( 'data_dir' , '/tmp/data/' , 'Directory for storing data' ) mnist = input_data . read_data_sets ( FLAGS . data_dir , one_hot = True ) sess = tf . InteractiveSession () # Create the model x = tf . placeholder ( tf . float32 , [ None , 784 ]) W = tf . Variable ( tf . zeros ([ 784 , 10 ])) b = tf . Variable ( tf . zeros ([ 10 ])) y = tf . nn . softmax ( tf . matmul ( x , W ) + b ) Ruby \u00b6 require 'finity/event' require 'finity/machine' require 'finity/state' require 'finity/transition' require 'finity/version' module Finity class InvalidCallback < StandardError ; end class MissingCallback < StandardError ; end class InvalidState < StandardError ; end # Class methods to be injected into the including class upon inclusion. module ClassMethods # Instantiate a new state machine for the including class by accepting a # block with state and event (and subsequent transition) definitions. def finity options = {}, & block @finity ||= Machine . new self , options , & block end # Return the names of all registered states. def states @finity . states . map { | name , _ | name } end # Return the names of all registered events. def events @finity . events . map { | name , _ | name } end end # Inject methods into the including class upon inclusion. def self . included base base . extend ClassMethods end end Scala \u00b6 // Every record of this DataFrame contains the label and // features represented by a vector. val df = sqlContext . createDataFrame ( data ). toDF ( \"label\" , \"features\" ) // Set parameters for the algorithm. // Here, we limit the number of iterations to 10. val lr = new LogisticRegression (). setMaxIter ( 10 ) // Fit the model to the data. val model = lr . fit ( df ) // Inspect the model: get the feature weights. val weights = model . weights // Given a dataset, predict each point's label, and show the results. model . transform ( df ). show () g XML \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]> <?oxygen RNGSchema=\"some.rng\" type=\"xml\"?> <xs:main-Tag xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <!-- This is a sample comment --> <childTag attribute= \"Quoted Value\" another-attribute= 'Single quoted value' a-third-attribute= '123' > <withTextContent> Some text content </withTextContent> <withEntityContent> Some text content with &lt; entities &gt; and mentioning uint8_t and int32_t </withEntityContent> <otherTag attribute= 'Single quoted Value' /> </childTag> <![CDATA[ some CData ]]> </main-Tag>","title":"CodeHilite"},{"location":"extensions/codehilite/#codehilite","text":"CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. It uses Pygments during the compilation of the Markdown file to provide syntax highlighting for over 300 languages and has no JavaScript runtime dependency.","title":"CodeHilite"},{"location":"extensions/codehilite/#configuration","text":"Add the following lines to mkdocs.yml : markdown_extensions : - codehilite","title":"Configuration"},{"location":"extensions/codehilite/#usage","text":"","title":"Usage"},{"location":"extensions/codehilite/#specifying-the-language","text":"The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways.","title":"Specifying the language"},{"location":"extensions/codehilite/#via-markdown-syntax-recommended","text":"In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language identifier directly after the opening block. Example: ``` python import tensorflow as tf ``` Result: import tensorflow as tf","title":"via Markdown syntax recommended"},{"location":"extensions/codehilite/#via-shebang","text":"Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: #!/usr/bin/python import tensorflow as tf Result: #!/usr/bin/python import tensorflow as tf","title":"via Shebang"},{"location":"extensions/codehilite/#via-three-colons","text":"If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: :::python import tensorflow as tf Result: import tensorflow as tf","title":"via three colons"},{"location":"extensions/codehilite/#adding-line-numbers","text":"Line numbers can be added to a code block by enabling the linenums flag in mkdocs.yml or adding linenums=1 right after the language identifier: markdown_extensions : - codehilite : linenums : true Example: ``` python linenums=\"1\" \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Adding line numbers"},{"location":"extensions/codehilite/#grouping-code-blocks","text":"The Tabbed extension which is part of the PyMdown Extensions package adds support for grouping Markdown blocks with tabs. This is especially useful for documenting projects with multiple language bindings. Example: === \"Bash\" ``` bash #!/bin/bash echo \"Hello world!\" ``` === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` === \"C#\" ``` c# using System; class Program { static void Main(string[] args) { Console.WriteLine(\"Hello world!\"); } } ``` Result: Bash #!/bin/bash echo \"Hello world!\" C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( \"Hello world!\" ); } }","title":"Grouping code blocks"},{"location":"extensions/codehilite/#highlighting-specific-lines","text":"Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language identifier. Line counts start at 1. Example: ``` python hl_lines=\"3 4\" \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Highlighting specific lines"},{"location":"extensions/codehilite/#supported-languages-excerpt","text":"CodeHilite uses Pygments , a generic syntax highlighter with support for over 300 languages , so the following list of examples is just an excerpt.","title":"Supported languages excerpt"},{"location":"extensions/codehilite/#bash","text":"#!/bin/bash for OPT in \" $@ \" do case \" $OPT \" in '-f' ) canonicalize = 1 ;; '-n' ) switchlf = \"-n\" ;; esac done # readlink -f function __readlink_f { target = \" $1 \" while test -n \" $target \" ; do filepath = \" $target \" cd ` dirname \" $filepath \" ` target = ` readlink \" $filepath \" ` done /bin/echo $switchlf ` pwd -P ` / ` basename \" $filepath \" ` } if [ ! \" $canonicalize \" ] ; then readlink $switchlf \" $@ \" else for file in \" $@ \" do case \" $file \" in -* ) ;; * ) __readlink_f \" $file \" ;; esac done fi exit $?","title":"Bash"},{"location":"extensions/codehilite/#c","text":"extern size_t pb_varint_scan ( const uint8_t data [], size_t left ) { assert ( data && left ); left = left > 10 ? 10 : left ; #ifdef __SSE2__ /* Mapping: remaining bytes ==> bitmask */ static const int mask_map [] = { 0x0000 , 0x0001 , 0x0003 , 0x0007 , 0x000F , 0x001F , 0x003F , 0x007F , 0x00FF , 0x01FF , 0x03FF }; /* Load buffer into 128-bit integer and create high-bit mask */ __m128i temp = _mm_loadu_si128 (( const __m128i * ) data ); __m128i high = _mm_set1_epi8 ( 0x80 ); /* Intersect and extract mask with high-bits set */ int mask = _mm_movemask_epi8 ( _mm_and_si128 ( temp , high )); mask = ( mask & mask_map [ left ]) ^ mask_map [ left ]; /* Count trailing zeroes */ return mask ? __builtin_ctz ( mask ) + 1 : 0 ; #else /* Linear scan */ size_t size = 0 ; while ( data [ size ++ ] & 0x80 ) if ( !-- left ) return 0 ; return size ; #endif /* __SSE2__ */ }","title":"C"},{"location":"extensions/codehilite/#c_1","text":"Extension :: Extension ( const Descriptor * descriptor , const Descriptor * scope ) : descriptor_ ( descriptor ), scope_ ( scope ) { /* Extract full name for signature */ variables_ [ \"signature\" ] = descriptor_ -> full_name (); /* Prepare message symbol */ variables_ [ \"message\" ] = StringReplace ( variables_ [ \"signature\" ], \".\" , \"_\" , true ); LowerString ( & ( variables_ [ \"message\" ])); /* Suffix scope to identifiers, if given */ string suffix ( \"\" ); if ( scope_ ) { suffix = scope_ -> full_name (); /* Check if the base and extension types are in the same package */ if ( ! scope_ -> file () -> package (). compare ( descriptor_ -> file () -> package ())) suffix = StripPrefixString ( suffix , scope_ -> file () -> package () + \".\" ); /* Append to signature */ variables_ [ \"signature\" ] += \".[\" + suffix + \"]\" ; suffix = \"_\" + suffix ; } /* Prepare extension symbol */ variables_ [ \"extension\" ] = StringReplace ( suffix , \".\" , \"_\" , true ); LowerString ( & ( variables_ [ \"extension\" ])); }","title":"C++"},{"location":"extensions/codehilite/#c_2","text":"public static void Send ( Socket socket , byte [] buffer , int offset , int size , int timeout ) { int startTickCount = Environment . TickCount ; int sent = 0 ; do { if ( Environment . TickCount > startTickCount + timeout ) throw new Exception ( \"Timeout.\" ); try { sent += socket . Send ( buffer , offset + sent , size - sent , SocketFlags . None ); } catch ( SocketException ex ) { if ( ex . SocketErrorCode == SocketError . WouldBlock || ex . SocketErrorCode == SocketError . IOPending || ex . SocketErrorCode == SocketError . NoBufferSpaceAvailable ) { /* Socket buffer is probably full, wait and try again */ Thread . Sleep ( 30 ); } else { throw ex ; } } } while ( sent < size ); }","title":"C&#35;"},{"location":"extensions/codehilite/#clojure","text":"( clojure-version ) ( defn partition-when [ f ] ( fn [ rf ] ( let [ a ( java.util.ArrayList. ) fval ( volatile! false )] ( fn ([] ( rf )) ([ result ] ( let [ result ( if ( .isEmpty a ) result ( let [ v ( vec ( .toArray a ))] ;; Clear first ( .clear a ) ( unreduced ( rf result v ))))] ( rf result ))) ([ result input ] ( if-not ( and ( f input ) @ fval ) ( do ( vreset! fval true ) ( .add a input ) result ) ( let [ v ( vec ( .toArray a ))] ( .clear a ) ( let [ ret ( rf result v )] ( when-not ( reduced? ret ) ( .add a input )) ret )))))))) ( into [] ( partition-when # ( .startsWith % \">>\" )) [ \"1d\" \"33\" \">> 1\" \">> 2\" \"22\" \">> 3\" ])","title":"Clojure"},{"location":"extensions/codehilite/#diff","text":"Index: grunt.js =================================================================== --- grunt.js (revision 31200) +++ grunt.js (working copy) @@ -12,6 +12,7 @@ module.exports = function (grunt) { + console.log('hello world'); // Project configuration. grunt.initConfig({ lint: { @@ -19,10 +20,6 @@ 'packages/services.web/{!(test)/**/,}*.js', 'packages/error/**/*.js' ], - scripts: [ - 'grunt.js', - 'db/**/*.js' - ], browser: [ 'packages/web/server.js', 'packages/web/server/**/*.js',","title":"Diff"},{"location":"extensions/codehilite/#docker","text":"FROM ubuntu # Install vnc, xvfb in order to create a 'fake' display and firefox RUN apt-get update && apt-get install -y x11vnc xvfb firefox RUN mkdir ~/.vnc # Setup a password RUN x11vnc -storepasswd 1234 ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick) RUN bash -c 'echo \"firefox\" >> /.bashrc' EXPOSE 5900 CMD [ \"x11vnc\" , \"-forever\" , \"-usepw\" , \"-create\" ]","title":"Docker"},{"location":"extensions/codehilite/#elixir","text":"require Logger def accept ( port ) do { :ok , socket } = :gen_tcp . listen ( port , [ :binary , packet : :line , active : false , reuseaddr : true ]) Logger . info \"Accepting connections on port #{ port } \" loop_acceptor ( socket ) end defp loop_acceptor ( socket ) do { :ok , client } = :gen_tcp . accept ( socket ) serve ( client ) loop_acceptor ( socket ) end defp serve ( socket ) do socket |> read_line () |> write_line ( socket ) serve ( socket ) end defp read_line ( socket ) do { :ok , data } = :gen_tcp . recv ( socket , 0 ) data end defp write_line ( line , socket ) do :gen_tcp . send ( socket , line ) end","title":"Elixir"},{"location":"extensions/codehilite/#erlang","text":"circular ( Defs ) -> [ { { Type , Base }, Fields } || { { Type , Base }, Fields } <- Defs , Type == msg , circular ( Base , Defs ) ]. circular ( Base , Defs ) -> Fields = proplists : get_value ({ msg , Base }, Defs ), circular ( Defs , Fields , [ Base ]). circular (_ Defs , [], _ Path ) -> false ; circular ( Defs , [ Field | Fields ], Path ) -> case Field #field.type of { msg , Type } -> case lists : member ( Type , Path ) of false -> Children = proplists : get_value ({ msg , Type }, Defs ), case circular ( Defs , Children , [ Type | Path ]) of false -> circular ( Defs , Fields , Path ); true -> true end ; true -> Type == lists : last ( Path ) andalso ( length ( Path ) == 1 orelse not is_tree ( Path )) end ; _ -> circular ( Defs , Fields , Path ) end .","title":"Erlang"},{"location":"extensions/codehilite/#f","text":"/// Asynchronously download retangles from the server /// and decode the JSON format to F# Rectangle record let [< Js >] getRectangles () : Async < Rectangle [] > = async { let req = XMLHttpRequest () req . Open ( \"POST\" , \"/get\" , true ) let! resp = req . AsyncSend () return JSON . parse ( resp ) } /// Repeatedly update rectangles after 0.5 sec let [< Js >] updateLoop () = async { while true do do ! Async . Sleep ( 500 ) let! rects = getRectangles () cleanRectangles () rects |> Array . iter createRectangle }","title":"F&#35;"},{"location":"extensions/codehilite/#go","text":"package main import \"fmt\" func counter ( id int , channel chan int , closer bool ) { for i := 0 ; i < 10000000 ; i ++ { fmt . Println ( \"process\" , id , \" send\" , i ) channel <- 1 } if closer { close ( channel ) } } func main () { channel := make ( chan int ) go counter ( 1 , channel , false ) go counter ( 2 , channel , true ) x := 0 // receiving data from channel for i := range channel { fmt . Println ( \"receiving\" ) x += i } fmt . Println ( x ) }","title":"Go"},{"location":"extensions/codehilite/#html","text":"<!doctype html> < html class = \"no-js\" lang = \"\" > < head > < meta charset = \"utf-8\" > < meta http-equiv = \"x-ua-compatible\" content = \"ie=edge\" > < title > HTML5 Boilerplate </ title > < meta name = \"description\" content = \"\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < link rel = \"apple-touch-icon\" href = \"apple-touch-icon.png\" > < link rel = \"stylesheet\" href = \"css/normalize.css\" > < link rel = \"stylesheet\" href = \"css/main.css\" > < script src = \"js/vendor/modernizr-2.8.3.min.js\" ></ script > </ head > < body > < p > Hello world! This is HTML5 Boilerplate. </ p > </ body > </ html >","title":"HTML"},{"location":"extensions/codehilite/#java","text":"import java.util.LinkedList ; import java.lang.reflect.Array ; public class UnsortedHashSet < E > { private static final double LOAD_FACTOR_LIMIT = 0.7 ; private int size ; private LinkedList < E >[] con ; public UnsortedHashSet () { con = ( LinkedList < E >[] )( new LinkedList [ 10 ] ); } public boolean add ( E obj ) { int oldSize = size ; int index = Math . abs ( obj . hashCode ()) % con . length ; if ( con [ index ] == null ) con [ index ] = new LinkedList < E > (); if ( ! con [ index ] . contains ( obj )) { con [ index ] . add ( obj ); size ++ ; } if ( 1.0 * size / con . length > LOAD_FACTOR_LIMIT ) resize (); return oldSize != size ; } private void resize () { UnsortedHashSet < E > temp = new UnsortedHashSet < E > (); temp . con = ( LinkedList < E >[] )( new LinkedList [ con . length * 2 + 1 ] ); for ( int i = 0 ; i < con . length ; i ++ ) { if ( con [ i ] != null ) for ( E e : con [ i ] ) temp . add ( e ); } con = temp . con ; } public int size () { return size ; } }","title":"Java"},{"location":"extensions/codehilite/#javascript","text":"var Math = require ( 'lib/math' ); var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; var e = exports . e = 2.71828182846 ; exports [ 'default' ] = function ( x ) { return Math . exp ( x ); }; module . exports = _extends ( exports [ 'default' ], exports );","title":"JavaScript"},{"location":"extensions/codehilite/#json","text":"{ \"name\" : \"mkdocs-material\" , \"version\" : \"0.2.4\" , \"description\" : \"A Material Design theme for MkDocs\" , \"homepage\" : \"http://squidfunk.github.io/mkdocs-material/\" , \"authors\" : [ \"squidfunk <martin.donath@squidfunk.com>\" ], \"license\" : \"MIT\" , \"main\" : \"Gulpfile.js\" , \"scripts\" : { \"start\" : \"./node_modules/.bin/gulp watch --mkdocs\" , \"build\" : \"./node_modules/.bin/gulp build --production\" } ... }","title":"JSON"},{"location":"extensions/codehilite/#julia","text":"using MXNet mlp = @mx . chain mx . Variable ( : data ) => mx . FullyConnected ( name =: fc1 , num_hidden = 128 ) => mx . Activation ( name =: relu1 , act_type =: relu ) => mx . FullyConnected ( name =: fc2 , num_hidden = 64 ) => mx . Activation ( name =: relu2 , act_type =: relu ) => mx . FullyConnected ( name =: fc3 , num_hidden = 10 ) => mx . SoftmaxOutput ( name =: softmax ) # data provider batch_size = 100 include ( Pkg . dir ( \"MXNet\" , \"examples\" , \"mnist\" , \"mnist-data.jl\" )) train_provider , eval_provider = get_mnist_providers ( batch_size ) # setup model model = mx . FeedForward ( mlp , context = mx . cpu ()) # optimization algorithm optimizer = mx . SGD ( lr = 0.1 , momentum = 0.9 ) # fit parameters mx . fit ( model , optimizer , train_provider , n_epoch = 20 , eval_data = eval_provider )","title":"Julia"},{"location":"extensions/codehilite/#lua","text":"local ffi = require ( \"ffi\" ) ffi . cdef [[ void Sleep(int ms); int poll(struct pollfd *fds, unsigned long nfds, int timeout); ]] local sleep if ffi . os == \"Windows\" then function sleep ( s ) ffi . C . Sleep ( s * 1000 ) end else function sleep ( s ) ffi . C . poll ( nil , 0 , s * 1000 ) end end for i = 1 , 160 do io.write ( \".\" ); io.flush () sleep ( 0.01 ) end io.write ( \" \\n \" )","title":"Lua"},{"location":"extensions/codehilite/#mysql","text":"SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = '087652' ;","title":"MySQL"},{"location":"extensions/codehilite/#php","text":"<?php // src/AppBundle/Controller/LuckyController.php namespace AppBundle\\Controller ; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ; use Symfony\\Component\\HttpFoundation\\Response ; class LuckyController { /** * @Route(\"/lucky/number\") */ public function numberAction () { $number = mt_rand ( 0 , 100 ); return new Response ( '<html><body>Lucky number: ' . $number . '</body></html>' ); } }","title":"PHP"},{"location":"extensions/codehilite/#protocol-buffers","text":"syntax = \"proto2\" ; package caffe ; // Specifies the shape (dimensions) of a Blob. message BlobShape { repeated int64 dim = 1 [ packed = true ]; } message BlobProto { optional BlobShape shape = 7 ; repeated float data = 5 [ packed = true ]; repeated float diff = 6 [ packed = true ]; // 4D dimensions -- deprecated. Use \"shape\" instead. optional int32 num = 1 [ default = 0 ]; optional int32 channels = 2 [ default = 0 ]; optional int32 height = 3 [ default = 0 ]; optional int32 width = 4 [ default = 0 ]; }","title":"Protocol Buffers"},{"location":"extensions/codehilite/#python","text":"\"\"\" A very simple MNIST classifier. See extensive documentation at http://tensorflow.org/tutorials/mnist/beginners/index.md \"\"\" from __future__ import absolute_import from __future__ import division from __future__ import print_function # Import data from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf flags = tf . app . flags FLAGS = flags . FLAGS flags . DEFINE_string ( 'data_dir' , '/tmp/data/' , 'Directory for storing data' ) mnist = input_data . read_data_sets ( FLAGS . data_dir , one_hot = True ) sess = tf . InteractiveSession () # Create the model x = tf . placeholder ( tf . float32 , [ None , 784 ]) W = tf . Variable ( tf . zeros ([ 784 , 10 ])) b = tf . Variable ( tf . zeros ([ 10 ])) y = tf . nn . softmax ( tf . matmul ( x , W ) + b )","title":"Python"},{"location":"extensions/codehilite/#ruby","text":"require 'finity/event' require 'finity/machine' require 'finity/state' require 'finity/transition' require 'finity/version' module Finity class InvalidCallback < StandardError ; end class MissingCallback < StandardError ; end class InvalidState < StandardError ; end # Class methods to be injected into the including class upon inclusion. module ClassMethods # Instantiate a new state machine for the including class by accepting a # block with state and event (and subsequent transition) definitions. def finity options = {}, & block @finity ||= Machine . new self , options , & block end # Return the names of all registered states. def states @finity . states . map { | name , _ | name } end # Return the names of all registered events. def events @finity . events . map { | name , _ | name } end end # Inject methods into the including class upon inclusion. def self . included base base . extend ClassMethods end end","title":"Ruby"},{"location":"extensions/codehilite/#scala","text":"// Every record of this DataFrame contains the label and // features represented by a vector. val df = sqlContext . createDataFrame ( data ). toDF ( \"label\" , \"features\" ) // Set parameters for the algorithm. // Here, we limit the number of iterations to 10. val lr = new LogisticRegression (). setMaxIter ( 10 ) // Fit the model to the data. val model = lr . fit ( df ) // Inspect the model: get the feature weights. val weights = model . weights // Given a dataset, predict each point's label, and show the results. model . transform ( df ). show () g","title":"Scala"},{"location":"extensions/codehilite/#xml","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]> <?oxygen RNGSchema=\"some.rng\" type=\"xml\"?> <xs:main-Tag xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <!-- This is a sample comment --> <childTag attribute= \"Quoted Value\" another-attribute= 'Single quoted value' a-third-attribute= '123' > <withTextContent> Some text content </withTextContent> <withEntityContent> Some text content with &lt; entities &gt; and mentioning uint8_t and int32_t </withEntityContent> <otherTag attribute= 'Single quoted Value' /> </childTag> <![CDATA[ some CData ]]> </main-Tag>","title":"XML"},{"location":"extensions/footnotes/","text":"Footnotes \u00b6 Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add inline footnotes to your documentation. Configuration \u00b6 Add the following lines to mkdocs.yml : markdown_extensions : - footnotes Usage \u00b6 The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document. Inserting the reference \u00b6 The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Inserting the content \u00b6 The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference. on a single line \u00b6 Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page on multiple lines \u00b6 Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Jump to footnote at the bottom of the page Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Footnotes"},{"location":"extensions/footnotes/#footnotes","text":"Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add inline footnotes to your documentation.","title":"Footnotes"},{"location":"extensions/footnotes/#configuration","text":"Add the following lines to mkdocs.yml : markdown_extensions : - footnotes","title":"Configuration"},{"location":"extensions/footnotes/#usage","text":"The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document.","title":"Usage"},{"location":"extensions/footnotes/#inserting-the-reference","text":"The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2","title":"Inserting the reference"},{"location":"extensions/footnotes/#inserting-the-content","text":"The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference.","title":"Inserting the content"},{"location":"extensions/footnotes/#on-a-single-line","text":"Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page","title":"on a single line"},{"location":"extensions/footnotes/#on-multiple-lines","text":"Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Jump to footnote at the bottom of the page Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"on multiple lines"},{"location":"extensions/metadata/","text":"Metadata \u00b6 Metadata is an extension included in the standard Markdown library that makes it possible to control certain properties in a page-specific context, e.g. the page title or description. Configuration \u00b6 Add the following lines to mkdocs.yml : markdown_extensions : - meta Usage \u00b6 Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: --- title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js --- # Headline ... See the next section which covers the supported metadata. Setting a hero \u00b6 Material for MkDocs exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Set heroes with metadata Linking sources \u00b6 When a document is related to a specific source file and the repo_url is defined inside the project's mkdocs.yml , the file can be linked using the source key: source: file.js The filename is appended to the repo_url set in mkdocs.yml , but can be prefixed with a path to ensure correct path resolving. The name of the source file is shown in the tooltip. Example: path: tree/master/docs/extensions source: metadata.md Redirecting to another page \u00b6 It's sometimes necessary to move documents around in the navigation tree and redirect users from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url . Overrides \u00b6 Page title \u00b6 The page title can be overridden on a per-document basis: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title. Page description \u00b6 The page description can also be overridden on a per-document basis: description : Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value. Disqus \u00b6 As described in the getting started guide , Disqus can be enabled on a per-document basis: disqus: your-shortname Disqus can also be disabled for a specific page by setting it to an empty value: disqus:","title":"Metadata"},{"location":"extensions/metadata/#metadata","text":"Metadata is an extension included in the standard Markdown library that makes it possible to control certain properties in a page-specific context, e.g. the page title or description.","title":"Metadata"},{"location":"extensions/metadata/#configuration","text":"Add the following lines to mkdocs.yml : markdown_extensions : - meta","title":"Configuration"},{"location":"extensions/metadata/#usage","text":"Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: --- title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js --- # Headline ... See the next section which covers the supported metadata.","title":"Usage"},{"location":"extensions/metadata/#setting-a-hero","text":"Material for MkDocs exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Set heroes with metadata","title":"Setting a hero"},{"location":"extensions/metadata/#linking-sources","text":"When a document is related to a specific source file and the repo_url is defined inside the project's mkdocs.yml , the file can be linked using the source key: source: file.js The filename is appended to the repo_url set in mkdocs.yml , but can be prefixed with a path to ensure correct path resolving. The name of the source file is shown in the tooltip. Example: path: tree/master/docs/extensions source: metadata.md","title":"Linking sources"},{"location":"extensions/metadata/#redirecting-to-another-page","text":"It's sometimes necessary to move documents around in the navigation tree and redirect users from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url .","title":"Redirecting to another page"},{"location":"extensions/metadata/#overrides","text":"","title":"Overrides"},{"location":"extensions/metadata/#page-title","text":"The page title can be overridden on a per-document basis: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title.","title":"Page title"},{"location":"extensions/metadata/#page-description","text":"The page description can also be overridden on a per-document basis: description : Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value.","title":"Page description"},{"location":"extensions/metadata/#disqus","text":"As described in the getting started guide , Disqus can be enabled on a per-document basis: disqus: your-shortname Disqus can also be disabled for a specific page by setting it to an empty value: disqus:","title":"Disqus"},{"location":"extensions/permalinks/","text":"Permalinks \u00b6 Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a specific section of the document. Configuration \u00b6 Add the following lines to mkdocs.yml : markdown_extensions : - toc : permalink : true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which Material for MkDocs will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions : - toc : permalink : Link Usage \u00b6 When enabled, permalinks are inserted automatically.","title":"Permalinks"},{"location":"extensions/permalinks/#permalinks","text":"Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a specific section of the document.","title":"Permalinks"},{"location":"extensions/permalinks/#configuration","text":"Add the following lines to mkdocs.yml : markdown_extensions : - toc : permalink : true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which Material for MkDocs will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions : - toc : permalink : Link","title":"Configuration"},{"location":"extensions/permalinks/#usage","text":"When enabled, permalinks are inserted automatically.","title":"Usage"},{"location":"extensions/pymdown/","text":"PyMdown Extensions \u00b6 PyMdown Extensions is a collection of Markdown extensions that add some great missing features to the standard Markdown library. A compatible version is always included with the theme. Configuration \u00b6 The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with Material for MkDocs: markdown_extensions : - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : custom_checkbox : true - pymdownx.tabbed - pymdownx.tilde Usage \u00b6 Arithmatex MathJax \u00b6 Arithmatex integrates Material for MkDocs with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax. Besides activating the extension in the mkdocs.yml , the MathJax JavaScript runtime needs to be included. This can be done with additional JavaScript : extra_javascript : - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime which contains the MathJax configuration, e.g.: window . MathJax = { tex2jax : { inlineMath : [ [ \"\\\\(\" , \"\\\\)\" ] ], displayMath : [ [ \"\\\\[\" , \"\\\\]\" ] ] }, TeX : { TagSide : \"right\" , TagIndent : \".8em\" , MultLineWidth : \"85%\" , equationNumbers : { autoNumber : \"AMS\" , }, unicode : { fonts : \"STIXGeneral,'Arial Unicode MS'\" } }, displayAlign : \"left\" , showProcessingMessages : false , messageStyle : \"none\" }; Then, add the following lines to mkdocs.yml : extra_javascript : - javascripts/extra.js - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML Blocks \u00b6 Blocks are enclosed in $$ ... $$ which are placed on separate lines. Example: $$ \\frac {n ! }{k !( n - k )! } = \\binom {n}{k} $$ Result: \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k} Inline \u00b6 Inline equations must be enclosed in $ ... $ : Example: Lorem ipsum dolor sit amet: $ p ( x|y ) = \\frac {p ( y|x ) p ( x ) }{p ( y ) } $ Result: Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)} BetterEm \u00b6 BetterEm improves the handling of emphasis markup ( bold and italic ) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes . Caret \u00b6 Caret makes it possible to highlight inserted text . The portion of text that should be marked as added must be enclosed in two carets ^^...^^ . Critic \u00b6 Critic implements Critic Markup , a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected. Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. Details \u00b6 Details adds collapsible Admonition blocks which can contain arbitrary content using the HTML5 details and summary tags. Additionally, all Admonition qualifiers can be used, e.g. note , question , warning etc.: How many Prolog programmers does it take to change a lightbulb? Yes. Emoji \u00b6 Emoji adds the ability to insert, well, emojis! By default, Emoji uses JoyPixles' emoji under the former name EmojiOne. Recent versions of the extension lock support to an older version (2.2.7) due to JoyPixels' newer, less permissible licenses included in later releases. This restricts support to Unicode 9. To get the latest support for the current Unicode version, you can use Twemoji instead which has a much more permissible license. Simply override the default emoji index being used: markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:pymdownx.emoji.twemoji emoji_generator : !!python/name:pymdownx.emoji.to_svg To view all the available short names and emoji available, see Emoji's documentation on your chosen index which includes links to the files containing the short names and emoji associated with each supported index. Legal disclaimer Material has no affiliation with JoyPixles or Twemoji , both of which are licensed under CC BY 4.0 . When including images or CSS from either provider, please read their licenses to ensure proper attribution: EmojiOne or Twemoji . Icons \u00b6 In addition, you can embed the Material Design icons, Fontawesome icons and GitHub's Octicons directly from Markdown by using Material for MkDocs's custom emoji index . It extends the Twemoji index with new short names that access any of the included icons. To use the custom index, you need to use materialx.emoji instead of pymdownx.emoji : markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg Example: * :material-account-circle: \u2013 we can use Material Design icons * :fontawesome-regular-laugh-wink: \u2013 we can also use FontAwesome icons * :octicons-octoface: \u2013 that's not all, we can also use GitHub's Octicons Result: \u2013 we can use Material Design icons \u2013 we can also use FontAwesome icons \u2013 that's not all, we can also use GitHub's Octicons InlineHilite \u00b6 InlineHilite adds support for inline code highlighting. It's useful for short snippets included within body copy, e.g. var test = 0 ; and can be activated by prefixing inline code with a shebang and language identifier, e.g. #!js . MagicLink \u00b6 MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links http[s]:// and ftp:// links, as well as references to email addresses. Mark \u00b6 Mark adds the ability to highlight text like it was marked with a text marker . The portion of text that should be highlighted must be enclosed in two equal signs ==...== . SmartSymbols \u00b6 SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright symbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...). SuperFences \u00b6 SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn't parse correctly. SuperFences does also allow grouping code blocks with tabs . Tabbed \u00b6 Tabbed adds support for creating tabbed groups of Markdown content. Example: === \"Fruit List\" - :apple: Apple - :banana: Banana - :kiwi: Kiwi === \"Fruit Table\" Fruit | Color --------------- | ----- :apple: Apple | Red :banana: Banana | Yellow :kiwi: Kiwi | Green Result: Fruit List Apple Banana Kiwi Fruit Table Fruit Color Apple Red Banana Yellow Kiwi Green Tasklist \u00b6 Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with [ ] for empty or [x] for filled checkboxes. Example: * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [x] Nulla lobortis egestas semper * [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque * [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Tilde \u00b6 Tilde provides an easy way to strike through cross out text. The portion of text that should be erased must be enclosed in two tildes ~~...~~ and the extension will take care of the rest.","title":"PyMdown Extensions"},{"location":"extensions/pymdown/#pymdown-extensions","text":"PyMdown Extensions is a collection of Markdown extensions that add some great missing features to the standard Markdown library. A compatible version is always included with the theme.","title":"PyMdown Extensions"},{"location":"extensions/pymdown/#configuration","text":"The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with Material for MkDocs: markdown_extensions : - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : custom_checkbox : true - pymdownx.tabbed - pymdownx.tilde","title":"Configuration"},{"location":"extensions/pymdown/#usage","text":"","title":"Usage"},{"location":"extensions/pymdown/#arithmatex-mathjax","text":"Arithmatex integrates Material for MkDocs with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax. Besides activating the extension in the mkdocs.yml , the MathJax JavaScript runtime needs to be included. This can be done with additional JavaScript : extra_javascript : - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime which contains the MathJax configuration, e.g.: window . MathJax = { tex2jax : { inlineMath : [ [ \"\\\\(\" , \"\\\\)\" ] ], displayMath : [ [ \"\\\\[\" , \"\\\\]\" ] ] }, TeX : { TagSide : \"right\" , TagIndent : \".8em\" , MultLineWidth : \"85%\" , equationNumbers : { autoNumber : \"AMS\" , }, unicode : { fonts : \"STIXGeneral,'Arial Unicode MS'\" } }, displayAlign : \"left\" , showProcessingMessages : false , messageStyle : \"none\" }; Then, add the following lines to mkdocs.yml : extra_javascript : - javascripts/extra.js - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML","title":"Arithmatex MathJax"},{"location":"extensions/pymdown/#blocks","text":"Blocks are enclosed in $$ ... $$ which are placed on separate lines. Example: $$ \\frac {n ! }{k !( n - k )! } = \\binom {n}{k} $$ Result: \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k}","title":"Blocks"},{"location":"extensions/pymdown/#inline","text":"Inline equations must be enclosed in $ ... $ : Example: Lorem ipsum dolor sit amet: $ p ( x|y ) = \\frac {p ( y|x ) p ( x ) }{p ( y ) } $ Result: Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)}","title":"Inline"},{"location":"extensions/pymdown/#betterem","text":"BetterEm improves the handling of emphasis markup ( bold and italic ) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes .","title":"BetterEm"},{"location":"extensions/pymdown/#caret","text":"Caret makes it possible to highlight inserted text . The portion of text that should be marked as added must be enclosed in two carets ^^...^^ .","title":"Caret"},{"location":"extensions/pymdown/#critic","text":"Critic implements Critic Markup , a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected. Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content.","title":"Critic"},{"location":"extensions/pymdown/#details","text":"Details adds collapsible Admonition blocks which can contain arbitrary content using the HTML5 details and summary tags. Additionally, all Admonition qualifiers can be used, e.g. note , question , warning etc.: How many Prolog programmers does it take to change a lightbulb? Yes.","title":"Details"},{"location":"extensions/pymdown/#emoji","text":"Emoji adds the ability to insert, well, emojis! By default, Emoji uses JoyPixles' emoji under the former name EmojiOne. Recent versions of the extension lock support to an older version (2.2.7) due to JoyPixels' newer, less permissible licenses included in later releases. This restricts support to Unicode 9. To get the latest support for the current Unicode version, you can use Twemoji instead which has a much more permissible license. Simply override the default emoji index being used: markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:pymdownx.emoji.twemoji emoji_generator : !!python/name:pymdownx.emoji.to_svg To view all the available short names and emoji available, see Emoji's documentation on your chosen index which includes links to the files containing the short names and emoji associated with each supported index. Legal disclaimer Material has no affiliation with JoyPixles or Twemoji , both of which are licensed under CC BY 4.0 . When including images or CSS from either provider, please read their licenses to ensure proper attribution: EmojiOne or Twemoji .","title":"Emoji"},{"location":"extensions/pymdown/#icons","text":"In addition, you can embed the Material Design icons, Fontawesome icons and GitHub's Octicons directly from Markdown by using Material for MkDocs's custom emoji index . It extends the Twemoji index with new short names that access any of the included icons. To use the custom index, you need to use materialx.emoji instead of pymdownx.emoji : markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg Example: * :material-account-circle: \u2013 we can use Material Design icons * :fontawesome-regular-laugh-wink: \u2013 we can also use FontAwesome icons * :octicons-octoface: \u2013 that's not all, we can also use GitHub's Octicons Result: \u2013 we can use Material Design icons \u2013 we can also use FontAwesome icons \u2013 that's not all, we can also use GitHub's Octicons","title":"Icons"},{"location":"extensions/pymdown/#inlinehilite","text":"InlineHilite adds support for inline code highlighting. It's useful for short snippets included within body copy, e.g. var test = 0 ; and can be activated by prefixing inline code with a shebang and language identifier, e.g. #!js .","title":"InlineHilite"},{"location":"extensions/pymdown/#magiclink","text":"MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links http[s]:// and ftp:// links, as well as references to email addresses.","title":"MagicLink"},{"location":"extensions/pymdown/#mark","text":"Mark adds the ability to highlight text like it was marked with a text marker . The portion of text that should be highlighted must be enclosed in two equal signs ==...== .","title":"Mark"},{"location":"extensions/pymdown/#smartsymbols","text":"SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright symbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...).","title":"SmartSymbols"},{"location":"extensions/pymdown/#superfences","text":"SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn't parse correctly. SuperFences does also allow grouping code blocks with tabs .","title":"SuperFences"},{"location":"extensions/pymdown/#tabbed","text":"Tabbed adds support for creating tabbed groups of Markdown content. Example: === \"Fruit List\" - :apple: Apple - :banana: Banana - :kiwi: Kiwi === \"Fruit Table\" Fruit | Color --------------- | ----- :apple: Apple | Red :banana: Banana | Yellow :kiwi: Kiwi | Green Result: Fruit List Apple Banana Kiwi Fruit Table Fruit Color Apple Red Banana Yellow Kiwi Green","title":"Tabbed"},{"location":"extensions/pymdown/#tasklist","text":"Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with [ ] for empty or [x] for filled checkboxes. Example: * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [x] Nulla lobortis egestas semper * [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque * [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi","title":"Tasklist"},{"location":"extensions/pymdown/#tilde","text":"Tilde provides an easy way to strike through cross out text. The portion of text that should be erased must be enclosed in two tildes ~~...~~ and the extension will take care of the rest.","title":"Tilde"},{"location":"latest/BDD_Custom_Step_Definition/","text":"Steps can be defined in bdl The Basic Step definition is following. STEP-DEF:<meaningfull step description> [Keyword] <first step description with parameters> \u2026 [Keyword] <nth step description> END While execution make sure required bdl files are mentioned in step.provider.pkg property as below step.provider.pkg = com.test;scenarios Refer describe test step","title":"BDD Custom Step Definition"},{"location":"latest/BDD_Keywords_Synonyms/","text":"Default BDD Keywords : Given,When,Then,And,Using,Having,With Modify/Change this keywords with required Keyword, by specifying property as below For Example : Given=Provided;GivenThat \"Given\u201c synonym enables \"Provided\" and \"GivenThat\" use case of such feature can be where user want to have BDD in different language other than English or want more Keywords","title":"BDD Keyword Synonyms"},{"location":"latest/Creating_test_cases/","text":"You can create a new test case or suit by extending WebDriverTestCase class. Now you can create test same as in TestNG. If you are new to TestNG, here is the documentation . On extending WebDriverTestCase following object will be available to use in your test. getTestBase() Get thread safe WebDriverTestBase Instance that provides webdriver object. getDriver() Provides a thread safe webdriver object same as getTestBase().getDriver(). context Instance of ITestContext, test context which contains all the information for a given test run. props Instance of PropertyUtil, can be used to read property value from any of the properties file. Example public class SampleTestSuite extends WebDriverTestCase { @Test public void test1 () { getDriver (). get ( \"/\" ); // QAFWebElement fname = getDriver().findElement(\"fname locator\"); QAFWebElement fname = new QAFExtendedWebElement ( \"fname locator\" ); fname . verifyText ( StringMatcher . exactIgnoringCase ( \"expected text\" )); } } Using Test Page in Test case public class SampleTestSuite extends WebDriverTestCase { @Test public void test1 () { MyTestPage page = new MyTestPage (); page . launchPage ( null ); page . getFname (). verifyText ( \"expected text\" ); } } Grouping \u00b6 Test can be grouped and can be configured to run specific group or for dependency. Setting dependency \u00b6 You can set method dependency as supported by TestNG. Precondition and post condition \u00b6 Use before/afterTest annotation from TestNG. You can call getTestBase() to have test base object in such methods.","title":"Creating test cases - Java"},{"location":"latest/Creating_test_cases/#grouping","text":"Test can be grouped and can be configured to run specific group or for dependency.","title":"Grouping"},{"location":"latest/Creating_test_cases/#setting-dependency","text":"You can set method dependency as supported by TestNG.","title":"Setting dependency"},{"location":"latest/Creating_test_cases/#precondition-and-post-condition","text":"Use before/afterTest annotation from TestNG. You can call getTestBase() to have test base object in such methods.","title":"Precondition and post condition"},{"location":"latest/Define_Test_Suite/","text":"Behavior driven test suite consist of one or more Scenarios. Each scenario represents one test case. One can provide optional related information as background or narrative or user-story related to scenarios authored in the suite. Save your suite file with .bdd extension. Formation of Suite \u00b6 [Narrative | Background | User-story] Scenario: <name of the scenario> <<steps>> End ... Scenario: <name of the scenario> <<steps>> End Example \u00b6 File: suite1.bdd Feature: google search Scenario: Search InfoStrech META-DATA: {'desc':'This is an example of scenario using QAF-BDD'} Given I am on Google Search Page When I search for \"git qmetry\" Then I get at least 5 results And it should have \"QMetry Automation Framework\" in search results END Find more example here . {% include tip.html content=\"To start with you can use available pre-defined low level steps and author scenario.\" %}","title":"Define Test Suite"},{"location":"latest/Define_Test_Suite/#formation-of-suite","text":"[Narrative | Background | User-story] Scenario: <name of the scenario> <<steps>> End ... Scenario: <name of the scenario> <<steps>> End","title":"Formation of Suite"},{"location":"latest/Define_Test_Suite/#example","text":"File: suite1.bdd Feature: google search Scenario: Search InfoStrech META-DATA: {'desc':'This is an example of scenario using QAF-BDD'} Given I am on Google Search Page When I search for \"git qmetry\" Then I get at least 5 results And it should have \"QMetry Automation Framework\" in search results END Find more example here . {% include tip.html content=\"To start with you can use available pre-defined low level steps and author scenario.\" %}","title":"Example"},{"location":"latest/Describe_Test_Step/","text":"Test step can be defined in .java or .bdl files. It consists of description, with which it is known. Step in Java \u00b6 @QAFTestStep ( description = \"meaning full step descriptor\" ) public < return_type > stepMethod ( < parameters > ) { //step implementation } Step in BDL \u00b6 STEP-DEF:<meaningfull step description> META-DATA:<valid json object> [Keyword] <first step description with parameters> \u2026 [Keyword] <nth step description> END Regular expressions are supported for description of test step To define step, which contains parameters: user logins with {0} and {1} user logins with {0:string} and {1:string} user (logins|signins) with {0} and {1} user (log|sign)ins with {0} and {1} This step can be consumed from *.bdd file as: user logins with 'username' and 'password' user logins with 'username' and 'password' More examples for defining step and consuming them: Using method argument name instead of numbers for parameters in step description \u00b6 Test Step Declaration In java @QAFTestStep ( description = \"user logins with {username} and {password}\" ) public void login ( String username , String password ) { // step implementation } Test Step Declaration In BDL STEP-DEF:user logins with {0} and {1} Given COMMENT: '${args[0]}' Given COMMENT: '${args[1]}' // step implementation END As well as STEP-DEF: Login Meta-Data: user (log|sign)ins with {0:map} Given COMMENT: '${args[0]}' END Can be consumed as: Given user logins with 'username' and 'password 123 #' Using regular expression for flexibility in using the step \u00b6 Test Step Declaration In java @QAFTestStep ( description = \"user (log|sign)ins with {username} and {password}\" ) public void login ( String username , String password ) { // step implementation } Test Step Declaration In BDL STEP-DEF:user (log|sign)ins with {0} and {1} Given COMMENT: '${args[0]}' Given COMMENT: '${args[1]}' // step implementation END Can be consumed as: Given user logins with 'username' and 'password 123 #' Given user signins with 'username' and 'password 123 #' Using/Passing map structured data in argument of step \u00b6 Test Step Declaration In java @QAFTestStep ( description = \"user logins with {credentials}\" ) public void login ( Map < String , String > creds ) { // step implementation } Test Step Declaration In BDL STEP-DEF:user logins with {0} Given COMMENT: '${args[0]}' END Can be consumed as: Given user logins with {'username':'user123','password':'password123#'} Using/Passing Array data in argument of step \u00b6 Test Step Declaration In java @QAFTestStep ( description = \"user should have {access_types} access\" ) public void login ( String [] access_types ) { // step implementation } Test Step Declaration In BDL STEP-DEF:user should have {0} access Given COMMENT: '${args[0]}' END Can be consumed as: Given user should have ['read','write','modify'] access","title":"Describe Test Step"},{"location":"latest/Describe_Test_Step/#step-in-java","text":"@QAFTestStep ( description = \"meaning full step descriptor\" ) public < return_type > stepMethod ( < parameters > ) { //step implementation }","title":"Step in Java"},{"location":"latest/Describe_Test_Step/#step-in-bdl","text":"STEP-DEF:<meaningfull step description> META-DATA:<valid json object> [Keyword] <first step description with parameters> \u2026 [Keyword] <nth step description> END Regular expressions are supported for description of test step To define step, which contains parameters: user logins with {0} and {1} user logins with {0:string} and {1:string} user (logins|signins) with {0} and {1} user (log|sign)ins with {0} and {1} This step can be consumed from *.bdd file as: user logins with 'username' and 'password' user logins with 'username' and 'password' More examples for defining step and consuming them:","title":"Step in BDL"},{"location":"latest/Describe_Test_Step/#using-method-argument-name-instead-of-numbers-for-parameters-in-step-description","text":"Test Step Declaration In java @QAFTestStep ( description = \"user logins with {username} and {password}\" ) public void login ( String username , String password ) { // step implementation } Test Step Declaration In BDL STEP-DEF:user logins with {0} and {1} Given COMMENT: '${args[0]}' Given COMMENT: '${args[1]}' // step implementation END As well as STEP-DEF: Login Meta-Data: user (log|sign)ins with {0:map} Given COMMENT: '${args[0]}' END Can be consumed as: Given user logins with 'username' and 'password 123 #'","title":"Using method argument name instead of numbers for parameters in step description"},{"location":"latest/Describe_Test_Step/#using-regular-expression-for-flexibility-in-using-the-step","text":"Test Step Declaration In java @QAFTestStep ( description = \"user (log|sign)ins with {username} and {password}\" ) public void login ( String username , String password ) { // step implementation } Test Step Declaration In BDL STEP-DEF:user (log|sign)ins with {0} and {1} Given COMMENT: '${args[0]}' Given COMMENT: '${args[1]}' // step implementation END Can be consumed as: Given user logins with 'username' and 'password 123 #' Given user signins with 'username' and 'password 123 #'","title":"Using regular expression for flexibility in using the step"},{"location":"latest/Describe_Test_Step/#usingpassing-map-structured-data-in-argument-of-step","text":"Test Step Declaration In java @QAFTestStep ( description = \"user logins with {credentials}\" ) public void login ( Map < String , String > creds ) { // step implementation } Test Step Declaration In BDL STEP-DEF:user logins with {0} Given COMMENT: '${args[0]}' END Can be consumed as: Given user logins with {'username':'user123','password':'password123#'}","title":"Using/Passing map structured data in argument of step"},{"location":"latest/Describe_Test_Step/#usingpassing-array-data-in-argument-of-step","text":"Test Step Declaration In java @QAFTestStep ( description = \"user should have {access_types} access\" ) public void login ( String [] access_types ) { // step implementation } Test Step Declaration In BDL STEP-DEF:user should have {0} access Given COMMENT: '${args[0]}' END Can be consumed as: Given user should have ['read','write','modify'] access","title":"Using/Passing Array data in argument of step"},{"location":"latest/KWD_Custom_Step_Definition/","text":"Steps can be defined in kwl The Basic Step definition is following. STEP-DEF|<stepName>|{\"description\":\"<meaningfull step description>\",<meta-key>:<meta-value>} <first stepName>|<step input parameters>|<step out parameters> ... <nth stepName>|<step input parameters>|<step out parameters> END|| While execution make sure required kwl files are mentioned in step.provider.pkg property as below step.provider.pkg = com.test;scenarios","title":"KWD Custom Step Definition"},{"location":"latest/QMetry_Integration/","text":"Project Properties Configuration: \u00b6 Connection toward QMetry requires following mandatory information that can be provided by setting appropriate property (Mandatory): Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitid suite_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Following are the optional properties to be set. Property Value integration.param.qmetry.suitrunid suite_run_id integration.param.qmetry.suit.path suite_path integration.param.qmetry.suit.rundesc suite run description qmetry.schedule.file qmetry schedular file integration.tool.qmetry.uploadattachments path of upload attachment You can provide these properties in application.properties file. Note: If you are using QMetry scheduler provided xml then you only required to provide url, user and password related properties from above. TestCase Mapping: \u00b6 Mapping with annotation If you want to map a test case that\u2019s method name not follows above standard than use QmetryTestCase annotation for example: @QmetryTestCase ( TC_ID = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Running test that are scheduled: \u00b6 If you want to run with Qmetry scheduler provided xml then provide qmetry.schedule.file property value.a You can provide it in multiple ways: Provide seleniumtestrunner.properties file under scripts dir: qmetry.schedule.file=<run_schedule_file> Edit bat file \u201cseleniumTestRunner.bat\u201d under scripts dir ant -f scripts/seleniumtestrunner.xml -Dtestng.suite.file=testNG_config.xml -qmetry.schedule.file=<run_schedule_file> Edit bat file to get value at runtime ant -f scripts/seleniumtestrunner.xml -Dtestng.suite.file=testNG_config.xml, then you need to pass command line arg to bat file as -Dqmetry.schedule.file=<run_schedule_file> Form Project home execute ant as: ant -Dtestng.suite.file=testNG_config.xml -Dqmetry.schedule.file=<run_schedule_file> You can use in different 4 scenarios by using apply test run id or testcase run id. Scenario 1: Given: Suite_id & TC_ID TC_ID is given in QMetryTestCase annotation and suite id is provided using integration.param.qmetry.suitid as a property. @QmetryTestCase ( TC_ID = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available in addition to suite_id. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitid suite_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Scenario 2: Given: Suite_run_id & TC_ID TC_ID is given in QMetryTestCase annotation and suite run id is provided using integration.param.qmetry.suitrunid as a property. @QmetryTestCase ( TC_ID = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitrunid suite_run_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Scenario 3: Given: Suite_Run_ID & TC_Run_ID TC_ID is given in QMetryTestCase annotation and suite id is provided using integration.param.qmetry.suitrunid as a property. @QmetryTestCase ( runId = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitrunid suite_run_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Scenario 4: Given: Suite_Run_ID & TC_Run_ID TC_ID is given in QMetryTestCase annotation and suite id is provided using integration.param.qmetry.suitrunid as a property. @QmetryTestCase ( runId = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available in addition to suite_id. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitrunid suite_run_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Scenario 5: Given: Do Not Give AnyThing TC_ID is not given in QMetryTestCase annotation then it will create new test case in qmetry. Provide required property as per below. @QmetryTestCase () @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id","title":"QMetry Integration"},{"location":"latest/QMetry_Integration/#project-properties-configuration","text":"Connection toward QMetry requires following mandatory information that can be provided by setting appropriate property (Mandatory): Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitid suite_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Following are the optional properties to be set. Property Value integration.param.qmetry.suitrunid suite_run_id integration.param.qmetry.suit.path suite_path integration.param.qmetry.suit.rundesc suite run description qmetry.schedule.file qmetry schedular file integration.tool.qmetry.uploadattachments path of upload attachment You can provide these properties in application.properties file. Note: If you are using QMetry scheduler provided xml then you only required to provide url, user and password related properties from above.","title":"Project Properties Configuration:"},{"location":"latest/QMetry_Integration/#testcase-mapping","text":"Mapping with annotation If you want to map a test case that\u2019s method name not follows above standard than use QmetryTestCase annotation for example: @QmetryTestCase ( TC_ID = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code }","title":"TestCase Mapping:"},{"location":"latest/QMetry_Integration/#running-test-that-are-scheduled","text":"If you want to run with Qmetry scheduler provided xml then provide qmetry.schedule.file property value.a You can provide it in multiple ways: Provide seleniumtestrunner.properties file under scripts dir: qmetry.schedule.file=<run_schedule_file> Edit bat file \u201cseleniumTestRunner.bat\u201d under scripts dir ant -f scripts/seleniumtestrunner.xml -Dtestng.suite.file=testNG_config.xml -qmetry.schedule.file=<run_schedule_file> Edit bat file to get value at runtime ant -f scripts/seleniumtestrunner.xml -Dtestng.suite.file=testNG_config.xml, then you need to pass command line arg to bat file as -Dqmetry.schedule.file=<run_schedule_file> Form Project home execute ant as: ant -Dtestng.suite.file=testNG_config.xml -Dqmetry.schedule.file=<run_schedule_file> You can use in different 4 scenarios by using apply test run id or testcase run id. Scenario 1: Given: Suite_id & TC_ID TC_ID is given in QMetryTestCase annotation and suite id is provided using integration.param.qmetry.suitid as a property. @QmetryTestCase ( TC_ID = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available in addition to suite_id. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitid suite_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Scenario 2: Given: Suite_run_id & TC_ID TC_ID is given in QMetryTestCase annotation and suite run id is provided using integration.param.qmetry.suitrunid as a property. @QmetryTestCase ( TC_ID = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitrunid suite_run_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Scenario 3: Given: Suite_Run_ID & TC_Run_ID TC_ID is given in QMetryTestCase annotation and suite id is provided using integration.param.qmetry.suitrunid as a property. @QmetryTestCase ( runId = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitrunid suite_run_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Scenario 4: Given: Suite_Run_ID & TC_Run_ID TC_ID is given in QMetryTestCase annotation and suite id is provided using integration.param.qmetry.suitrunid as a property. @QmetryTestCase ( runId = \"12345\" ) @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available in addition to suite_id. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.suitrunid suite_run_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id Scenario 5: Given: Do Not Give AnyThing TC_ID is not given in QMetryTestCase annotation then it will create new test case in qmetry. Provide required property as per below. @QmetryTestCase () @Test ( description = \"Sample test\" ) public void TCtest () throws Exception { //test code } Following properties must be available. Property Description integration.param.qmetry.service.url <QMetry server URL> integration.param.qmetry.user <username> integration.param.qmetry.pwd password integration.param.qmetry.project project_id integration.param.qmetry.release release_id integration.param.qmetry.cycle cycle_id integration.param.qmetry.build build_id integration.param.qmetry.platform platform_id integration.param.qmetry.drop drop_id","title":"Running test that are scheduled:"},{"location":"latest/Test_Step_Metadata/","text":"Supports for Custom Meta-Data at test step level. Example: Here, groups is a custom meta-data for step. JAVA @MetaData(value = \"{'groups':['login']}\") @QAFTestStep(description = \"user login with username {username} and password {password}\") public void login(String username,String password) { //To-do } BDD STEP DEF STEP-DEF: user login with username {username} and password {password} META-DATA: {'groups':['login']} #To-do END KWD STEP DEF STEP-DEF|login|{\"description\":\"user logins with {username} and {password}\",\"groups\":[\"login\"]} ... <steps> ... END||","title":"Test Step Metadata"},{"location":"latest/Test_Step_Threshold_and_time_tracking/","text":"Test Step Threshold \u00b6 In Built \u2018threshold\u2019 Test Step Meta-Data Support. Example: Login Step should be executed in 10s, if takes more than 10s then it displays as warning in report. User can specify threshold value by following way, Java Step @QAFTestStep(description = \"user logins with username {username} and password {password}\", threshold = 10) public void userLogin(String username,String password){ //To-do } BDD STEP DEF STEP-DEF: user logins with username {username} and password {password} META-DATA: {'threshold':10} #To-do END KWD STEP DEF STEP-DEF|login|{\"description\":\"user logins with {username} and {password}\",\"threshold\":10} ... <steps> ... END|[]| In Built Steps for Time-Tracking \u00b6 To track time of multiple consultative step, inbuilt steps provided. Start Tracking : start (transaction|time-tracker) for {task-name} with {second}s threshold Stop Tracking : stop transaction Example: BDD For Example: start transaction for 'Login' with 10s threshold When user navigates to signin screen Then verify user should be on login page And user logins with random valid credentials Then validate user should be logged in stop transaction KWD startTransaction|[\"Login\",\"10\"]| ... <steps> .. stopTransaction|[]|","title":"Test Step Threshold and time tracking"},{"location":"latest/Test_Step_Threshold_and_time_tracking/#test-step-threshold","text":"In Built \u2018threshold\u2019 Test Step Meta-Data Support. Example: Login Step should be executed in 10s, if takes more than 10s then it displays as warning in report. User can specify threshold value by following way, Java Step @QAFTestStep(description = \"user logins with username {username} and password {password}\", threshold = 10) public void userLogin(String username,String password){ //To-do } BDD STEP DEF STEP-DEF: user logins with username {username} and password {password} META-DATA: {'threshold':10} #To-do END KWD STEP DEF STEP-DEF|login|{\"description\":\"user logins with {username} and {password}\",\"threshold\":10} ... <steps> ... END|[]|","title":"Test Step Threshold"},{"location":"latest/Test_Step_Threshold_and_time_tracking/#in-built-steps-for-time-tracking","text":"To track time of multiple consultative step, inbuilt steps provided. Start Tracking : start (transaction|time-tracker) for {task-name} with {second}s threshold Stop Tracking : stop transaction Example: BDD For Example: start transaction for 'Login' with 10s threshold When user navigates to signin screen Then verify user should be on login page And user logins with random valid credentials Then validate user should be logged in stop transaction KWD startTransaction|[\"Login\",\"10\"]| ... <steps> .. stopTransaction|[]|","title":"In Built Steps for Time-Tracking"},{"location":"latest/assertion_verification/","text":"Assertion Service provides commonly used assertion methods in web application tests. It automatically logs result of assertion/verification with appropriate message and screenshot. When using webdriver API for development different assertion and verification methods are available with extended webelement object itself. For example, assuming that firstName is of type QAFExtendedWebElement and you want to do assertion/Verifation test on firstName field, then below are some examples for that. //verify element present in DOM firstName . verifyPresent (); firstName . assertPresent (); //verify element is visible firstName . verifyVisible (); firstName . assertVisible (); //verify Text of Element firstName . verifyText ( \"First User\" ); firstName . assertText ( \"First User\" ); //verify Text of element with StringMatchers conditions firstName . verifyText ( StringMatcher . contains ( \"First User\" )); firstName . assertText ( StringMatcher . contains ( \"First User\" ), \"Username Validation\" ); //verify attributes(e.g. class, value, enabled) of element firstName . verifyAttribute ( \"class\" , \"Expected Class\" ); //verify css classs firstName . assertCssClass ( \"text-default\" ); firstName . verifyCssClass ( \"text-default\" ); //verify css style firstName . verifyCssStyle ( \"text-size\" , \"14\" ); firstName . assertCssStyle ( \"text-size\" , \"14\" ); //verify element is enabled firstName . verifyEnabled (); firstName . assertEnabled (); Validator Class \u00b6 Validator class provides assertion/verification methods that supports hamcrest matchers. For e.g: Validator . verifyThat ( actual , Matchers . equalTo ( expected )); customize assertion verification message \u00b6 You can customize assertion verification message using properties element.<operation>.pass element.<operation>.fail element.not<operation>.pass element.not<operation>.fail Where operation is lower-case assert/verification operation. For example In verifyPresent operation is present so key will be element.present.pass element.present.fail In verifyNotPresent operation is notpresent element.notpresent.pass element.notpresent.fail arguments supported in message: {0} - description of the element {1} - if value match, expected value {2} - if value match, actual value Default message values for operation without value match element.<operation>.pass = Expected {0} <operation> : Actual {0} <operation> element.<operation>.fail = Expected {0} <operation> : Actual {0} not <operation> Message for verifyPresent() and assertPresent() element.present.pass = Expected {0} present : Actual {0} present element.present.fail = Expected {0} present : Actual {0} not present ** Not Operation ** element.<notoperation>.pass = Expected {0} not <operation> : Actual {0} not <operation> element.<notoperation>.fail = Expected {0} not <operation> : Actual {0} <operation> Message for verifyNotPresent() and assertNotPresent element.notpresent.pass = Expected {0} not present : Actual {0} not present element.notpresent.fail = Expected {0} not present : Actual {0} present Default message values for operation with value match element.<operation>.pass = Expected {0} <operation> should not be {1} : Actual {0} <operation> is {2} element.<operation>.fail = \"Expected {0} <operation> should be {1} : Actual {0} <operation> is {2} Message for verifyText and assertText element.text.pass = Expected {0} text should not be {1} : Actual {0} text is {2} element.text.fail = Expected {0} text should be {1} : Actual {0} text is {2}","title":"Assertion/Verification"},{"location":"latest/assertion_verification/#validator-class","text":"Validator class provides assertion/verification methods that supports hamcrest matchers. For e.g: Validator . verifyThat ( actual , Matchers . equalTo ( expected ));","title":"Validator Class"},{"location":"latest/assertion_verification/#customize-assertion-verification-message","text":"You can customize assertion verification message using properties element.<operation>.pass element.<operation>.fail element.not<operation>.pass element.not<operation>.fail Where operation is lower-case assert/verification operation. For example In verifyPresent operation is present so key will be element.present.pass element.present.fail In verifyNotPresent operation is notpresent element.notpresent.pass element.notpresent.fail arguments supported in message: {0} - description of the element {1} - if value match, expected value {2} - if value match, actual value Default message values for operation without value match element.<operation>.pass = Expected {0} <operation> : Actual {0} <operation> element.<operation>.fail = Expected {0} <operation> : Actual {0} not <operation> Message for verifyPresent() and assertPresent() element.present.pass = Expected {0} present : Actual {0} present element.present.fail = Expected {0} present : Actual {0} not present ** Not Operation ** element.<notoperation>.pass = Expected {0} not <operation> : Actual {0} not <operation> element.<notoperation>.fail = Expected {0} not <operation> : Actual {0} <operation> Message for verifyNotPresent() and assertNotPresent element.notpresent.pass = Expected {0} not present : Actual {0} not present element.notpresent.fail = Expected {0} not present : Actual {0} present Default message values for operation with value match element.<operation>.pass = Expected {0} <operation> should not be {1} : Actual {0} <operation> is {2} element.<operation>.fail = \"Expected {0} <operation> should be {1} : Actual {0} <operation> is {2} Message for verifyText and assertText element.text.pass = Expected {0} text should not be {1} : Actual {0} text is {2} element.text.fail = Expected {0} text should be {1} : Actual {0} text is {2}","title":"customize assertion verification message"},{"location":"latest/bdd2/","text":"Comment \u00b6 Comments can be placed any where in the bdd file. Comment can be single line or multiline. Single line comment starts with # or ! . Multi-line comments start with \"\"\" and end with \"\"\" .Multiline comment in scenario or background logged in report as info message, however comments outside will not logged in report. # this is example of single line comment # single line comment will be ignored by BDD parser ! this is also a comment \"\"\" This is multi line comment will be logged in report if it is inside background or scenario. \"\"\" line-break \u00b6 To break statement in multiple line you can use _& as line break. Meta-data \u00b6 There are predefined meta-key available to use which are listed in meta-data . You can define your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. The meta-data are collected as part of the scenario parsing and made available for different uses, e.g. Scenario selection, setting priority @description:Data driven test that uses csv file to provide data @group1 @group2 @author: Chirag Jayswal SCENARIO: Scenario Example Given I am on fruits and colors activity When i select 'grapes' Then the color should be 'green' Data-driven Scenario \u00b6 You can iterate your scenario with set of test data by providing examples with scenario outline. You also can provide data from qaf data provider by providing @QAFDataProvider property as meta-data.Refer make test data driven , any of the @QAFDataProvider property you can set as meta-data. Below example demonstrates data-driven feature @author:Chirag Jayswal @regression @dataFile:resources/data/testdata.csv SCENARIO: Data-driven Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Below is csv data file and first row is column names. testdata.csv fruit,color grapes,green banana,yellow Scenario outline with examples. @regression @author:Chirag Jayswal Scenario Outline: Data-driven Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Examples: |fruit|color| |grapes|green| |banana|yellow| You can also use groups/tags with Examples , however data-provider recommended over Examples with or without groups. If you want to uses custom data set you need to provide data provider class and data provider name in meta-data. @dataProvider:my-custom-dp @dataProviderClass:my.project.impl.CustomDataProvider @regression @author:Chirag Jayswal Scenario: Custom Data provider Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Above scenario will use custom data provider defined in class CustomDataProvider . It will add regression group and Chirag Jayswal as custom meta-data author . package my.project.impl ; import java.util.Map ; import org.testng.annotations.DataProvider ; import org.testng.collections.Maps ; /** * @author chirag.jayswal * */ public class CustomDataProvider { @DataProvider ( name = \"my-custom-dp\" ) public static Object [][] dataProviderForBDD (){ Map < Object , Object > rec1 = Maps . newHashMap (); m . put ( \"fruit\" , \"grapes\" ); m . put ( \"color\" , \"green\" ); Map < Object , Object > rec2 = Maps . newHashMap (); m . put ( \"fruit\" , \"banana\" ); m . put ( \"color\" , \"yellow\" ); return new Object [][] { % raw % }{{ rec1 },{ rec2 }}{ % endraw % } ; } }","title":"BDD2"},{"location":"latest/bdd2/#comment","text":"Comments can be placed any where in the bdd file. Comment can be single line or multiline. Single line comment starts with # or ! . Multi-line comments start with \"\"\" and end with \"\"\" .Multiline comment in scenario or background logged in report as info message, however comments outside will not logged in report. # this is example of single line comment # single line comment will be ignored by BDD parser ! this is also a comment \"\"\" This is multi line comment will be logged in report if it is inside background or scenario. \"\"\"","title":"Comment"},{"location":"latest/bdd2/#line-break","text":"To break statement in multiple line you can use _& as line break.","title":"line-break"},{"location":"latest/bdd2/#meta-data","text":"There are predefined meta-key available to use which are listed in meta-data . You can define your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. The meta-data are collected as part of the scenario parsing and made available for different uses, e.g. Scenario selection, setting priority @description:Data driven test that uses csv file to provide data @group1 @group2 @author: Chirag Jayswal SCENARIO: Scenario Example Given I am on fruits and colors activity When i select 'grapes' Then the color should be 'green'","title":"Meta-data"},{"location":"latest/bdd2/#data-driven-scenario","text":"You can iterate your scenario with set of test data by providing examples with scenario outline. You also can provide data from qaf data provider by providing @QAFDataProvider property as meta-data.Refer make test data driven , any of the @QAFDataProvider property you can set as meta-data. Below example demonstrates data-driven feature @author:Chirag Jayswal @regression @dataFile:resources/data/testdata.csv SCENARIO: Data-driven Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Below is csv data file and first row is column names. testdata.csv fruit,color grapes,green banana,yellow Scenario outline with examples. @regression @author:Chirag Jayswal Scenario Outline: Data-driven Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Examples: |fruit|color| |grapes|green| |banana|yellow| You can also use groups/tags with Examples , however data-provider recommended over Examples with or without groups. If you want to uses custom data set you need to provide data provider class and data provider name in meta-data. @dataProvider:my-custom-dp @dataProviderClass:my.project.impl.CustomDataProvider @regression @author:Chirag Jayswal Scenario: Custom Data provider Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Above scenario will use custom data provider defined in class CustomDataProvider . It will add regression group and Chirag Jayswal as custom meta-data author . package my.project.impl ; import java.util.Map ; import org.testng.annotations.DataProvider ; import org.testng.collections.Maps ; /** * @author chirag.jayswal * */ public class CustomDataProvider { @DataProvider ( name = \"my-custom-dp\" ) public static Object [][] dataProviderForBDD (){ Map < Object , Object > rec1 = Maps . newHashMap (); m . put ( \"fruit\" , \"grapes\" ); m . put ( \"color\" , \"green\" ); Map < Object , Object > rec2 = Maps . newHashMap (); m . put ( \"fruit\" , \"banana\" ); m . put ( \"color\" , \"yellow\" ); return new Object [][] { % raw % }{{ rec1 },{ rec2 }}{ % endraw % } ; } }","title":"Data-driven Scenario"},{"location":"latest/create_test_project/","text":"Option 1 - QAS Users \u00b6 If you are using QAS (QMetry Automation Studio) then create project using new project wizard. Option 2 - Eclipse Users \u00b6 Clone/Download this repository for sample project. You can directly import project in Eclipse. Following plugins are recommanded for eclipse users. TestNG Apache IvyDE plugin (not requred for maven project) Maven plugin (not required for IVY + Ant project) BDD Editor plugin - BDD and Gherkin Editor for BDD test authoring","title":"Creating Test Project"},{"location":"latest/create_test_project/#option-1-qas-users","text":"If you are using QAS (QMetry Automation Studio) then create project using new project wizard.","title":"Option 1 - QAS Users"},{"location":"latest/create_test_project/#option-2-eclipse-users","text":"Clone/Download this repository for sample project. You can directly import project in Eclipse. Following plugins are recommanded for eclipse users. TestNG Apache IvyDE plugin (not requred for maven project) Maven plugin (not required for IVY + Ant project) BDD Editor plugin - BDD and Gherkin Editor for BDD test authoring","title":"Option 2 - Eclipse Users"},{"location":"latest/creating_configuration_file/","text":"To configure test run, you need to provide configuration file. As QAF is built upon TestNG you need to provide XML or YAML configuration file that is supported by TestNG. Please refer TestNG Documentation for syntax and sample of XML and YAML configuration file. In addition QAF provides following features. Use of properties in parameter value \u00b6 You can make use of any property for defining value of parameter. <parameter name= \"env.resources\" value= \"resources/mobile/${brand.name}\" /> Note: While accessing such parameter using @parameter annotation of TestNG the property value will not get reflected in parameter value. In such case you need to take care in code. Configuring combinations \u00b6 See the below example of configuration file. It will execute test for \"Westin\" brand for \"mobile\" platform of AUT on two different mobile platform android and IPhone in parallel. <suite name= \"AUT Test Automation\" verbose= \"0\" parallel= \"true\" > <parameter name= \"brand.name\" value= \"westin\" /> <parameter name= \"target.platform\" value= \"mobile\" /> <test name= \"Mobile Web Tests on IPhone\" > <parameter name= \"remote.server\" value= \"10.12.49.180\" /> <parameter name= \"remote.port\" value= \"3001\" /> <parameter name= \"driver.name\" value= \"iphoneRemoteDriver\" /> ... </test> <test name= \"Mobile Web Tests on android\" > <parameter name= \"remote.server\" value= \"10.12.48.87\" /> <parameter name= \"remote.port\" value= \"8080\" /> <parameter name= \"driver.name\" value= \"androidRemoteDriver\" /> ... </test> </suite> Accessing parameter in code \u00b6 Any parameter provided through configuration file will be available through configuration manager in addition to @parameter annotation. So one can access parameter in code, which is not TestNG test or configuration method. <suite name= \"AUT Test Automation\" verbose= \"0\" parallel= \"false\" > <parameter name= \"brand.name\" value= \"westin\" /> <test name= \"Mobile Web Tests\" > <parameter name= \"target.platform\" value= \"mobile\" /> ... </test> <test name= \"Branded Web Tests\" > <parameter name= \"target.platform\" value= \"web\" /> ... </test> </suite> In above configuration file \"target.platform\" is provided as parameter that can be accessed in code as given below: String platform = ConfigurationManager . getBundle (). getString ( \"target.platform\" ); Here during execution of test case for \"Mobile Web Tests\" the parameter value will be \"mobile\" and for \"Branded Web Tests\" it will be \"web\" as defined in configuration file.","title":"Creating configuration file"},{"location":"latest/creating_configuration_file/#use-of-properties-in-parameter-value","text":"You can make use of any property for defining value of parameter. <parameter name= \"env.resources\" value= \"resources/mobile/${brand.name}\" /> Note: While accessing such parameter using @parameter annotation of TestNG the property value will not get reflected in parameter value. In such case you need to take care in code.","title":"Use of properties in parameter value"},{"location":"latest/creating_configuration_file/#configuring-combinations","text":"See the below example of configuration file. It will execute test for \"Westin\" brand for \"mobile\" platform of AUT on two different mobile platform android and IPhone in parallel. <suite name= \"AUT Test Automation\" verbose= \"0\" parallel= \"true\" > <parameter name= \"brand.name\" value= \"westin\" /> <parameter name= \"target.platform\" value= \"mobile\" /> <test name= \"Mobile Web Tests on IPhone\" > <parameter name= \"remote.server\" value= \"10.12.49.180\" /> <parameter name= \"remote.port\" value= \"3001\" /> <parameter name= \"driver.name\" value= \"iphoneRemoteDriver\" /> ... </test> <test name= \"Mobile Web Tests on android\" > <parameter name= \"remote.server\" value= \"10.12.48.87\" /> <parameter name= \"remote.port\" value= \"8080\" /> <parameter name= \"driver.name\" value= \"androidRemoteDriver\" /> ... </test> </suite>","title":"Configuring combinations"},{"location":"latest/creating_configuration_file/#accessing-parameter-in-code","text":"Any parameter provided through configuration file will be available through configuration manager in addition to @parameter annotation. So one can access parameter in code, which is not TestNG test or configuration method. <suite name= \"AUT Test Automation\" verbose= \"0\" parallel= \"false\" > <parameter name= \"brand.name\" value= \"westin\" /> <test name= \"Mobile Web Tests\" > <parameter name= \"target.platform\" value= \"mobile\" /> ... </test> <test name= \"Branded Web Tests\" > <parameter name= \"target.platform\" value= \"web\" /> ... </test> </suite> In above configuration file \"target.platform\" is provided as parameter that can be accessed in code as given below: String platform = ConfigurationManager . getBundle (). getString ( \"target.platform\" ); Here during execution of test case for \"Mobile Web Tests\" the parameter value will be \"mobile\" and for \"Branded Web Tests\" it will be \"web\" as defined in configuration file.","title":"Accessing parameter in code"},{"location":"latest/creatingtestpages/","text":"Implementation of abstract methods \u00b6 The BaseTestPage class contains following abstract methods that need to be implemented in test page class. protected void initParent () protected void openPage ( PageLocator loc ) public boolean isPageActive () initParent : Initialize parent in this method. For example in MyAccount class the implementation look like: protected void initParent (){ parent = new HomePage (); } openPage : This method provides page locator as argument which is passed when calling launch page. You can assume that at the time when this method gets executed, the parent page will be available in browser. So you can call any of the method available in parent class that navigates you to this page or perform some action to open this page. For HomePage : protected void openPage ( PageLocator loc ){ driver . get ( \"/\" ); } For MyAccountPage: Assuming that in parent page (HomePage in this example), there is openMyAccount method defined to navigate to my account from home page. protected void openPage ( PageLocator loc ){ parent . openMyAccount (); } Here is another example that directly access parent page element to navigate to My Account page. protected void openPage ( PageLocator loc ){ parent . getMyAccountLink (). click (); } Here is another example that uses locator to identify unique item on parent page for which item detail view page can be open. protected void openPage ( PageLocator loc ){ parent . viewCartItem ( loc . getLoc ()); } Wait Service \u00b6 Each page derives wait service from BaseTestPage . Wait service provide different wait method that can be used in your page functionality. Overloading methods of Base class There are some methods that have implementation in BaseTestPage and can be overridden as per nature of the page or to provide some additional functionality before and after launch and wait for page to load. @Override public void waitForPageToLoad () { //custom implementation } Override before launch and after launch method to provide before/after launch steps to be taken. {% include inline_image.html file=\"testpageflow.png\" alt=\"Test Page Flow\" %} To create test page using webdriver API you need to extend WebdriverBaseTestPage class. It supports all the above features and provide handle of webdriver instead of selenium, taking care to initialize webelement annotated with @FindBy annotation provided by selenium or QAF. It also supports custom components. Using @FindBy \u00b6 @FindBy(locator = \"<Element Locator>\") @FindBy(locator = \"css=<css locator>\") @FindBy(locator = \"xpath=<xpath locator>\") @FindBy(locator = \"id=<element id>\") @FindBy(locator = \"name=<element name>\") @FindBy(locator = \"link=<link text>\") @FindBy(locator = \"partialLink=<partial link text>\") @FindBy(locator = \"className=<class name>\") @FindBy(locator = \"tagName=<tagName>\") @FindBy(locator = \"<attribute-name>=<attribute-value>\") @FindBy(locator = \"key=<property that holds actual locator>\") @FindBy(locator = \"property that holds actual locator\") When you are using @FindBy annotation in page or in component following element meta-data will be added to element by the QAF: * pageClass : name of the class that declares the element (e.g: HomePage in example below) * objectName : name of the object (e.g: header in example below for HomePage.header) Below interface holds locators that are used in \"HomePage\". Here locators are self descriptive locators. public interface HomePageLocators { static final String HEADER_LOC = \"{'locator':'css=.header';'desc':'Header of Page'}\" ; static final String MENU_LOC = \"{'locator':'css=.menu_area';'desc':'Menu of Page'}\" ; static final String SLIDER_LOC = \"{'locator':'css=.nivoSlider';'desc':'Slid Show in Home Page'}\" ; static final String SEARCH_TEXTBOX_LOC = \"{'locator':'css=#q';'desc':'Search Text Box'}\" ; static final String SEARCH_BUTTON_LOC = \"{'locator':'css=.search_bg a';'desc':'Search Button'}\" ; } Below is sample test page: import com.qmetry.qaf.automation.ui.annotations.FindBy ; ... public class HomePage extends WebDriverBaseTestPage < WebDriverTestPage > implements HomePageLocators { @FindBy ( locator = HEADER_LOC ) private TopHeader header ; @FindBy ( locator = MENU_LOC ) private TopMenu menu ; @FindBy ( locator = SLIDER_LOC ) private QAFWebElement slider ; @FindBy ( locator = SEARCH_TEXTBOX_LOC ) private QAFWebElement searchTextbox ; @FindBy ( locator = SEARCH_BUTTON_LOC ) private QAFWebElement searchButton ; @Override public boolean isPageActive ( PageLocator loc , Object ... args ) { return header . isPresent (); } @Override protected void openPage ( PageLocator arg0 , Object ... arg1 ) { driver . get ( \"/\" ); } public TopHeader getTopHeader () { return header ; } public TopMenu getTopMenu () { return menu ; } public QAFWebElement getSlider () { return slider ; } public QAFWebElement getSearchtextBox () { return searchTextbox ; } public QAFWebElement getSearchButton () { return searchButton ; } } Page identifiers (since 2.1.14)(next release) \u00b6 You can annotate webelement with @PageIdentifier annotation. All element with @PageIdentifier Annotation will be considered as page identifier. It will be used by waitForPageToLoad() and isPageActive() to check page is active or to wait for to page load. import com.qmetry.qaf.automation.ui.annotations.PageIdentifier ; ... public class HomePage extends WebDriverBaseTestPage < WebDriverTestPage > implements HomePageLocators { @FindBy ( locator = HEADER_LOC ) private TopHeader header ; ... @PageIdentifier @FindBy ( locator = SEARCH_TEXTBOX_LOC ) private QAFWebElement searchTextbox ; @PageIdentifier @FindBy ( locator = SEARCH_BUTTON_LOC ) private QAFWebElement searchButton ; ... }","title":"Creating Test Pages"},{"location":"latest/creatingtestpages/#implementation-of-abstract-methods","text":"The BaseTestPage class contains following abstract methods that need to be implemented in test page class. protected void initParent () protected void openPage ( PageLocator loc ) public boolean isPageActive () initParent : Initialize parent in this method. For example in MyAccount class the implementation look like: protected void initParent (){ parent = new HomePage (); } openPage : This method provides page locator as argument which is passed when calling launch page. You can assume that at the time when this method gets executed, the parent page will be available in browser. So you can call any of the method available in parent class that navigates you to this page or perform some action to open this page. For HomePage : protected void openPage ( PageLocator loc ){ driver . get ( \"/\" ); } For MyAccountPage: Assuming that in parent page (HomePage in this example), there is openMyAccount method defined to navigate to my account from home page. protected void openPage ( PageLocator loc ){ parent . openMyAccount (); } Here is another example that directly access parent page element to navigate to My Account page. protected void openPage ( PageLocator loc ){ parent . getMyAccountLink (). click (); } Here is another example that uses locator to identify unique item on parent page for which item detail view page can be open. protected void openPage ( PageLocator loc ){ parent . viewCartItem ( loc . getLoc ()); }","title":"Implementation of abstract methods"},{"location":"latest/creatingtestpages/#wait-service","text":"Each page derives wait service from BaseTestPage . Wait service provide different wait method that can be used in your page functionality. Overloading methods of Base class There are some methods that have implementation in BaseTestPage and can be overridden as per nature of the page or to provide some additional functionality before and after launch and wait for page to load. @Override public void waitForPageToLoad () { //custom implementation } Override before launch and after launch method to provide before/after launch steps to be taken. {% include inline_image.html file=\"testpageflow.png\" alt=\"Test Page Flow\" %} To create test page using webdriver API you need to extend WebdriverBaseTestPage class. It supports all the above features and provide handle of webdriver instead of selenium, taking care to initialize webelement annotated with @FindBy annotation provided by selenium or QAF. It also supports custom components.","title":"Wait Service"},{"location":"latest/creatingtestpages/#using-findby","text":"@FindBy(locator = \"<Element Locator>\") @FindBy(locator = \"css=<css locator>\") @FindBy(locator = \"xpath=<xpath locator>\") @FindBy(locator = \"id=<element id>\") @FindBy(locator = \"name=<element name>\") @FindBy(locator = \"link=<link text>\") @FindBy(locator = \"partialLink=<partial link text>\") @FindBy(locator = \"className=<class name>\") @FindBy(locator = \"tagName=<tagName>\") @FindBy(locator = \"<attribute-name>=<attribute-value>\") @FindBy(locator = \"key=<property that holds actual locator>\") @FindBy(locator = \"property that holds actual locator\") When you are using @FindBy annotation in page or in component following element meta-data will be added to element by the QAF: * pageClass : name of the class that declares the element (e.g: HomePage in example below) * objectName : name of the object (e.g: header in example below for HomePage.header) Below interface holds locators that are used in \"HomePage\". Here locators are self descriptive locators. public interface HomePageLocators { static final String HEADER_LOC = \"{'locator':'css=.header';'desc':'Header of Page'}\" ; static final String MENU_LOC = \"{'locator':'css=.menu_area';'desc':'Menu of Page'}\" ; static final String SLIDER_LOC = \"{'locator':'css=.nivoSlider';'desc':'Slid Show in Home Page'}\" ; static final String SEARCH_TEXTBOX_LOC = \"{'locator':'css=#q';'desc':'Search Text Box'}\" ; static final String SEARCH_BUTTON_LOC = \"{'locator':'css=.search_bg a';'desc':'Search Button'}\" ; } Below is sample test page: import com.qmetry.qaf.automation.ui.annotations.FindBy ; ... public class HomePage extends WebDriverBaseTestPage < WebDriverTestPage > implements HomePageLocators { @FindBy ( locator = HEADER_LOC ) private TopHeader header ; @FindBy ( locator = MENU_LOC ) private TopMenu menu ; @FindBy ( locator = SLIDER_LOC ) private QAFWebElement slider ; @FindBy ( locator = SEARCH_TEXTBOX_LOC ) private QAFWebElement searchTextbox ; @FindBy ( locator = SEARCH_BUTTON_LOC ) private QAFWebElement searchButton ; @Override public boolean isPageActive ( PageLocator loc , Object ... args ) { return header . isPresent (); } @Override protected void openPage ( PageLocator arg0 , Object ... arg1 ) { driver . get ( \"/\" ); } public TopHeader getTopHeader () { return header ; } public TopMenu getTopMenu () { return menu ; } public QAFWebElement getSlider () { return slider ; } public QAFWebElement getSearchtextBox () { return searchTextbox ; } public QAFWebElement getSearchButton () { return searchButton ; } }","title":"Using @FindBy"},{"location":"latest/creatingtestpages/#page-identifiers-since-2114next-release","text":"You can annotate webelement with @PageIdentifier annotation. All element with @PageIdentifier Annotation will be considered as page identifier. It will be used by waitForPageToLoad() and isPageActive() to check page is active or to wait for to page load. import com.qmetry.qaf.automation.ui.annotations.PageIdentifier ; ... public class HomePage extends WebDriverBaseTestPage < WebDriverTestPage > implements HomePageLocators { @FindBy ( locator = HEADER_LOC ) private TopHeader header ; ... @PageIdentifier @FindBy ( locator = SEARCH_TEXTBOX_LOC ) private QAFWebElement searchTextbox ; @PageIdentifier @FindBy ( locator = SEARCH_BUTTON_LOC ) private QAFWebElement searchButton ; ... }","title":"Page identifiers (since 2.1.14)(next release)"},{"location":"latest/custom_component/","text":"To create a component you need to extend com.qmetry.qaf.automation.webdriver.QAFWebComponent . {% include inline_image.html file=\"CustomComponent1.png\" alt=\"Custom Component \" %} {% include inline_image.html file=\"CustomComponent2.png\" alt=\"Custom Component \" %} public class Property extends QAFWebComponent { @FindBy ( locator = NAME_LOC ) private QAFWebElement name ; @FindBy ( locator = BOOK_BTN_LOC ) private QAFWebElement bookBtn ; @FindBy ( locator = RATEOPTION_COMP_LOC ) private List < WebRateOption > rateOptions ; // child component @FindBy ( locator = RATEOPTION_RATECAL_COMP_LOC ) private WebRateCalendar ratCal ... public Property ( String locator ) { super ( locator ); } // child component public class WebRateOption extends QAFWebComponent { @FindBy ( locator = RATEOPTION_LABEL_LOC ) private QAFWebElement label ; @FindBy ( locator = RATEOPTION_RATETEXT_LOC ) private QAFWebElement rateText ; \u2026 public WebRateOption ( String locator ) { super ( locator ); } } } public class SearchResultsPageImpl extends WebDriverBaseTestPage < WebHomePageImpl > { @FindBy ( locator = CHECKINDATE_INPUT_LOC ) private QAFWebElement checkinDate ; @FindBy ( locator = CHECKOUTDATE_INPUT_LOC ) private QAFWebElement checkoutDate ; @FindBy ( locator = PROPERTY_COMP_LOC ) private List < Property > properties ; ... public List < Property > getProperties () { return properties ; } .. } String PROPERTY_COMP_LOC = \"{'locator':'css=.property';'desc':'Property on Search Result Page'}\"; String RATEOPTION_COMP_LOC = \"{'locator':'css=.rateOption';'desc':'Property Rate Option'}\"; String RATE_CAL_LINK_LOC = \"{'locator':'css=.multiRateCalendarLink';'desc':'Browse Dates/Rates Calander Link'}\"; {% include inline_image.html file=\"CustomComponent3.png\" alt=\"Custom Component \" %} You can notice that in page list of property is defined as a list of Property component. The property component also defines RateOptions component and a calendar component. The next step is overriding equals method to search specific component from list of component. For example below sample code demonstrate that we can match property component with string (name or id of property) or a data bean. @Override public boolean equals ( Object obj ) { if ( obj instanceof PropertyDataBean ) { PropertyDataBean bean = ( PropertyDataBean ) obj ; return ( StringUtil . isBlank ( bean . getPropertyName ()) || getName (). getText (). trim (). equalsIgnoreCase ( bean . getPropertyName (). trim ())) && ( StringUtil . isBlank ( bean . getPropertyId ()) || getPropertyId (). trim (). equalsIgnoreCase ( bean . getPropertyId (). trim ())) && (( null == bean . isAvailable ()) || this . isAvailable ()) && ( StringUtil . isBlank ( bean . getCityStateZip ()) || getAddress (). contains ( bean . getCityStateZip ())); } if ( obj instanceof String ) { return getName (). getText (). equalsIgnoreCase (( String ) obj ) || getPropertyId (). equalsIgnoreCase (( String ) obj ); } return super . equals ( obj ); } public class PropertyDataBean extends BaseDataBean { private String propertyName ; private String propertyAddress1 ; private String cityStateZip ; private Boolean isAvailable = null ; private String propertyId ; private String offerName ; private String phoneNumber ; public PropertyDataBean () { } // getters and setters } Now following code in \u201c SearchResultsPageImpl \u201d will return you a specific property to work with as per your requirement private Property getProperty ( Object o ) { for ( Property property : getProperties ()) { if ( property . equals ( o )) { return property ; } } return null ; } Above is example of reusable component in different page/component. You need to create component same as above and declare in different page/component where it is used. @FindBy ( locator = CALENDAR_COMPONENT_LOC ) public WebCalendar calendar ;","title":"Custom component"},{"location":"latest/custom_retry_analyzer/","text":"Custom Retry Analyzer \u00b6 Provide this property to use your custom retry analyzer. Provide own implementation for retry analyzer by specifying qualified class name in 'retry.analyzer' Property. Once 'retry.analyzer' has been specified 'retry.count' property will be not considered. For Example : public class CustomRetryAnalyzer implements IRetryAnalyzer { @Override public boolean retry ( ITestResult result ) { // TODO Auto-generated method stub return false ; } }","title":"Custom Retry Analyzer"},{"location":"latest/custom_retry_analyzer/#custom-retry-analyzer","text":"Provide this property to use your custom retry analyzer. Provide own implementation for retry analyzer by specifying qualified class name in 'retry.analyzer' Property. Once 'retry.analyzer' has been specified 'retry.count' property will be not considered. For Example : public class CustomRetryAnalyzer implements IRetryAnalyzer { @Override public boolean retry ( ITestResult result ) { // TODO Auto-generated method stub return false ; } }","title":"Custom Retry Analyzer"},{"location":"latest/databeans/","text":"To provide data you can use data beans also. To create data bean you required to extend BaseDataBean class. Data bean can be created to provide data to filling forms to communicate data between two or more test case/page and so on. Main advantage of using data beans is Ease of use it can be populated with Random data CSV data Java Map object Below is the sample data bean. public class ContactInfoBean extends BaseDataBean { @Randomizer ( prefix = \"http://www.\" , length = 4 , suffix = \".com\" ) String webSiteURL ; @Randomizer ( length = 3 , type = RandomizerTypes . DIGITS_ONLY ) String phoneAreaCode , faxAreaCode ; @Randomizer ( length = 7 , type = RandomizerTypes . DIGITS_ONLY ) String phoneNum , faxNum , mailPostal ; @Randomizer ( length = 7 ) String mailStreet1 , mailCity ; //getters and setters } The Randomizer annotation can be useful to specify random value nature to be set for the property when filling bean with random data using fillRandomData() method. Below are useful examples of using randomizer: public class SampleBean extends BaseDataBean { // default randomizer length: 10 type: mixed @Randomizer ( type = RandomizerTypes . LETTERS_ONLY ) private String name ; @Randomizer ( type = RandomizerTypes . DIGITS_ONLY , minval = 18 , maxval = 100 ) private String age ; @Randomizer ( minval = 7 , maxval = 15 ) private Date dateOfTravel ; @Randomizer ( suffix = \"@mailinator.com\" , length = 6 ) private String email ; private String pwd ; @Randomizer ( format = \"999-99-9999\" ) private String ssn ; @Randomizer ( skip = true ) private String dontRandomizeMe ; //getters and setters } To fill random data: sampleBean.fillRandomData(\"sample.data\"); Data bean property random value from list \u00b6 Now there is a provision to provide list of values to choose random value with Randomizer. A \"dataset\" parameter is added in Randomizer annotation. The value of dataset can be a list or single value (ideally name of property that holds list of values). @Randomizer ( dataset = { \"male\" , \"female\" }) public String gender ; @Randomizer ( dataset = \"country.list\" ) public String country ; country . list ( in properties file ) country . list = India ; China ; United States ; Africa In first examples list is directly provided as value of dataset, in second example a property name is provided which will have country list as value. Sample of xml data to be filled in bean <testdata> <search> <searchinput> Infostretch </searchinput> </search> <sample> <data> <name> xmldata </name> <email> xmldata@malinator.com </email> <pwd> xmldata123# </pwd> <ssn> 252-06-0029 </ssn> <!-- <dateOfTravel>3/15/2015</dateOfTravel> --> <!-- future date --> <dateOfTravel> 15 </dateOfTravel> </data> </sample> </testdata> Populating bean using above xml data. Assumed that the xml file is under resources. sampleBean.fillFromConfig(\"sample.data\"); Databean population from XML having multiple dataset/node: \u00b6 Consider the example below UserBean and sample xml test data: Class UserBean extends BaseDataBean { String fname ; String lname ; int age ; public String getFname () { return fname ; } public void setFname ( String fname ) { this . fname = fname ; } public String getLname () { return lname ; } public void setLname ( String lname ) { this . lname = lname ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } } Sample of xml: <root> <data> <search> <keyword> infostretch </keyword> <verifyText> Ispl </verifyText> </search> <users> <registered> <user> <fname> mishal </fname> <lname> shah </lname> <age> 35 </age> </user> <user> <fname> shalin </fname> <lname> shah </lname> <age> 30 </age> </user> </registered> </users> </data> </root> Assumed that above xml file is under configured resources. When populating bean using key data.users.registered.user , you can observe there are 2 nodes available with same key. UserBean baseDataBean = new UserBean (); baseDataBean . fillFromConfig ( \"data.users.registed.user\" ); As the default behavior bean will be populated with first node (fname=mishal,lname=shah,age=35). With framework version 2.1.6+, additional Boolean property bean.populate.random is introduced to set bean population behavior random. If user set bean.populate.random=true then bean will populated with any random node from available nodes. For instance, in above example, because 2 nodes are available with key data.users.registered.user , bean will get populated randomly either from first node (fname=mishal,lname=shah,age=35) or second node (fname=shalin,lname=shah,age=30). In general, in the case N available nodes, framework will choose any random node from 1 to N to populate bean. Multiple dataset/node and retry failed test With framework version 2.1.6+, assuming bean.populate.random=false , If test case failed and retry count >0, While rerunning the test case framework will populate bean with next sequential node. For Instance, If 'retry.count'=1 and test case failed, while rerunning the test case, it will populate bean with second node (fname=shalin,lname=shah,age=30). In case of retry count exceeds the XML node count, it will start from first xml data set. Form data bean \u00b6 Form data bean is extended data bean which have capability to interact with UI. In order to create new Form data bean you need to extend BaseFormDataBean class. In addition to @Randomizer it provides @UiElement annotation support. public class FlightSearchForm extends BaseFormDataBean { ... @UiElement ( fieldLoc = FROM_TXT_LOC ) public String from ; @UiElement ( fieldLoc = TO_TXT_LOC ) public String to ; ... } Setting dependency and order for dynamic form fields: \u00b6 There may be some dynamic UI form fields those are additional fields depending on selection of value in field. For example, take example of flight booking form. If user selects trip type as \"return trip\" then there will be additional required field of return date. For this requirement there are following two parameters available with UiElement annotation. dependsOnField : specify the field name on which this field is dependent dependingValue : value of the field that can be either string or a valid JavaScript statement. The JavaScript statement must be valid logical condition returning Boolean value true/false. In JavaScript statement you can pass any of the form field as parameter (i.e. ${fieldName}). Another aspect in case of dependency is; you must need to ensure order for fill UI data. For example, assuming \"return trip\" in trip selection form, you must fill trip type and after selection, return date will be available in UI as required field that you need to fill. To fill UI data in specific order, you can set order parameter. @UiElement ( fieldLoc = TRIP_TYPE_OPT_LOC , fieldType = Type . optionbox , order = 1 ) public String tripType ; ... @UiElement ( fieldLoc = RETURN_DATE_LOC , dependsOnField = \"tripType\" , dependingValue = \"roundTrip\" , order = 9 ) public String returnDate ; @UiElement ( fieldLoc = RETURN_TIME_LOC , dependsOnField = \"tripType\" , dependingValue = \"roundTrip\" , fieldType = Type . selectbox , order = 10 ) public String returnTime ; ... @Randomizer ( minval = 0 , maxval = 2 ) @UiElement ( fieldLoc = NUB_OF_CHLD_SEL_LOC , fieldType = Type . selectbox , order = 13 ) public int numChild ; @Randomizer ( minval = 1 , maxval = 17 ) @UiElement ( fieldLoc = CHLD1_AGE_LOC , dependsOnField = \"numChild\" , fieldType = Type . selectbox , dependingValue = \"${numChild}>0\" , order = 14 ) public int chield1Age = \"1\" ; @Randomizer ( minval = 1 , maxval = 17 ) @UiElement ( fieldLoc = CHLD2_AGE_LOC , fieldType = Type . selectbox , dependsOnField = \"numChild\" , dependingValue = \"${numChild}>1\" , order = 15 ) public int chield2Age = \"1\" ;","title":"Data Beans"},{"location":"latest/databeans/#data-bean-property-random-value-from-list","text":"Now there is a provision to provide list of values to choose random value with Randomizer. A \"dataset\" parameter is added in Randomizer annotation. The value of dataset can be a list or single value (ideally name of property that holds list of values). @Randomizer ( dataset = { \"male\" , \"female\" }) public String gender ; @Randomizer ( dataset = \"country.list\" ) public String country ; country . list ( in properties file ) country . list = India ; China ; United States ; Africa In first examples list is directly provided as value of dataset, in second example a property name is provided which will have country list as value. Sample of xml data to be filled in bean <testdata> <search> <searchinput> Infostretch </searchinput> </search> <sample> <data> <name> xmldata </name> <email> xmldata@malinator.com </email> <pwd> xmldata123# </pwd> <ssn> 252-06-0029 </ssn> <!-- <dateOfTravel>3/15/2015</dateOfTravel> --> <!-- future date --> <dateOfTravel> 15 </dateOfTravel> </data> </sample> </testdata> Populating bean using above xml data. Assumed that the xml file is under resources. sampleBean.fillFromConfig(\"sample.data\");","title":"Data bean property random value from list"},{"location":"latest/databeans/#databean-population-from-xml-having-multiple-datasetnode","text":"Consider the example below UserBean and sample xml test data: Class UserBean extends BaseDataBean { String fname ; String lname ; int age ; public String getFname () { return fname ; } public void setFname ( String fname ) { this . fname = fname ; } public String getLname () { return lname ; } public void setLname ( String lname ) { this . lname = lname ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } } Sample of xml: <root> <data> <search> <keyword> infostretch </keyword> <verifyText> Ispl </verifyText> </search> <users> <registered> <user> <fname> mishal </fname> <lname> shah </lname> <age> 35 </age> </user> <user> <fname> shalin </fname> <lname> shah </lname> <age> 30 </age> </user> </registered> </users> </data> </root> Assumed that above xml file is under configured resources. When populating bean using key data.users.registered.user , you can observe there are 2 nodes available with same key. UserBean baseDataBean = new UserBean (); baseDataBean . fillFromConfig ( \"data.users.registed.user\" ); As the default behavior bean will be populated with first node (fname=mishal,lname=shah,age=35). With framework version 2.1.6+, additional Boolean property bean.populate.random is introduced to set bean population behavior random. If user set bean.populate.random=true then bean will populated with any random node from available nodes. For instance, in above example, because 2 nodes are available with key data.users.registered.user , bean will get populated randomly either from first node (fname=mishal,lname=shah,age=35) or second node (fname=shalin,lname=shah,age=30). In general, in the case N available nodes, framework will choose any random node from 1 to N to populate bean. Multiple dataset/node and retry failed test With framework version 2.1.6+, assuming bean.populate.random=false , If test case failed and retry count >0, While rerunning the test case framework will populate bean with next sequential node. For Instance, If 'retry.count'=1 and test case failed, while rerunning the test case, it will populate bean with second node (fname=shalin,lname=shah,age=30). In case of retry count exceeds the XML node count, it will start from first xml data set.","title":"Databean population from XML having multiple dataset/node:"},{"location":"latest/databeans/#form-data-bean","text":"Form data bean is extended data bean which have capability to interact with UI. In order to create new Form data bean you need to extend BaseFormDataBean class. In addition to @Randomizer it provides @UiElement annotation support. public class FlightSearchForm extends BaseFormDataBean { ... @UiElement ( fieldLoc = FROM_TXT_LOC ) public String from ; @UiElement ( fieldLoc = TO_TXT_LOC ) public String to ; ... }","title":"Form data bean"},{"location":"latest/databeans/#setting-dependency-and-order-for-dynamic-form-fields","text":"There may be some dynamic UI form fields those are additional fields depending on selection of value in field. For example, take example of flight booking form. If user selects trip type as \"return trip\" then there will be additional required field of return date. For this requirement there are following two parameters available with UiElement annotation. dependsOnField : specify the field name on which this field is dependent dependingValue : value of the field that can be either string or a valid JavaScript statement. The JavaScript statement must be valid logical condition returning Boolean value true/false. In JavaScript statement you can pass any of the form field as parameter (i.e. ${fieldName}). Another aspect in case of dependency is; you must need to ensure order for fill UI data. For example, assuming \"return trip\" in trip selection form, you must fill trip type and after selection, return date will be available in UI as required field that you need to fill. To fill UI data in specific order, you can set order parameter. @UiElement ( fieldLoc = TRIP_TYPE_OPT_LOC , fieldType = Type . optionbox , order = 1 ) public String tripType ; ... @UiElement ( fieldLoc = RETURN_DATE_LOC , dependsOnField = \"tripType\" , dependingValue = \"roundTrip\" , order = 9 ) public String returnDate ; @UiElement ( fieldLoc = RETURN_TIME_LOC , dependsOnField = \"tripType\" , dependingValue = \"roundTrip\" , fieldType = Type . selectbox , order = 10 ) public String returnTime ; ... @Randomizer ( minval = 0 , maxval = 2 ) @UiElement ( fieldLoc = NUB_OF_CHLD_SEL_LOC , fieldType = Type . selectbox , order = 13 ) public int numChild ; @Randomizer ( minval = 1 , maxval = 17 ) @UiElement ( fieldLoc = CHLD1_AGE_LOC , dependsOnField = \"numChild\" , fieldType = Type . selectbox , dependingValue = \"${numChild}>0\" , order = 14 ) public int chield1Age = \"1\" ; @Randomizer ( minval = 1 , maxval = 17 ) @UiElement ( fieldLoc = CHLD2_AGE_LOC , fieldType = Type . selectbox , dependsOnField = \"numChild\" , dependingValue = \"${numChild}>1\" , order = 15 ) public int chield2Age = \"1\" ;","title":"Setting dependency and order for dynamic form fields:"},{"location":"latest/debugging/","text":"Debugging \u00b6 For testing purpose test case/class or suite can be run within eclipse. Please refer TestNG eclipse plug-in documentation for details on how to run test tests from Eclipse. Using running Driver Session Testing Mobile web in desktop Browser with modify header QAF cucumber","title":"Debugging"},{"location":"latest/debugging/#debugging","text":"For testing purpose test case/class or suite can be run within eclipse. Please refer TestNG eclipse plug-in documentation for details on how to run test tests from Eclipse. Using running Driver Session Testing Mobile web in desktop Browser with modify header QAF cucumber","title":"Debugging"},{"location":"latest/development_overview/","text":"{% include note.html content=\"If you know something about TestNG and Selenium, then the next sections will interest you\" %}","title":"Development with QAF"},{"location":"latest/different_ways_of_providing_prop/","text":"QAF provide different way to specify properties and you need to know which value will take effect when you are providing same property with multiple ways. Following are ways of providing property in the order of their priority. System property TestNG parameter Property file (either xml or .properties) Consider the following default env.properties file where properties are provided for execution environment. #set one of the platform: mobile or web target.platform = mobile brand.name = westin Now consider the following configuration file. <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite name= \"AUT Test Automation\" verbose= \"0\" parallel= \"false\" > <test name= \"whotels brand\" > <parameter name= \"brand.name\" value= \"whotels\" /> <classes> <class name= \"com.aut.automation.tests.web.Demo\" /> </classes> </test> </suite> Here you can see that \"brand.name\" is provided at two places, one in property file and second in configuration file. In this case \"brand.name\" value will take effect from configuration file as it has high priority then property defined in property file. Encryption support \u00b6 With 2.1.13, QAF supports encryted values for any secure data, for instance password. When configuration manager found any key starts with encrypted prefix, for example encripted.db.pwd , then it will store decrypted value without prefix, db.pwd in this example. So you can reference decrypted value anywhere in the code with key without this prefix ( db.pwd in this example). By default encryption is Base64 so value for the properties with prefix encrypted is expected Base64 encrypted. If you want to use custom encryption algorithm and provide other than Base64 encrypted value, you need to set PasswordDecryptor using property password.decryptor.impl with fully qualified name of the class that implements PasswordDecryptor . The implementation will be used to decrypt password, When configuration manager found any key starts with encrypted Example: Property file: encrypted.user.pwd = Q2hpcmFnMTIzIw== in code: String pwd = getBundle (). getString ( \"user.pwd\" ); element . sendKeys ( pwd ); If you want sendkeys to log encrypted password instead of plain text not using property to hold value (for example data-driven test), set element meta-data type to password and use encrypted value. Make sure you haven't disabled element meta-data listener. For example: Locator: my.pwd.fld = {\"locator\":\"xpath=//*[@name='password']\",\"desc\":\"Password Input box\", \"type\":'password'} String encryptedPwd = getBundle (). getString ( \"encrypted.user.pwd\" ); element . sendKeys ( encryptedPwd ); element . sendKeys ( \"Q2hpcmFnMTIzIw==\" );","title":"Different ways of providing properties"},{"location":"latest/different_ways_of_providing_prop/#encryption-support","text":"With 2.1.13, QAF supports encryted values for any secure data, for instance password. When configuration manager found any key starts with encrypted prefix, for example encripted.db.pwd , then it will store decrypted value without prefix, db.pwd in this example. So you can reference decrypted value anywhere in the code with key without this prefix ( db.pwd in this example). By default encryption is Base64 so value for the properties with prefix encrypted is expected Base64 encrypted. If you want to use custom encryption algorithm and provide other than Base64 encrypted value, you need to set PasswordDecryptor using property password.decryptor.impl with fully qualified name of the class that implements PasswordDecryptor . The implementation will be used to decrypt password, When configuration manager found any key starts with encrypted Example: Property file: encrypted.user.pwd = Q2hpcmFnMTIzIw== in code: String pwd = getBundle (). getString ( \"user.pwd\" ); element . sendKeys ( pwd ); If you want sendkeys to log encrypted password instead of plain text not using property to hold value (for example data-driven test), set element meta-data type to password and use encrypted value. Make sure you haven't disabled element meta-data listener. For example: Locator: my.pwd.fld = {\"locator\":\"xpath=//*[@name='password']\",\"desc\":\"Password Input box\", \"type\":'password'} String encryptedPwd = getBundle (). getString ( \"encrypted.user.pwd\" ); element . sendKeys ( encryptedPwd ); element . sendKeys ( \"Q2hpcmFnMTIzIw==\" );","title":"Encryption support"},{"location":"latest/docs/","text":"Overview \u00b6 Powerful Automation Platform for Test Authoring, Test Execution and Execution Analysis It provides a powerful and versatile platform to author Test Cases in Behavior Driven, Keyword Driven or Code Driven approach. It helps to significantly reduce costs involved in setting up Test Automation at any organization. It is a right tool for Web Platform, Mobile Platform (Native, Mobile Web, HTML5,etc) and Web Service test automation solution using Selenium and other related technologies. QMetry Automation Framework benefits any QA Team in developing highly maintainable and repeatable tests that utilize reusable test assets, proper modularity and semantic structure. Descriptive Reporting satisfies high-level as well as low-level (debugging) aspects. QMetry Automation Framework is designed to solve common industry problems related to testing complex web systems. The framework is best suited for writing Automated Web, Mobile Web and Mobile Native Application UI Tests simulate real user activities on the page. The framework is built upon java and integrates TestNG, Selenium/Webdriver, Appium and Perfecto. Due to the framework's thorough design, test developer does not need to worry about common tasks such as thread safe browser session for running test in parallel, reporting or to incorporate result with test management tools. The tests run can be configured through standard testing configuration files, the test run filters and behavior can be changed within the config File. The architecture of the framework ensures a low cost of maintenance while supporting extensibility by: Abstracting the technical implementation away from the operational components Following accepted design patterns in creating the core functionalities within the framework. Providing an approach to develop highly maintainable and repeatable tests that utilize reusable test assets, proper modularity and semantic structure. Framework has readymade services for assertions, browser, reporting and data. Also, framework concept is based on page services so your page and related actions will be reusable from any test case. There is a good logging functionality and screen shot facility for assertions. Key Features \u00b6 QMetry Automation Framework supports integrations with Test Management Platform (QMetry, Rally, ApTest, HP ALM, etc), Continuous Integration Systems (Jenkins, Bamboo, etc), Mobile Device Cloud Solutions (SauceLabs, Perfecto Mobile, etc). QMetry Automation Framework Key Features: Test Authoring: Behavior Driven Development (BDD), Keyword Driven and Code Driven Development Test Data Management: Test Data Support (CSV, JSON, XML etc), Different Locales support, Different Environments support Execution Reporting: Execution Dashboard, Detailed Analysis and Screenshot Capturing, Integrations with Test Management Tools, etc Some benefits of using the framework are: Less maintenance More reusability of code Reduced execution time Data-driven capability Easy configurable parallel execution Descriptive report Utility classes Test Results integration with test management tools like QMetry, Rally. Integration with Sauce labs, Supports parallel execution Enabling testing across multiple platforms with or without selenium grid Question over here is how the framework reduces maintenance, execution time and reuses code? QMetry Automation Framework provides high level construct to satisfy automation needs. It includes top level interfaces, abstract base classes, service classes and their implementations and custom annotations. Test developer only need to concentrate on writing the tests and not spend time on adjusting the underlying framework. This framework provides test page concept in a best efficient way by which you can manipulate page navigation same as on actual web application under test. Once page get created page objects/functionalities can be used in any test case, makes code more reusable. The framework takes care of not only launching that page but the entire page hierarchy to reach that specific page. Furthermore it also checks that is page already active in browser? If so then it will continue from there, results in reduced execution time. When functionality changes only the specific test page file needs to be updated: if there is any change in page/ui of web application under test you need to update just in particular page rather than each and every test case, thus result in less maintenance. In case of sequential execution it will take advantage of sharing browser sessions between multiple test cases. No special coding or design required to run test in parallel, you just need to set parallel attribute\u2019s appropriate value in configuration file (eg. false, Test, methods, classes) and framework will take care for providing thread safe browser sessions with maximum level of sharing browser session between multiple test cases. This will result in reducing time by parallel processing as well as by some level of sharing browser session(depends on configuration). You also can configure to run parallel in different browser (eg. iexplorer, firefox) with or without selenium grid. If you are not planning for physical distributed selenium server then, without selenium grid, you can achieve higher performance by the framework as compare to grid that configured different selenium server instance on the same physical machine. While integration with Sauce labs, though Sauce labs not provides parallel processing, still you can achieve parallel processing using this framework. Reporting of test run result includes selenium commands log, each test-step details with screenshot on failure. One can configure to capture screenshots for pass verifications too.","title":"Introduction"},{"location":"latest/docs/#overview","text":"Powerful Automation Platform for Test Authoring, Test Execution and Execution Analysis It provides a powerful and versatile platform to author Test Cases in Behavior Driven, Keyword Driven or Code Driven approach. It helps to significantly reduce costs involved in setting up Test Automation at any organization. It is a right tool for Web Platform, Mobile Platform (Native, Mobile Web, HTML5,etc) and Web Service test automation solution using Selenium and other related technologies. QMetry Automation Framework benefits any QA Team in developing highly maintainable and repeatable tests that utilize reusable test assets, proper modularity and semantic structure. Descriptive Reporting satisfies high-level as well as low-level (debugging) aspects. QMetry Automation Framework is designed to solve common industry problems related to testing complex web systems. The framework is best suited for writing Automated Web, Mobile Web and Mobile Native Application UI Tests simulate real user activities on the page. The framework is built upon java and integrates TestNG, Selenium/Webdriver, Appium and Perfecto. Due to the framework's thorough design, test developer does not need to worry about common tasks such as thread safe browser session for running test in parallel, reporting or to incorporate result with test management tools. The tests run can be configured through standard testing configuration files, the test run filters and behavior can be changed within the config File. The architecture of the framework ensures a low cost of maintenance while supporting extensibility by: Abstracting the technical implementation away from the operational components Following accepted design patterns in creating the core functionalities within the framework. Providing an approach to develop highly maintainable and repeatable tests that utilize reusable test assets, proper modularity and semantic structure. Framework has readymade services for assertions, browser, reporting and data. Also, framework concept is based on page services so your page and related actions will be reusable from any test case. There is a good logging functionality and screen shot facility for assertions.","title":"Overview"},{"location":"latest/docs/#key-features","text":"QMetry Automation Framework supports integrations with Test Management Platform (QMetry, Rally, ApTest, HP ALM, etc), Continuous Integration Systems (Jenkins, Bamboo, etc), Mobile Device Cloud Solutions (SauceLabs, Perfecto Mobile, etc). QMetry Automation Framework Key Features: Test Authoring: Behavior Driven Development (BDD), Keyword Driven and Code Driven Development Test Data Management: Test Data Support (CSV, JSON, XML etc), Different Locales support, Different Environments support Execution Reporting: Execution Dashboard, Detailed Analysis and Screenshot Capturing, Integrations with Test Management Tools, etc Some benefits of using the framework are: Less maintenance More reusability of code Reduced execution time Data-driven capability Easy configurable parallel execution Descriptive report Utility classes Test Results integration with test management tools like QMetry, Rally. Integration with Sauce labs, Supports parallel execution Enabling testing across multiple platforms with or without selenium grid Question over here is how the framework reduces maintenance, execution time and reuses code? QMetry Automation Framework provides high level construct to satisfy automation needs. It includes top level interfaces, abstract base classes, service classes and their implementations and custom annotations. Test developer only need to concentrate on writing the tests and not spend time on adjusting the underlying framework. This framework provides test page concept in a best efficient way by which you can manipulate page navigation same as on actual web application under test. Once page get created page objects/functionalities can be used in any test case, makes code more reusable. The framework takes care of not only launching that page but the entire page hierarchy to reach that specific page. Furthermore it also checks that is page already active in browser? If so then it will continue from there, results in reduced execution time. When functionality changes only the specific test page file needs to be updated: if there is any change in page/ui of web application under test you need to update just in particular page rather than each and every test case, thus result in less maintenance. In case of sequential execution it will take advantage of sharing browser sessions between multiple test cases. No special coding or design required to run test in parallel, you just need to set parallel attribute\u2019s appropriate value in configuration file (eg. false, Test, methods, classes) and framework will take care for providing thread safe browser sessions with maximum level of sharing browser session between multiple test cases. This will result in reducing time by parallel processing as well as by some level of sharing browser session(depends on configuration). You also can configure to run parallel in different browser (eg. iexplorer, firefox) with or without selenium grid. If you are not planning for physical distributed selenium server then, without selenium grid, you can achieve higher performance by the framework as compare to grid that configured different selenium server instance on the same physical machine. While integration with Sauce labs, though Sauce labs not provides parallel processing, still you can achieve parallel processing using this framework. Reporting of test run result includes selenium commands log, each test-step details with screenshot on failure. One can configure to capture screenshots for pass verifications too.","title":"Key Features"},{"location":"latest/download/","text":"Blank Project \u00b6 If you are starting form scratch, please refer Creating Test Project under Get started. Maven \u00b6 You can use QAF as a Maven Artifact. Users would need to add this to their pom.xml: Repository entry: <repository> <id> qaf </id> <url> {{site.data.strings.qaf_repository}} </url> </repository> <repository> <id> jai </id> <url> https://repository.jboss.org/nexus/content/repositories/thirdparty-releases </url> </repository> Maven Dependency Entry: <dependency> <groupId> com.qmetry </groupId> <artifactId> qaf </artifactId> <version> latest.integration </version> </dependency> <dependency> <groupId> com.qmetry </groupId> <artifactId> qaf-support </artifactId> <version> latest.integration </version> </dependency> IVY \u00b6 Create or update ivysettings.xml file to add new repository. Alternately you can add settings block into ivy.xml as well. IVY settings <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <ivysettings> <settings defaultResolver= \"qaf\" /> <resolvers> <chain name= \"qaf\" > <ibiblio name= \"central\" m2compatible= \"true\" /> <ibiblio name= \"QAF\" m2compatible= \"true\" root= \"{{site.data.strings.qaf_repository}}\" /> <ibiblio name= \"jai\" m2compatible= \"true\" root= \"https://repository.jboss.org/nexus/content/repositories/thirdparty-releases\" /> </chain> </resolvers> </ivysettings> IVY Dependency Entry <dependency org= \"com.qmetry\" name= \"qaf\" rev= \"latest.integration\" /> <dependency org= \"com.qmetry\" name= \"qaf-support\" rev= \"latest.integration\" /> Direct Download \u00b6 You can download QAF jar from here . You can download QAF Support jar from here . QAF BDD Editors For Eclipse \u00b6 eclipse plugins for QAF BDD and Gherkin editors providing syntax highlighting, syntax validation and content assist.","title":"Download"},{"location":"latest/download/#blank-project","text":"If you are starting form scratch, please refer Creating Test Project under Get started.","title":"Blank Project"},{"location":"latest/download/#maven","text":"You can use QAF as a Maven Artifact. Users would need to add this to their pom.xml: Repository entry: <repository> <id> qaf </id> <url> {{site.data.strings.qaf_repository}} </url> </repository> <repository> <id> jai </id> <url> https://repository.jboss.org/nexus/content/repositories/thirdparty-releases </url> </repository> Maven Dependency Entry: <dependency> <groupId> com.qmetry </groupId> <artifactId> qaf </artifactId> <version> latest.integration </version> </dependency> <dependency> <groupId> com.qmetry </groupId> <artifactId> qaf-support </artifactId> <version> latest.integration </version> </dependency>","title":"Maven"},{"location":"latest/download/#ivy","text":"Create or update ivysettings.xml file to add new repository. Alternately you can add settings block into ivy.xml as well. IVY settings <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <ivysettings> <settings defaultResolver= \"qaf\" /> <resolvers> <chain name= \"qaf\" > <ibiblio name= \"central\" m2compatible= \"true\" /> <ibiblio name= \"QAF\" m2compatible= \"true\" root= \"{{site.data.strings.qaf_repository}}\" /> <ibiblio name= \"jai\" m2compatible= \"true\" root= \"https://repository.jboss.org/nexus/content/repositories/thirdparty-releases\" /> </chain> </resolvers> </ivysettings> IVY Dependency Entry <dependency org= \"com.qmetry\" name= \"qaf\" rev= \"latest.integration\" /> <dependency org= \"com.qmetry\" name= \"qaf-support\" rev= \"latest.integration\" />","title":"IVY"},{"location":"latest/download/#direct-download","text":"You can download QAF jar from here . You can download QAF Support jar from here .","title":"Direct Download"},{"location":"latest/download/#qaf-bdd-editors-for-eclipse","text":"eclipse plugins for QAF BDD and Gherkin editors providing syntax highlighting, syntax validation and content assist.","title":"QAF BDD Editors For Eclipse"},{"location":"latest/faq/","text":"This page answers most of the common queries that we receive about QMetry Automation Framework. Much of the questions we receive falls into certain categories; this page addresses the most common of these.","title":"QAF FAQ"},{"location":"latest/gherkin_client/","text":"About \u00b6 QAF Gherkin Scenario Factory allows to author test case in Gherkin format that Cucumber understands, so the Cucumber users can easily use QAF with Gherkin for test authoring. The predominant benefit is, you can run Gherkin as QAF scenario so it will have all QAF execution features like run configuration, reporting, parallel execution, step listener . Why QAF-Gherkin Scenario Factory \u00b6 Gherkin is well known behavior driven language that Cucumber understands. However with Cucumber JVM there are few challenges like: Lake of run configuration: you need to be dependent on other java unit testing framework JUnit or TestNG just for run configuration. Even if you use TestNG with Cucumber, you can't take full advantage of all features provided by TestNG! Using test data form outside the feature file (this is quite important when you need to run feature file for 2 different environment, let say staging and test, where test data defers) Running scenario in parallel Limited hooks (for example you can not have step hook) Integrations (ex: test-management tools) Cannot reuse common steps and hooks across multiple project by having steps and hooks in packaged jar and so on... There are different non-standard ways people use to overcome with one or other such challenges. Another open challenge for web and mobile test automation is, cucumber is unit test testing framework and you have to create your own implementation to support web, mobile web or mobile native support. In order to overcome such challenges, We provided Scenario Factory for Gherkin so Gherkin can be used as QAF test step client in addition to BDD, CSV, Excel, and XML client. Benefits of using QAF-Gherkin Scenario Factory \u00b6 While you are authoring test in Gherkin format you can provide step implementation using @QAFTestStep annotation or Cucumber step annotations ( @Given , @When , @Then , @And , @But ). It will support test data outside feature file (all QAF data provider support) using QAF data-provider meta-data with Examples you can separate out data from feature file to text, csv, xml, excel or json file or DB Another useful value addition is regardless of which step implementation (cucumber or QAF) you have, you can use step listeners . You can use either QAS BDD editor or standard Cucumber editor for authoring feature file. Scenario level parallelism support Standard TestNG Configuration file Utilize effectively all TestNG and QAF listeners including step listener Recognize steps/listeners from jar files It will enable migration from cucumber to QAF as with this feature you can continue using step implementation with cucumber step annotation. How to use it \u00b6 Author test cases in Gherkin format. Refer feature files . You can use QAF Gherkin editor or standard Cucumber editor for authoring feature file. Step Implementation You can use in-built QAF steps. In order to create new steps either use QAF Step implementation way refer example QAFTestStepImpl.java or cucumber way Refer example CucumberStepImpl.java of step implementation. You need to provide either one of the implementation (you can have mixed implementation as well) Use com.qmetry.qaf.automation.step.client.gherkin.GherkinScenarioFactory Factory class for run configuration XML <test name= \"Gherkin-QAF-Test\" > <parameter name= \"step.provider.pkg\" value= \"com.qmetry.qaf.automation.impl.step.qaf\" /> <parameter name= \"scenario.file.loc\" value= \"resources/features\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.gherkin.GherkinScenarioFactory\" /> </classes> </test> Provide step.provider.pkg to configure package from where your step implementation need to be loaded Provide scenario.file.loc to configure feature file(s) or directory You can use tags as groups in XML configuration file. For Existing cucumber implementation \u00b6 Existing project implemented using cucumber can also be run using QAF-Gherkin Scenario Factory. Use GherkinScenarioFactory to run feature files written in standard gherkin language Convert Cucumber hooks to appropriate TestNG listener, for example convert @before implementation to testng method listener's beforeMethod Place @QAFTestStepProvider annotation at class defining cucumber steps Use \u2018step.provider.pkg\u2019 instead of glue You can use tags as groups for run-configuration-filter","title":"QAF Gherkin Scenario Factory"},{"location":"latest/gherkin_client/#about","text":"QAF Gherkin Scenario Factory allows to author test case in Gherkin format that Cucumber understands, so the Cucumber users can easily use QAF with Gherkin for test authoring. The predominant benefit is, you can run Gherkin as QAF scenario so it will have all QAF execution features like run configuration, reporting, parallel execution, step listener .","title":"About"},{"location":"latest/gherkin_client/#why-qaf-gherkin-scenario-factory","text":"Gherkin is well known behavior driven language that Cucumber understands. However with Cucumber JVM there are few challenges like: Lake of run configuration: you need to be dependent on other java unit testing framework JUnit or TestNG just for run configuration. Even if you use TestNG with Cucumber, you can't take full advantage of all features provided by TestNG! Using test data form outside the feature file (this is quite important when you need to run feature file for 2 different environment, let say staging and test, where test data defers) Running scenario in parallel Limited hooks (for example you can not have step hook) Integrations (ex: test-management tools) Cannot reuse common steps and hooks across multiple project by having steps and hooks in packaged jar and so on... There are different non-standard ways people use to overcome with one or other such challenges. Another open challenge for web and mobile test automation is, cucumber is unit test testing framework and you have to create your own implementation to support web, mobile web or mobile native support. In order to overcome such challenges, We provided Scenario Factory for Gherkin so Gherkin can be used as QAF test step client in addition to BDD, CSV, Excel, and XML client.","title":"Why QAF-Gherkin Scenario Factory"},{"location":"latest/gherkin_client/#benefits-of-using-qaf-gherkin-scenario-factory","text":"While you are authoring test in Gherkin format you can provide step implementation using @QAFTestStep annotation or Cucumber step annotations ( @Given , @When , @Then , @And , @But ). It will support test data outside feature file (all QAF data provider support) using QAF data-provider meta-data with Examples you can separate out data from feature file to text, csv, xml, excel or json file or DB Another useful value addition is regardless of which step implementation (cucumber or QAF) you have, you can use step listeners . You can use either QAS BDD editor or standard Cucumber editor for authoring feature file. Scenario level parallelism support Standard TestNG Configuration file Utilize effectively all TestNG and QAF listeners including step listener Recognize steps/listeners from jar files It will enable migration from cucumber to QAF as with this feature you can continue using step implementation with cucumber step annotation.","title":"Benefits of using QAF-Gherkin Scenario Factory"},{"location":"latest/gherkin_client/#how-to-use-it","text":"Author test cases in Gherkin format. Refer feature files . You can use QAF Gherkin editor or standard Cucumber editor for authoring feature file. Step Implementation You can use in-built QAF steps. In order to create new steps either use QAF Step implementation way refer example QAFTestStepImpl.java or cucumber way Refer example CucumberStepImpl.java of step implementation. You need to provide either one of the implementation (you can have mixed implementation as well) Use com.qmetry.qaf.automation.step.client.gherkin.GherkinScenarioFactory Factory class for run configuration XML <test name= \"Gherkin-QAF-Test\" > <parameter name= \"step.provider.pkg\" value= \"com.qmetry.qaf.automation.impl.step.qaf\" /> <parameter name= \"scenario.file.loc\" value= \"resources/features\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.gherkin.GherkinScenarioFactory\" /> </classes> </test> Provide step.provider.pkg to configure package from where your step implementation need to be loaded Provide scenario.file.loc to configure feature file(s) or directory You can use tags as groups in XML configuration file.","title":"How to use it"},{"location":"latest/gherkin_client/#for-existing-cucumber-implementation","text":"Existing project implemented using cucumber can also be run using QAF-Gherkin Scenario Factory. Use GherkinScenarioFactory to run feature files written in standard gherkin language Convert Cucumber hooks to appropriate TestNG listener, for example convert @before implementation to testng method listener's beforeMethod Place @QAFTestStepProvider annotation at class defining cucumber steps Use \u2018step.provider.pkg\u2019 instead of glue You can use tags as groups for run-configuration-filter","title":"For Existing cucumber implementation"},{"location":"latest/integration_with_other_tools/","text":"Using QAF you can integrate any Test Management Tool to update Test-Result after test execution completed. Create a class which implements TestCaseResultUpdator interface. Specify qualified class name in result.updator property. Overide methods to provide test management tool specific implementation/method calls TestCaseResultUpdator interface defines following methods. boolean updateResult ( Map < String , ? extends Object > params , TestCaseRunResult result , String details ); String getToolName (); Example: package com.qmetry.qaf.automation.integration.example ... public class ExampleResultUpdator implements TestCaseResultUpdator { @Override public String getToolName () { return \"Example\" ; } /** * This method will be called by result updator after completion of each testcase/scenario. * @param params * tescase/scenario meta-data including method parameters if any * @param result * test case result * @param details * run details * @return */ @Override public boolean updateResult ( Map < String , ? extends Object > params , TestCaseRunResult result , String details ) { // Provide test management tool specific implemeneation/method calls return true ; } } Registering class for Result updator To register result updator class set property result.updator Property: result.updator = com.qmetry.qaf.automation.integration.example.ExampleResultUpdator","title":"Integration"},{"location":"latest/introduction/","text":"Introduction \u00b6","title":"Introduction"},{"location":"latest/introduction/#introduction","text":"","title":"Introduction"},{"location":"latest/keyword_driven_define_test_suite/","text":"Keyword driven test suite consist of one or more Scenarios. Each scenario represents one test case. FORMATION OF SUITE \u00b6 SCENARIO|<name of the scenario>|{\"description\":\"<meaningful description>\"} <<steps>> END|| SCENARIO|<name of the scenario>|{\"description\":\"<meaningful description>\"} <<steps>> END|| {% include tip.html content=\"To start with you can use available pre-defined low level steps and author scenario.\" %}","title":"Keyword Driven Define Test Suite"},{"location":"latest/keyword_driven_define_test_suite/#formation-of-suite","text":"SCENARIO|<name of the scenario>|{\"description\":\"<meaningful description>\"} <<steps>> END|| SCENARIO|<name of the scenario>|{\"description\":\"<meaningful description>\"} <<steps>> END|| {% include tip.html content=\"To start with you can use available pre-defined low level steps and author scenario.\" %}","title":"FORMATION OF SUITE"},{"location":"latest/keyword_driven_describe_test_step/","text":"Test step can be defined in .java or .kwl files. It consists of stepname, description and step metadata. Define Step In KWL \u00b6 STEP-DEF|<stepName>|{\"description\":\"<meaningfull step description>\",<meta-key>:<meta-value>} <first stepName>|<step input parameters>|<step out parameters> ... <nth stepName>|<step input parameters>|<step out parameters> END|| To define step, which contains parameters: Example: Login Step can be defined in KWL by Example: KWD Step STEP-DEF|login|{\"description\":\"user logins with {0} and {1}\",<meta-key>:<meta-value>} <first stepName>|<step input parameters>|<step out parameters> ... <nth stepName>|<step input parameters>|<step out parameters> END|| This step can be consumed from *.kwd file as Consume KWD Step \u00b6 login|[\"username\",\"password\"]| Using/Passing Argument of Step Test Step Declaration In java Java Step Def \u00b6 @QAFTestStep ( description = \"user logins with {username} and {password}\" ) public void login ( String username , String password ) { // step implementation } Test Step Declaration In KWL KWD Step Def \u00b6 STEP-DEF|login|{\"description\":\"user logins with {username} and {password}\"} comment|[\"${args[0]}\"]| comment|[\"${args[1]}\"]| comment|[\"${username}\"]| comment|[\"${password}\"]| END|| Can be consumed as Consume Step in KWD \u00b6 login|[\"username\",\"password\"]|","title":"Keyword driven describe test step"},{"location":"latest/keyword_driven_describe_test_step/#define-step-in-kwl","text":"STEP-DEF|<stepName>|{\"description\":\"<meaningfull step description>\",<meta-key>:<meta-value>} <first stepName>|<step input parameters>|<step out parameters> ... <nth stepName>|<step input parameters>|<step out parameters> END|| To define step, which contains parameters: Example: Login Step can be defined in KWL by Example: KWD Step STEP-DEF|login|{\"description\":\"user logins with {0} and {1}\",<meta-key>:<meta-value>} <first stepName>|<step input parameters>|<step out parameters> ... <nth stepName>|<step input parameters>|<step out parameters> END|| This step can be consumed from *.kwd file as","title":"Define Step In KWL"},{"location":"latest/keyword_driven_describe_test_step/#consume-kwd-step","text":"login|[\"username\",\"password\"]| Using/Passing Argument of Step Test Step Declaration In java","title":"Consume KWD Step"},{"location":"latest/keyword_driven_describe_test_step/#java-step-def","text":"@QAFTestStep ( description = \"user logins with {username} and {password}\" ) public void login ( String username , String password ) { // step implementation } Test Step Declaration In KWL","title":"Java Step Def"},{"location":"latest/keyword_driven_describe_test_step/#kwd-step-def","text":"STEP-DEF|login|{\"description\":\"user logins with {username} and {password}\"} comment|[\"${args[0]}\"]| comment|[\"${args[1]}\"]| comment|[\"${username}\"]| comment|[\"${password}\"]| END|| Can be consumed as","title":"KWD Step Def"},{"location":"latest/keyword_driven_describe_test_step/#consume-step-in-kwd","text":"login|[\"username\",\"password\"]|","title":"Consume Step in KWD"},{"location":"latest/keyword_driven_scenario/","text":"Scenario \u00b6 Scenario consist of meta-data and sequence of steps to represents a single test case. Each step can be started with stepName. Refer list of available keywords. Structure \u00b6 SCENARIO|<Name of the Scenario>|{\"description\":<description>,<meta-key>:<meta-value>} <first step> | [<first argument>,<second argument>] | <output-parameter> (optional) \u2026 <nth step> | [<arguments>] | <output-parameter> (optional) END|| Want to iterate with set of test data from file? You got it with data-driven Scenario. Meta-data \u00b6 There are predefined meta-key available to use which are list in table below. You can define your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. The meta-data are collected as part of the scenario parsing and made available for different uses, e.g. Scenario selection, setting priority Pre-Defined Meta-Keys Type Comments description Text Text to describe scenario in detail dataFile Data - file path Xls or xlsx file name for data driven scenario sheetName Text Xls or xlsx file sheet name for the data driven senario key Text key which is node of xml tree SQL query Text sql query is required to get data from database. enabled True / false Switch to consider scenario executable groups Array of String List of groups of test case, i.e. smoke, regression, P1 etc. priority Number Defines the order in which scenario should be executed. Higher the priority, earlier it will execute dependsOnGroups Array of String Scenarios of Groups, to be executed before dependsOnMethods Array of String Scenarios to be executed before","title":"Keyword driven scenario"},{"location":"latest/keyword_driven_scenario/#scenario","text":"Scenario consist of meta-data and sequence of steps to represents a single test case. Each step can be started with stepName. Refer list of available keywords.","title":"Scenario"},{"location":"latest/keyword_driven_scenario/#structure","text":"SCENARIO|<Name of the Scenario>|{\"description\":<description>,<meta-key>:<meta-value>} <first step> | [<first argument>,<second argument>] | <output-parameter> (optional) \u2026 <nth step> | [<arguments>] | <output-parameter> (optional) END|| Want to iterate with set of test data from file? You got it with data-driven Scenario.","title":"Structure"},{"location":"latest/keyword_driven_scenario/#meta-data","text":"There are predefined meta-key available to use which are list in table below. You can define your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. The meta-data are collected as part of the scenario parsing and made available for different uses, e.g. Scenario selection, setting priority Pre-Defined Meta-Keys Type Comments description Text Text to describe scenario in detail dataFile Data - file path Xls or xlsx file name for data driven scenario sheetName Text Xls or xlsx file sheet name for the data driven senario key Text key which is node of xml tree SQL query Text sql query is required to get data from database. enabled True / false Switch to consider scenario executable groups Array of String List of groups of test case, i.e. smoke, regression, P1 etc. priority Number Defines the order in which scenario should be executed. Higher the priority, earlier it will execute dependsOnGroups Array of String Scenarios of Groups, to be executed before dependsOnMethods Array of String Scenarios to be executed before","title":"Meta-data"},{"location":"latest/license/","text":"MIT License Copyright \u00a9 2019 Infostretch Corporation Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"latest/locating_elements/","text":"Locating Elements \u00b6 In order to locate element QAF provides selenium-1 style syntax. This approach has two benefits: * First of all, you don't need to hardcode or fix strategy for locator in code (for example By.xpath(myxpath)) with qaf locator strategy you can easily switch from one locator to another locator either strategy or locator value. * Secondly, you can separate out locator outside your code by using locator repository, where you can maintain locator without code change. Element locator syntax \u00b6 <locator strategy>=<locator value> Where, <locator strategy> is any of the strategy supported by underlying web-driver and <locator value> is locator in that strategy. Webdriver supported strategies : id , name , xpath , css , link , partialLink , className , tagName Examples: \u00b6 css=<css locator for element> xpath=<xpath locator for element> In order to use other custom locator strategy supported by the underlying driver(s), you need to use strategy name as locator strategy. For example, Appium provides MobileBy.AccessibilityId , MobileBy.AndroidUIAutomator , MobileBy.IosUIAutomation . The strategy name used by appium for these additional selectors is accessibility id , -android uiautomator and -ios uiautomation respectively refer . Examples: \u00b6 accessibility id=<accessibilityId for element> -android uiautomator=<uiautomatorText for element> -ios uiautomation=<iOSAutomationText for element> -ios predicate string=<predicate string for element> -windows uiautomation=<uiautomationText for element> Self-descriptive locator \u00b6 Self-descriptive locator holds locator for element along with description of the element. Description will be used by the framework in assertion/verification messages for the element. You also can take advantage of self-descriptive locator to provide additional custom meta-data with element locator. Self-descriptive locator syntax \u00b6 Self-descriptive locator expects JSON map of locator-mata-key and locator-metadata-value pair: Syntax: { 'locator' : '<locator strategy>=<locator value>' , '<locator-mata-key1>' = '<locator-mata-value1>' , '<locator-mata-keyN>' = '<locator-mata-valueN>' } Following are reservered locator-mata-keys * locator: actual locator of element ( mandatory ) * desc: description of the locator (optinal) * cacheable: flag to indicate is element is cashable or not (optional) * component-class: to specify object to be created of. Possible value fully qualified class name that extends QAFWebComponent Following locator-mata-keys is used by ElementMetaDataListener * type: for send-keys to specify element type, possible values: * password/encrypted - required to decode before send keys * select - specify this is select (basic support only) with options and choose option * Examples: * {'type': 'password'} * {'type': 'select'} * scroll: to specify scroll behavior, possible values: * Always/true - always scroll before commands required scroll * OnFail - retry with scroll on failure for commands required scroll * scroll-options: to specify scroll options, A value that indicates the type of the align Examples: * {'scroll-options': 'true'} * {'scroll-options': 'false'} * {'scroll-options': '{block: \\'center\\'}'} Refer https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView * sendkeys-options: to specify one or more send-keys options, possible values: * click: to specify click before send-keys * clear: to specify clear before send-keys * Examples: * {'sendkeys-options': 'clear'} * {'sendkeys-options': 'click'} * {'sendkeys-options': 'click clear'} Examples: {'locator':'<locator strategy>=<locator value>','desc':'Description of element'} Where is any of the strategy supported by underlying web-driver and is locator in that strategy. { ' locator ':' css = . header ';' desc ':' Header of Page ' } { \"locator\" : \"xpath=//*[@name='Result']\" , \"desc\" : \"Input box\" } Custom meta-data example: {\"locator\":\"xpath=//*[@name='Result']\",\"desc\":\"Input box\",\"context\":\"WEBVIEW\"} In above locator \"context\" is custom meta-data which can be accessed in code by element.getMetadata(). Alternate Locator \u00b6 You can provide more than one locator to locate the webelement. In such case when element will not found with first locator then it will try to find with second and so forth. Normal locator: ['css=#qa','name=eleName'] ['css=#qa','name=eleName','xpath=.//[@id=\\'issue-tabs\\']'] Self Descriptive locator: {'locator' : ['css=#qa','name=eleName']; 'desc' : 'dummy element'} {'locator' : ['css=#qa','name=eleName','xpath=.//*[@id=\\'issue-tabs\\']']; 'desc' : ' dummy element '} jQuery Locator \u00b6 Borrowing from CSS 1\u20133, and then adding its own, jQuery offers a powerful set of selectors for matching a set of elements. QAF have now provided one more locator strategy named \"jQuery\", by using it you can locate element by jQuey css selectors. Usage: Normal locator: jquery = <jqueryloc> Jquery = .classname Jquery = div:contains('some text') Self Descriptive locator: {'locator' : 'jquery=<jqueryloc>', 'desc' : 'dummy element'}","title":"Locating Elements"},{"location":"latest/locating_elements/#locating-elements","text":"In order to locate element QAF provides selenium-1 style syntax. This approach has two benefits: * First of all, you don't need to hardcode or fix strategy for locator in code (for example By.xpath(myxpath)) with qaf locator strategy you can easily switch from one locator to another locator either strategy or locator value. * Secondly, you can separate out locator outside your code by using locator repository, where you can maintain locator without code change.","title":"Locating Elements"},{"location":"latest/locating_elements/#element-locator-syntax","text":"<locator strategy>=<locator value> Where, <locator strategy> is any of the strategy supported by underlying web-driver and <locator value> is locator in that strategy. Webdriver supported strategies : id , name , xpath , css , link , partialLink , className , tagName","title":"Element locator syntax"},{"location":"latest/locating_elements/#examples","text":"css=<css locator for element> xpath=<xpath locator for element> In order to use other custom locator strategy supported by the underlying driver(s), you need to use strategy name as locator strategy. For example, Appium provides MobileBy.AccessibilityId , MobileBy.AndroidUIAutomator , MobileBy.IosUIAutomation . The strategy name used by appium for these additional selectors is accessibility id , -android uiautomator and -ios uiautomation respectively refer .","title":"Examples:"},{"location":"latest/locating_elements/#examples_1","text":"accessibility id=<accessibilityId for element> -android uiautomator=<uiautomatorText for element> -ios uiautomation=<iOSAutomationText for element> -ios predicate string=<predicate string for element> -windows uiautomation=<uiautomationText for element>","title":"Examples:"},{"location":"latest/locating_elements/#self-descriptive-locator","text":"Self-descriptive locator holds locator for element along with description of the element. Description will be used by the framework in assertion/verification messages for the element. You also can take advantage of self-descriptive locator to provide additional custom meta-data with element locator.","title":"Self-descriptive locator"},{"location":"latest/locating_elements/#self-descriptive-locator-syntax","text":"Self-descriptive locator expects JSON map of locator-mata-key and locator-metadata-value pair: Syntax: { 'locator' : '<locator strategy>=<locator value>' , '<locator-mata-key1>' = '<locator-mata-value1>' , '<locator-mata-keyN>' = '<locator-mata-valueN>' } Following are reservered locator-mata-keys * locator: actual locator of element ( mandatory ) * desc: description of the locator (optinal) * cacheable: flag to indicate is element is cashable or not (optional) * component-class: to specify object to be created of. Possible value fully qualified class name that extends QAFWebComponent Following locator-mata-keys is used by ElementMetaDataListener * type: for send-keys to specify element type, possible values: * password/encrypted - required to decode before send keys * select - specify this is select (basic support only) with options and choose option * Examples: * {'type': 'password'} * {'type': 'select'} * scroll: to specify scroll behavior, possible values: * Always/true - always scroll before commands required scroll * OnFail - retry with scroll on failure for commands required scroll * scroll-options: to specify scroll options, A value that indicates the type of the align Examples: * {'scroll-options': 'true'} * {'scroll-options': 'false'} * {'scroll-options': '{block: \\'center\\'}'} Refer https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView * sendkeys-options: to specify one or more send-keys options, possible values: * click: to specify click before send-keys * clear: to specify clear before send-keys * Examples: * {'sendkeys-options': 'clear'} * {'sendkeys-options': 'click'} * {'sendkeys-options': 'click clear'} Examples: {'locator':'<locator strategy>=<locator value>','desc':'Description of element'} Where is any of the strategy supported by underlying web-driver and is locator in that strategy. { ' locator ':' css = . header ';' desc ':' Header of Page ' } { \"locator\" : \"xpath=//*[@name='Result']\" , \"desc\" : \"Input box\" } Custom meta-data example: {\"locator\":\"xpath=//*[@name='Result']\",\"desc\":\"Input box\",\"context\":\"WEBVIEW\"} In above locator \"context\" is custom meta-data which can be accessed in code by element.getMetadata().","title":"Self-descriptive locator syntax"},{"location":"latest/locating_elements/#alternate-locator","text":"You can provide more than one locator to locate the webelement. In such case when element will not found with first locator then it will try to find with second and so forth. Normal locator: ['css=#qa','name=eleName'] ['css=#qa','name=eleName','xpath=.//[@id=\\'issue-tabs\\']'] Self Descriptive locator: {'locator' : ['css=#qa','name=eleName']; 'desc' : 'dummy element'} {'locator' : ['css=#qa','name=eleName','xpath=.//*[@id=\\'issue-tabs\\']']; 'desc' : ' dummy element '}","title":"Alternate Locator"},{"location":"latest/locating_elements/#jquery-locator","text":"Borrowing from CSS 1\u20133, and then adding its own, jQuery offers a powerful set of selectors for matching a set of elements. QAF have now provided one more locator strategy named \"jQuery\", by using it you can locate element by jQuey css selectors. Usage: Normal locator: jquery = <jqueryloc> Jquery = .classname Jquery = div:contains('some text') Self Descriptive locator: {'locator' : 'jquery=<jqueryloc>', 'desc' : 'dummy element'}","title":"jQuery Locator"},{"location":"latest/locator_repository/","text":"QMetry Automation Framework provides concept called \u201cLocator Repository\u201d which can be used to abstract your element locator outside the code. Moreover, you can have separate locator repositories per environment/platform and you can configure at runtime to load environment specific locator repository. Creating Locator repository \u00b6 You can create Locator repository with property file having extension \u2018. property\u2019 or \u2018.loc\u2019. In repository provide key-value pair of locator-key and locator-value . While developing test assets instead of providing locator you can use the locator-key . To provide locator-value refer how to locating element . Example \u00b6 loginscreen.loc login.username.txt = name=uname login.password.txt = name=upwd login.pageheader.lbl = css=.header ... #self-descriptive locator example login.username.txt = {'locator':'name=uname','desc':'User name texbox on Login Page'} login.password.txt = {'locator':'name=upwd','desc':'Password texbox on Login Page'} login.pageheader.lbl = {'locator':'css=.header','desc':'Header of Login Page'} ... Usage \u00b6 you can refer locator-key in your java code for creating a web-element for example: Java Code: QAFWebElement txtUserName = new QAFExtendedWebElement ( \"login.username.txt\" ); Page Class: @FindBy ( locator = \"login.username.txt\" ) private QAFWebElement txtUserName ; BDD While using in-built step you can provide locator-key to refer any locator. assert 'login.username.txt' is present sendKeys 'myusername' into 'login.username.txt'","title":"Locator Repository"},{"location":"latest/locator_repository/#creating-locator-repository","text":"You can create Locator repository with property file having extension \u2018. property\u2019 or \u2018.loc\u2019. In repository provide key-value pair of locator-key and locator-value . While developing test assets instead of providing locator you can use the locator-key . To provide locator-value refer how to locating element .","title":"Creating Locator repository"},{"location":"latest/locator_repository/#example","text":"loginscreen.loc login.username.txt = name=uname login.password.txt = name=upwd login.pageheader.lbl = css=.header ... #self-descriptive locator example login.username.txt = {'locator':'name=uname','desc':'User name texbox on Login Page'} login.password.txt = {'locator':'name=upwd','desc':'Password texbox on Login Page'} login.pageheader.lbl = {'locator':'css=.header','desc':'Header of Login Page'} ...","title":"Example"},{"location":"latest/locator_repository/#usage","text":"you can refer locator-key in your java code for creating a web-element for example: Java Code: QAFWebElement txtUserName = new QAFExtendedWebElement ( \"login.username.txt\" ); Page Class: @FindBy ( locator = \"login.username.txt\" ) private QAFWebElement txtUserName ; BDD While using in-built step you can provide locator-key to refer any locator. assert 'login.username.txt' is present sendKeys 'myusername' into 'login.username.txt'","title":"Usage"},{"location":"latest/maketest_data_driven/","text":"QAF enhances TestNG data provider by providing intercepter and in built data providers that supports different external data sources. To make any test data driven you can use @QAFDataProvider or @Metadata annotation on java test method, where test get executed for each data set provided in external data file. For BDD and KWD you can specify it as scenario meta-data. In-built data-providers \u00b6 CSV XML JSON Excel Database Meta data \u00b6 Following are meta-data for test case used by QAF to specify data provider: Meta-data key Type Comments dataFile Data-file path csv, xml, json, xls file for data driven scenario sheetName Text Used for Excel file to provide sheet name for the data driven scenario key Text Used with xml data, to specify node of xml tree or data table key for excel data table SQL query Text To use database, sql query is required to get data from database. dataProviderClass Fully qualified class name required if you want to use custom data provider (since 2.1.12) dataProvider name of the data provider required when you want to use custom data provider (since 2.1.12) filter logical expression Filter to apply on data set returned by the data-provider that returns List of Maps. (since 2.1.14) indices List list of indices (base 0) to filter (since 2.1.14) from number start index (base 1) for range filter (since 2.1.14) to number end index (base 1) for range filter (since 2.1.14) parameters in meta-value \u00b6 You can use any property in value of meta-data for data provider. It will get resolved using configuration manager. In addition to that following special parameters will be available. * class - name of the java class * method - name of the java method * meta-key - any meta-key from test case meta-data Test data Filter \u00b6 You can filter specific test data by providing logical expression or list of indices or range. Data provider Intercepter \u00b6 Implementation of QAFDataProviderIntercepter interface can be registered as QAFListener to intercept test data provided by Data provider in data driven test case. you can use it to process or apply filter. Configure/Override DataProvider \u00b6 Moreover, you can configure/override DataProvider Meta-data. To configure meta-data globally for all data driven test you can set property \"global.testdata\" . Below are examples: global.testdata.<meta-key> = <meta-value> # global.testdata.dataFile = resources/data/${class}/${method}.csv #setting data file and sheet name to use excel file global.testdata.dataFile = resources/data/${class}.xls global.testdata.sheetName = ${method} # multiple meta-data as map global.testdata = {<meta-key>:<meta-value>} global.testdata = {'dataFile':'resources/data/${class}/${method}.csv'} global.testdata = {'dataFile': 'resources/data/testdata.xls', 'sheetName':'${class}','labelName':'${method}'} global.testdata = dataFile = \"resources/data/${class}.xls\"; sheetName=\"${ method }\" global.testdata = key=\"${ method }.data\" In above example you can notice ${class} and ${method} parameters are used which you can use as per the requirement. To set data provider parameters for individual test method you can provide property as below: <tc_name>.testdata={<property>:<value>} login.testdata={'dataFile': 'resources/data/testdata.xls','sheetName':'login'} login.testdata= {'sqlQuery':'select col1, col2,col3 from tbl'} Priority for meta-data to take effect is: Meta-data set using test method specific test data property, i.e. \" .testdata\" Meta-data set using global test data property, i.e. \"gloabal.testdata\" Meta-data provided with test case using annotation or as scenario meta-data Compete Example \u00b6 Consider following test data specified in CSV file. recId username password isvalid expected_msg Wrong password chirag12 test123 false Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest false Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 false Invalid Username Or Password. Please Try Again. recId,username,password,isvalid,expected_msg Wrong Password,admin,admin,false,Invalid Username Or Password. Please Try Again. Wrong Username and Password,Admin,Admin,false,Invalid Username Or Password. Please Try Again. Wrong Username,admin,admin123,false,Invalid Username Or Password. Please Try Again. java \u00b6 @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void login ( Map < String , Object > data ) { LoginPage loginPage = new LoginPage (); loginPage . launchPage ( null ); boolean status = loginUtil . doLogin ( data . get ( \"username\" ), data . get ( \"password\" )) Validator . verifyThat ( status , Matchers . equalTo ( data . get ( \"isvalid\" )); loginPage . getErrorMessage (). verifyText ( data . get ( \"expected_msg\" )); } BDD \u00b6 Scenario: example Meta-data: {\"dataFile\":\"resources/data/logintestdata.csv\"} Given use is on login page When login using '${username}' and '${password}' And store into 'status' Then verify that '${status}' is '${isvalid}' And verify error message '${expected_msg}' Method arguments (Java Only) \u00b6 Map argument @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void login ( Map < String , Object > data ) { //implementation goes here } one or more complex arguments @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void login ( LoginBean user ) { //implementation goes here } @QAFDataProvider ( dataFile = \"resources/data/mytestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void myTest ( LoginBean user , Item item ) { //implementation goes here }","title":"Make Tests Data driven"},{"location":"latest/maketest_data_driven/#in-built-data-providers","text":"CSV XML JSON Excel Database","title":"In-built data-providers"},{"location":"latest/maketest_data_driven/#meta-data","text":"Following are meta-data for test case used by QAF to specify data provider: Meta-data key Type Comments dataFile Data-file path csv, xml, json, xls file for data driven scenario sheetName Text Used for Excel file to provide sheet name for the data driven scenario key Text Used with xml data, to specify node of xml tree or data table key for excel data table SQL query Text To use database, sql query is required to get data from database. dataProviderClass Fully qualified class name required if you want to use custom data provider (since 2.1.12) dataProvider name of the data provider required when you want to use custom data provider (since 2.1.12) filter logical expression Filter to apply on data set returned by the data-provider that returns List of Maps. (since 2.1.14) indices List list of indices (base 0) to filter (since 2.1.14) from number start index (base 1) for range filter (since 2.1.14) to number end index (base 1) for range filter (since 2.1.14)","title":"Meta data"},{"location":"latest/maketest_data_driven/#parameters-in-meta-value","text":"You can use any property in value of meta-data for data provider. It will get resolved using configuration manager. In addition to that following special parameters will be available. * class - name of the java class * method - name of the java method * meta-key - any meta-key from test case meta-data","title":"parameters in meta-value"},{"location":"latest/maketest_data_driven/#test-data-filter","text":"You can filter specific test data by providing logical expression or list of indices or range.","title":"Test data Filter"},{"location":"latest/maketest_data_driven/#data-provider-intercepter","text":"Implementation of QAFDataProviderIntercepter interface can be registered as QAFListener to intercept test data provided by Data provider in data driven test case. you can use it to process or apply filter.","title":"Data provider Intercepter"},{"location":"latest/maketest_data_driven/#configureoverride-dataprovider","text":"Moreover, you can configure/override DataProvider Meta-data. To configure meta-data globally for all data driven test you can set property \"global.testdata\" . Below are examples: global.testdata.<meta-key> = <meta-value> # global.testdata.dataFile = resources/data/${class}/${method}.csv #setting data file and sheet name to use excel file global.testdata.dataFile = resources/data/${class}.xls global.testdata.sheetName = ${method} # multiple meta-data as map global.testdata = {<meta-key>:<meta-value>} global.testdata = {'dataFile':'resources/data/${class}/${method}.csv'} global.testdata = {'dataFile': 'resources/data/testdata.xls', 'sheetName':'${class}','labelName':'${method}'} global.testdata = dataFile = \"resources/data/${class}.xls\"; sheetName=\"${ method }\" global.testdata = key=\"${ method }.data\" In above example you can notice ${class} and ${method} parameters are used which you can use as per the requirement. To set data provider parameters for individual test method you can provide property as below: <tc_name>.testdata={<property>:<value>} login.testdata={'dataFile': 'resources/data/testdata.xls','sheetName':'login'} login.testdata= {'sqlQuery':'select col1, col2,col3 from tbl'} Priority for meta-data to take effect is: Meta-data set using test method specific test data property, i.e. \" .testdata\" Meta-data set using global test data property, i.e. \"gloabal.testdata\" Meta-data provided with test case using annotation or as scenario meta-data","title":"Configure/Override DataProvider"},{"location":"latest/maketest_data_driven/#compete-example","text":"Consider following test data specified in CSV file. recId username password isvalid expected_msg Wrong password chirag12 test123 false Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest false Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 false Invalid Username Or Password. Please Try Again. recId,username,password,isvalid,expected_msg Wrong Password,admin,admin,false,Invalid Username Or Password. Please Try Again. Wrong Username and Password,Admin,Admin,false,Invalid Username Or Password. Please Try Again. Wrong Username,admin,admin123,false,Invalid Username Or Password. Please Try Again.","title":"Compete Example"},{"location":"latest/maketest_data_driven/#java","text":"@QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void login ( Map < String , Object > data ) { LoginPage loginPage = new LoginPage (); loginPage . launchPage ( null ); boolean status = loginUtil . doLogin ( data . get ( \"username\" ), data . get ( \"password\" )) Validator . verifyThat ( status , Matchers . equalTo ( data . get ( \"isvalid\" )); loginPage . getErrorMessage (). verifyText ( data . get ( \"expected_msg\" )); }","title":"java"},{"location":"latest/maketest_data_driven/#bdd","text":"Scenario: example Meta-data: {\"dataFile\":\"resources/data/logintestdata.csv\"} Given use is on login page When login using '${username}' and '${password}' And store into 'status' Then verify that '${status}' is '${isvalid}' And verify error message '${expected_msg}'","title":"BDD"},{"location":"latest/maketest_data_driven/#method-arguments-java-only","text":"Map argument @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void login ( Map < String , Object > data ) { //implementation goes here } one or more complex arguments @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void login ( LoginBean user ) { //implementation goes here } @QAFDataProvider ( dataFile = \"resources/data/mytestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void myTest ( LoginBean user , Item item ) { //implementation goes here }","title":"Method arguments (Java Only)"},{"location":"latest/managing_locales/","text":"While Automating AUT that supports to different languages, regional differences, we need to take care of different translation/text on UI for different locales. Assume that the AUT supports Hindi, English and French locales then morning greeting may differ according to the locale selected by user. For instance, Hindi: \"\u0936\u0941\u092d \u092a\u094d\u0930\u092d\u093e\u0924\", English: \"Good Morning\" and French: \"Bonjour\". During development you need to define a key for translation data and use that key in code. Specify that key value for different locale file. In the example below, we had considered that translation data files for Hindi local will have extension \"hi\", for English: \"en\" and for French: \"fr\". So at the time of execution you need to specify locale as \"hi\" for Hindi, \"en\" for English and \"fr\" for French. @Test public void test1 () { ... page . getGreetText (). verifyText ( props . getString ( \"morning.greeting.text\" )); ... } You need to create different locale files under resources as below: Translation.hi #translation messages for hindi locale morning.greeting.text = \"\u0936\u0941\u092d \u092a\u094d\u0930\u092d\u093e\u0924\" Translation.en #translation messages for English locale morning.greeting.text = Good Morning Translation.fr #translation messages for French locale morning.greeting.text = Bonjour At the time of execution you need to specify local to load and default local for the execution by setting following two properties. Here locale name must match to the file extension you have given for specific locale. application.properties #you can load one or more locale at a time load.locales = hi;fr default.locale = hi As you can load more than one local for execution, if you want to access other loaded local which is not default (French in this example): props . subset ( \"fr\" ). getString ( \"morning.greeting.text \" );","title":"Managing Locales"},{"location":"latest/managing_resources_for_different_env/","text":"Managing Multiple Environments \u00b6 Assume that AUT has multiple environments to target. Assume that there are few locator, translation data, and property difference for each environment and others are common. Consider the dir structure below, where we have common dir as well as environment specific dir. While providing property/locator/translation data, we will put common data under appropriate file in common dir and provide environment specific values in files under environment specific dir. resources application.properties common common.properties locators.properties translation.hi translation.en translation.fr env1 env.properties locators.properties translation.hi translation.en translation.fr env2 env.properties locators.properties translation.hi translation.en translation.fr Now while configuring run, you can provide from where to load resources using property env.resources . env.resources = resources/common;resources/env1 Managing Driver Specific Resource \u00b6 With release 2.1.12 feature provided to load driver specific resource before driver initialization. It is quite helpful when you are switching between drivers within the test. You can specify file or directory for driver specific resources to load using key <drivername>.resources . For instance if you specified driver.name=androidDriver (or androidRemoteDriver) and android resources are under \"resources/android\" then you can specify resources for android driver by using android.resources as below: android.resources=resources/android","title":"Managing resources for Different Environments"},{"location":"latest/managing_resources_for_different_env/#managing-multiple-environments","text":"Assume that AUT has multiple environments to target. Assume that there are few locator, translation data, and property difference for each environment and others are common. Consider the dir structure below, where we have common dir as well as environment specific dir. While providing property/locator/translation data, we will put common data under appropriate file in common dir and provide environment specific values in files under environment specific dir. resources application.properties common common.properties locators.properties translation.hi translation.en translation.fr env1 env.properties locators.properties translation.hi translation.en translation.fr env2 env.properties locators.properties translation.hi translation.en translation.fr Now while configuring run, you can provide from where to load resources using property env.resources . env.resources = resources/common;resources/env1","title":"Managing Multiple Environments"},{"location":"latest/managing_resources_for_different_env/#managing-driver-specific-resource","text":"With release 2.1.12 feature provided to load driver specific resource before driver initialization. It is quite helpful when you are switching between drivers within the test. You can specify file or directory for driver specific resources to load using key <drivername>.resources . For instance if you specified driver.name=androidDriver (or androidRemoteDriver) and android resources are under \"resources/android\" then you can specify resources for android driver by using android.resources as below: android.resources=resources/android","title":"Managing Driver Specific Resource"},{"location":"latest/older_versions_docs/","text":"Please contact support(at)infostretch.com / support(at)qmetry.com for older version's documentation.","title":"Older Version Documentation"},{"location":"latest/page_design_concepts/","text":"Page Hierarchy \u00b6 One page becomes parent/launcher of another page(s) results in creating navigation hierarchy. Single navigation route \u00b6 This is the normal page hierarchy were a page can be launched from only one page. Consider the example where page P is home page, P11 and P12 can be navigated from P and P111 and P121 can be navigated trough P11 and P12 respectively. Considering page hierarchy for P->P11->P111, P will become parent page for P11 and P11 will become parent page for P111. Below is the selenium2 API code sample for creating page hierarchy for above navigation. As P is home page or have no parent page, while creating page P we will just place a test page interface. public class P extends WebDriverBaseTestPage < WebDriverTestPage > { @FindBy ( locator = P1l_LINK_LOC ) private QAFWebElement p1Link ; @Override protected void openPage ( PageLocator arg0 , Object ... arg1 ) { driver . get ( \"/\" ); } public QAFWebElement getP1Link () { return p1Link ; } } While creating page P1 you need to specify \"P\" as parent page by providing \"P\" as base class parameter. public class P1 extends WebDriverBaseTestPage < P > { @FindBy ( locator = \"P1l_LINK_LOC\" ) private QAFWebElement p11Link ; @Override public boolean isPageActive ( PageLocator loc , Object ... args ) { // TODO Auto-generated method stub return false ; } @Override protected void openPage ( PageLocator arg0 , Object ... arg1 ) { parent . getP1Link (). click (); } } While creating page P2 you need to specify \"P1\" as parent page by providing \"P1\" as base class parameter. public class P11 extends WebDriverBaseTestPage < P1 > { @Override public boolean isPageActive ( PageLocator loc , Object ... args ) { // TODO Auto-generated method stub return false ; } @Override protected void openPage ( PageLocator arg0 , Object ... arg1 ) { parent . getP11Link (). click (); } } Multiple navigation routes \u00b6 The framework has multiple route support. In case of multiple routes, to navigate to specific page you need to define launcher interface that extends TestPage and provide that interface as parent to the page with multiple route. Implement launcher interface in each possible parent class. At the time of defining test provide parent as argument while creating page object. Selenium1 API Implementation Create child interface of WebDriverBaseTestPage that defines one method to open page under question. interface SamplePageLauncher extends WebDriverBaseTestPage { public void launchSamplePage ( PageLocator loc , Object ... args ); } Implement that interface in all possible parent pages. class Route1Page extends SeleniumBaseTestPage < Route1ParentPage > implements SamplePageLauncher { ... @Override public void launchSamplePage ( PageLocator loc , Object ... args ) { selenium . click ( \"locator\" ); } ... } Another parent: class Route2Page extends SeleniumBaseTestPage < Route2ParentPage > implements SamplePageLauncher { ... @Override public void launchSamplePage ( PageLocator loc , Object ... args ) { // steps to open sample page from this page. For example: selenium . click ( \"locator\" ); } ... } Set Interface created in as parent page parameter of the page class and call interface method in open page. public class SamplePage extends SeleniumBaseTestPage < SamplePageLauncher > { public SamplePage ( SamplePageLauncher parent ) { super ( parent ); } public SamplePage () { // set default route this ( new Route1Page ()); } @Override protected void openPage ( PageLocator loc , Object ... args ) { parent . launchSamplePage ( loc , args ); } ... } Selenium2 API implementation Create child interface of WebDriverTestPage that defines one method to open multi route page under question. interface SamplePageLauncher extends WebDriverTestPage { public void launchSamplePage ( PageLocator loc , Object ... args ); } Implement that interface in all possible parent pages. class Route1Page extends WebDriverBaseTestPage < Route1ParentPage > implements SamplePageLauncher { ... @Override public void launchSamplePage ( PageLocator loc , Object ... args ) { // steps to open page. For example: pageLink . click (); } ... } Another parent of Sample page: class Route2Page extends WebDriverBaseTestPage < Route2ParentPage > implements SamplePageLauncher { ... @Override public void launchSamplePage ( PageLocator loc , Object ... args ) { // steps to open child page from this page. For example: pageLink . click (); } ... } Set Interface created in as parent page parameter of the page class and call interface method in open page. public class SamplePage extends WebDriverBaseTestPage < SamplePageLauncher > { public SamplePage () { // set default route this ( new Route1Page ()); } public SamplePage ( SamplePageLauncher parent ) { super ( parent ); } @Override protected void openPage ( PageLocator loc , Object ... args ) { parent . launchSamplePage ( loc , args ); } ... } Your test method will look like: @Test public void testMethod () { // Default Route SamplePage samplePage = new SamplePage (); // route 1 // SamplePage samplePage = new SamplePage(new Route1Page()); // route 2 // SamplePage samplePage2 = new SamplePage(new Route2Page()); samplePage . launchPage ( pageLocator ); } Dynamic Page Flow \u00b6 This is the case same as multiple route page hierarchy, the only difference over here there will be only one route will exist with specific workflow configuration of AUT. Here you can define parent either in constructor or in initParent method according to workflow. {% include inline_image.html file=\"Dynamic_Page_Flow.png\" alt=\"Dynamic Page Flow \" %} You need to create interface and implement that interface in all possible parents same as multi route page example steps 1 and 2. Step 3 will look like given below public class PaymentPage extends WebDriverBaseTestPage < PaymentsPageLauncher > { public PaymentPage () { // set route according to current workflow parent = ( pageProps . getInt ( \"review.next.flow\" ) == 6 ) ? new ReviewFlightPage () : new PassengerPage (); } } Or alternatively override init parent: @Override protected void initParent () { // set route according to current workflow parent = ( pageProps . getInt ( \"review.next.flow\" ) == 6 ) ? new ReviewFlightPage () : new PassengerPage (); } Page Template \u00b6 {% include inline_image.html file=\"PageTemplate.png\" alt=\"Page Template \" %} Template page implementation derives common functionality from Template. It will result in reusability of code and higher level of maintainability. TopNavTab and TabbedMenuItem perform like template for other pages. TopNavTab is extended by each Tab e.g. OverviewTab, MyCompanyTab Linked Pages \u00b6 Static Linked Page \u00b6 public ViewPage clickSave () { saveBtn . click (); ViewPage expectedPage = new ViewPage (); expectedPage . waitForPageToLoad (); return expectedPage ; } Dynamic Linked page \u00b6 Page can be linked with action in another page. Expected page can be provided while writing the test. For Example, in registration flow, expected page on \"Save\" action in \"Edit Basic Info page\" is \"Edit contact Info Page\". {% include inline_image.html file=\"Dynamic_Linked_Pages.png\" alt=\"Dynamic Linked Pages \" %} public < T extends BaseTestPage < TestPage >> T clickSave ( T expectedPage ) { saveContinueBtn . click (); expectedPage . waitForPageToLoad (); return expectedPage ; }","title":"Page Design Concepts"},{"location":"latest/page_design_concepts/#page-hierarchy","text":"One page becomes parent/launcher of another page(s) results in creating navigation hierarchy.","title":"Page Hierarchy"},{"location":"latest/page_design_concepts/#single-navigation-route","text":"This is the normal page hierarchy were a page can be launched from only one page. Consider the example where page P is home page, P11 and P12 can be navigated from P and P111 and P121 can be navigated trough P11 and P12 respectively. Considering page hierarchy for P->P11->P111, P will become parent page for P11 and P11 will become parent page for P111. Below is the selenium2 API code sample for creating page hierarchy for above navigation. As P is home page or have no parent page, while creating page P we will just place a test page interface. public class P extends WebDriverBaseTestPage < WebDriverTestPage > { @FindBy ( locator = P1l_LINK_LOC ) private QAFWebElement p1Link ; @Override protected void openPage ( PageLocator arg0 , Object ... arg1 ) { driver . get ( \"/\" ); } public QAFWebElement getP1Link () { return p1Link ; } } While creating page P1 you need to specify \"P\" as parent page by providing \"P\" as base class parameter. public class P1 extends WebDriverBaseTestPage < P > { @FindBy ( locator = \"P1l_LINK_LOC\" ) private QAFWebElement p11Link ; @Override public boolean isPageActive ( PageLocator loc , Object ... args ) { // TODO Auto-generated method stub return false ; } @Override protected void openPage ( PageLocator arg0 , Object ... arg1 ) { parent . getP1Link (). click (); } } While creating page P2 you need to specify \"P1\" as parent page by providing \"P1\" as base class parameter. public class P11 extends WebDriverBaseTestPage < P1 > { @Override public boolean isPageActive ( PageLocator loc , Object ... args ) { // TODO Auto-generated method stub return false ; } @Override protected void openPage ( PageLocator arg0 , Object ... arg1 ) { parent . getP11Link (). click (); } }","title":"Single navigation route"},{"location":"latest/page_design_concepts/#multiple-navigation-routes","text":"The framework has multiple route support. In case of multiple routes, to navigate to specific page you need to define launcher interface that extends TestPage and provide that interface as parent to the page with multiple route. Implement launcher interface in each possible parent class. At the time of defining test provide parent as argument while creating page object. Selenium1 API Implementation Create child interface of WebDriverBaseTestPage that defines one method to open page under question. interface SamplePageLauncher extends WebDriverBaseTestPage { public void launchSamplePage ( PageLocator loc , Object ... args ); } Implement that interface in all possible parent pages. class Route1Page extends SeleniumBaseTestPage < Route1ParentPage > implements SamplePageLauncher { ... @Override public void launchSamplePage ( PageLocator loc , Object ... args ) { selenium . click ( \"locator\" ); } ... } Another parent: class Route2Page extends SeleniumBaseTestPage < Route2ParentPage > implements SamplePageLauncher { ... @Override public void launchSamplePage ( PageLocator loc , Object ... args ) { // steps to open sample page from this page. For example: selenium . click ( \"locator\" ); } ... } Set Interface created in as parent page parameter of the page class and call interface method in open page. public class SamplePage extends SeleniumBaseTestPage < SamplePageLauncher > { public SamplePage ( SamplePageLauncher parent ) { super ( parent ); } public SamplePage () { // set default route this ( new Route1Page ()); } @Override protected void openPage ( PageLocator loc , Object ... args ) { parent . launchSamplePage ( loc , args ); } ... } Selenium2 API implementation Create child interface of WebDriverTestPage that defines one method to open multi route page under question. interface SamplePageLauncher extends WebDriverTestPage { public void launchSamplePage ( PageLocator loc , Object ... args ); } Implement that interface in all possible parent pages. class Route1Page extends WebDriverBaseTestPage < Route1ParentPage > implements SamplePageLauncher { ... @Override public void launchSamplePage ( PageLocator loc , Object ... args ) { // steps to open page. For example: pageLink . click (); } ... } Another parent of Sample page: class Route2Page extends WebDriverBaseTestPage < Route2ParentPage > implements SamplePageLauncher { ... @Override public void launchSamplePage ( PageLocator loc , Object ... args ) { // steps to open child page from this page. For example: pageLink . click (); } ... } Set Interface created in as parent page parameter of the page class and call interface method in open page. public class SamplePage extends WebDriverBaseTestPage < SamplePageLauncher > { public SamplePage () { // set default route this ( new Route1Page ()); } public SamplePage ( SamplePageLauncher parent ) { super ( parent ); } @Override protected void openPage ( PageLocator loc , Object ... args ) { parent . launchSamplePage ( loc , args ); } ... } Your test method will look like: @Test public void testMethod () { // Default Route SamplePage samplePage = new SamplePage (); // route 1 // SamplePage samplePage = new SamplePage(new Route1Page()); // route 2 // SamplePage samplePage2 = new SamplePage(new Route2Page()); samplePage . launchPage ( pageLocator ); }","title":"Multiple navigation routes"},{"location":"latest/page_design_concepts/#dynamic-page-flow","text":"This is the case same as multiple route page hierarchy, the only difference over here there will be only one route will exist with specific workflow configuration of AUT. Here you can define parent either in constructor or in initParent method according to workflow. {% include inline_image.html file=\"Dynamic_Page_Flow.png\" alt=\"Dynamic Page Flow \" %} You need to create interface and implement that interface in all possible parents same as multi route page example steps 1 and 2. Step 3 will look like given below public class PaymentPage extends WebDriverBaseTestPage < PaymentsPageLauncher > { public PaymentPage () { // set route according to current workflow parent = ( pageProps . getInt ( \"review.next.flow\" ) == 6 ) ? new ReviewFlightPage () : new PassengerPage (); } } Or alternatively override init parent: @Override protected void initParent () { // set route according to current workflow parent = ( pageProps . getInt ( \"review.next.flow\" ) == 6 ) ? new ReviewFlightPage () : new PassengerPage (); }","title":"Dynamic Page Flow"},{"location":"latest/page_design_concepts/#page-template","text":"{% include inline_image.html file=\"PageTemplate.png\" alt=\"Page Template \" %} Template page implementation derives common functionality from Template. It will result in reusability of code and higher level of maintainability. TopNavTab and TabbedMenuItem perform like template for other pages. TopNavTab is extended by each Tab e.g. OverviewTab, MyCompanyTab","title":"Page Template"},{"location":"latest/page_design_concepts/#linked-pages","text":"","title":"Linked Pages"},{"location":"latest/page_design_concepts/#static-linked-page","text":"public ViewPage clickSave () { saveBtn . click (); ViewPage expectedPage = new ViewPage (); expectedPage . waitForPageToLoad (); return expectedPage ; }","title":"Static Linked Page"},{"location":"latest/page_design_concepts/#dynamic-linked-page","text":"Page can be linked with action in another page. Expected page can be provided while writing the test. For Example, in registration flow, expected page on \"Save\" action in \"Edit Basic Info page\" is \"Edit contact Info Page\". {% include inline_image.html file=\"Dynamic_Linked_Pages.png\" alt=\"Dynamic Linked Pages \" %} public < T extends BaseTestPage < TestPage >> T clickSave ( T expectedPage ) { saveContinueBtn . click (); expectedPage . waitForPageToLoad (); return expectedPage ; }","title":"Dynamic Linked page"},{"location":"latest/page_launch_strategy/","text":"By default page strategy is launch only if required. You can set strategy by using setLaunchStrategy method. Available launch strategies are onlyIfRequired, alwaysRelaunchFromParent and alwaysRelaunchFromRoot which are defined by enum LaunchStrategy. To set specific strategy for all test one can set appropriate strategy in page constructor. In case of test specific requirement set appropriate strategy for the page object created in test method. For example following code will set launch strategy for test case only: @Test public void testLogin ( Map < String , String > params ) { LoginPage loginPage = new LoginPage (); // Should not have any prior error message.loginPage.setLaunchStrategy(LaunchStrategy.alwaysRelaunchFromRoot); --- ---","title":"Page launch strategy"},{"location":"latest/pagelocator_objectarg_launchpage/","text":"The page locator is intended for identifying exact locator when there are multiple locators available to open the page from the parent page. The ideal example is item details page which can be open from item list page. On item list page there can be list of items with available action for each item and each item's \"view details\" action takes you to item details page. Here the page locator provides a way to locate specific item's details page. For example, open Item Details page for Item xxx. In other cases, you can ignore it. Above example of item details page be accomplished by the use of page locator. In Item details page you might have an openPage implementation like: @Override protected void openPage ( PageLocator loc ){ if ( loc != null ) { parent . openItemDetails ( loc . getLocator ()); } } In itemLists page there can be //Selenium1 API public void openItemDetails ( String itemName ) { // create element locator for example String eleLoc = \"link=\" + itemName; selenium . click ( eleLoc ); } // Webdriver API public void openItemDetails ( String itemName ) { // assuming getItem(String) available in parent page parent . getItem ( itemName ). click (); } While launching the Item Details page you need to provide appropriate page locator as below: ItemDetailsPage itemDetailsPage = new ItemDetailsPage (); itemDetailsPage . launchPage ( new DefaultPageLocator ( \"XYZ\" )); Complex example of page hierarchy and page locator \u00b6 Consider that in online shopping cart e-commerce application, through admin UI, admin can upload items, supplier, etc from excel or another file. After upload, there is a status page which shows upload details and provides a link to see details of upload. From status page, admin can select and edit individual supplier or item information. public class EditSupplierDetailPage extends WebDriverBaseTestPage < WebDriverTestPage > { @Override protected void openPage ( PageLocator locator , Object ... args ) { parent . editSupplierData ( locator . getLocator ()); } // helper method public static PageLocator creatPageLocator ( String supplierName , String fileNameOrJobID ) { return new DefaultPageLocator ( supplierName , UploadDetailsPage . createPageLocator ( supplierName , fileNameOrJobID )); } } public class UploadDetailsPage extends WebDriverBaseTestPage < WebDriverTestPage > { @Override protected void openPage ( PageLocator locator , Object ... args ) { parent . viewSupplierUploadDetails ( locator . getLocator ()); } public void editSupplierData ( String supplierName ) { selenium . click ( \"link=Edit \" + supplierName ); } public static PageLocator createPageLocator ( String supplierName , String fileNameOrJobID ) { return new DefaultPageLocator ( supplierName , UploadStatusPage . createPageLocator ( fileNameOrJobID )); } } UploadStatusPage requires jobid or uploaded filename. public class UploadStatusPage extends WebDriverBaseTestPage < WebDriverTestPage > { @Override protected void openPage ( PageLocator locator , Object ... args ) { parent . viewPostUploadResults ( locator . getLocator ()); } public void viewSupplierUploadDetails ( String supplierName ) { getSupplier ( supplierName ). click (); } public static PageLocator createPageLocator ( String fileNameOrJobID ) { return new DefaultPageLocator ( fileNameOrJobID ); } } public class UploadHistoryPage extends WebDriverBaseTestPage < WebDriverTestPage > { @Override protected void openPage ( PageLocator locator ) { parent . openLink ( SUPPLIER_TAB_LINKS . UPLOAD_HISTORY_LINK_LOC ); } public void viewPostUploadResults ( String filenameOrJobID ) { String postUploadResultLink = filenameOrJobID == null || filenameOrJobID . trim (). equalsIgnoreCase ( \"\" ) ? DEFAULT_POSTUPLOAD_RESULT_LINK_LOC : getPostUploadResultLink ( filenameOrJobID ); postUploadResultLink . click (); } } Object arguments \u00b6 Page locator has sometimes limited scope for providing launch hierarchy parameters.","title":"Page Locator and Object arguments in Launch page"},{"location":"latest/pagelocator_objectarg_launchpage/#complex-example-of-page-hierarchy-and-page-locator","text":"Consider that in online shopping cart e-commerce application, through admin UI, admin can upload items, supplier, etc from excel or another file. After upload, there is a status page which shows upload details and provides a link to see details of upload. From status page, admin can select and edit individual supplier or item information. public class EditSupplierDetailPage extends WebDriverBaseTestPage < WebDriverTestPage > { @Override protected void openPage ( PageLocator locator , Object ... args ) { parent . editSupplierData ( locator . getLocator ()); } // helper method public static PageLocator creatPageLocator ( String supplierName , String fileNameOrJobID ) { return new DefaultPageLocator ( supplierName , UploadDetailsPage . createPageLocator ( supplierName , fileNameOrJobID )); } } public class UploadDetailsPage extends WebDriverBaseTestPage < WebDriverTestPage > { @Override protected void openPage ( PageLocator locator , Object ... args ) { parent . viewSupplierUploadDetails ( locator . getLocator ()); } public void editSupplierData ( String supplierName ) { selenium . click ( \"link=Edit \" + supplierName ); } public static PageLocator createPageLocator ( String supplierName , String fileNameOrJobID ) { return new DefaultPageLocator ( supplierName , UploadStatusPage . createPageLocator ( fileNameOrJobID )); } } UploadStatusPage requires jobid or uploaded filename. public class UploadStatusPage extends WebDriverBaseTestPage < WebDriverTestPage > { @Override protected void openPage ( PageLocator locator , Object ... args ) { parent . viewPostUploadResults ( locator . getLocator ()); } public void viewSupplierUploadDetails ( String supplierName ) { getSupplier ( supplierName ). click (); } public static PageLocator createPageLocator ( String fileNameOrJobID ) { return new DefaultPageLocator ( fileNameOrJobID ); } } public class UploadHistoryPage extends WebDriverBaseTestPage < WebDriverTestPage > { @Override protected void openPage ( PageLocator locator ) { parent . openLink ( SUPPLIER_TAB_LINKS . UPLOAD_HISTORY_LINK_LOC ); } public void viewPostUploadResults ( String filenameOrJobID ) { String postUploadResultLink = filenameOrJobID == null || filenameOrJobID . trim (). equalsIgnoreCase ( \"\" ) ? DEFAULT_POSTUPLOAD_RESULT_LINK_LOC : getPostUploadResultLink ( filenameOrJobID ); postUploadResultLink . click (); } }","title":"Complex example of page hierarchy and page locator"},{"location":"latest/pagelocator_objectarg_launchpage/#object-arguments","text":"Page locator has sometimes limited scope for providing launch hierarchy parameters.","title":"Object arguments"},{"location":"latest/prerequisite_java/","text":"Required java 1.7 or later, you can obtain it from here .","title":"JAVA"},{"location":"latest/properties_list/","text":"Framwork uses different proprties those are defined in ApplicationProperties.java . Below are few useful and important properties. Refer different ways of providing properties to get details on how to set any property. Key Default Value Description env.baseurl Base URL of web application under test env.resources resources List of files or folder from that you want to load resources like testdata, locators and properties. step.provider.pkg Provide a list of packages to load teststep, required only for step client other than java. scenario.file.loc scenarios list of file/folder from where bdd/kwd scenarios need to be executed remote.server localhost If you are using remote driver, specify server. remote.port 4444 If you are using remote driver, specify port on which selenium server is running. driver.name Name of driver to create instance of that driver. Available Possible Values. edgeDriver, firefoxDriver, iexplorerDriver, chromeDriver, operaDriver, safariDriver, androidDriver, iPhoneDriver, appiumDriver, otherDriver : To use custom driver, provide driver class as capability. Example : To use PhantomJSDriver driver.name=otherDriver other.additional.capabilities={'driverClass':'org.openqa.selenium.phantomjs.PhantomJSDriver'} webdriver.remote.session selenium remote session id for debugging purpose. selenium.wait.timeout 30000 Default timeout in ms for all the element related commands and for waitservices methods. webdriver.ie.driver Sepcify IEDriverServer file path here. Required when using iExplorerDriver webdriver.chrome.driver Sepcify chromedriver file path here. Required when using chromeDriver selenium.success.screenshots 1 Specify whether to capture screenshot or not on checkpoint success. Possible values 0 or 1, true or false. selenium.failure.screenshots 1 Specify whether to capture screenshot or not on checkpoint failure. Possible values 0 or 1, true or false. wd.command.listeners list of qualified class name that implements WebDriver Listener . From 2.1.9 You can use qaf.listeners as well instead of this property to register webdriver command listener. we.command.listeners list of qualified class name that implements WebElement Listener . From 2.1.9 You can use qaf.listeners as well instead of this property to register webelement command listener. teststep.listeners list of qualified class name that implements TestStep Listener . From 2.1.9 You can use qaf.listeners as well instead of this property to register teststep listener. qaf.listeners list of qualified class name that implements any of the QAF listener . Single property that can be used to registe any of the qaf listener (webdriver, webelement to teststep). (:since 2.1.9) retry.count 0 To retry testcase if testcase failed cause of any exception. Note : testcase will not retry if there is any checkpoint failure. bean.populate.random false Set true to fill bean randomly from available data sets, more details fill Databean from multiple dataset. selenium.singletone To define driver instance scope.Possible value can be Tests or Methods or Groups. driver.init.retry.timeout 0 Duration in multiplication of 10 seconds for example 50. Set time out for retry driver initialization when driver initialization fail (since 2.1.9). step.provider.sharedinstance false specify wherether to share class object among step in the same class. (since 2.1.9) https.accept.all.cert false Set true to trust all certificates and ignore host name verification for web-services ( since 2.1.13) element.default.listener true Specify weather to attach ElementMetaDataListener or not. ( since 2.1.13) element.default.metadata To set default meta-data for webelement. Meta-data provided with locator has higher preference than default values. ( since 2.1.13) password.decryptor.impl full qualified name of the class that implements PasswordDecryptor . This implementation will be used to decrypt password. When configuration manager found any key starts with encrypted ( since 2.1.13) tc.identifier.key testCaseId test case identifier meta-key which will be used to as file name of test case result json file. ( since 2.1.13)","title":"Property List"},{"location":"latest/qaf_cucumber/","text":"A cucumber QAF Formatter is provided to use with cucumber JVM. Formatter: com . qmetry . qaf . automation . cucumber . QAFCucumberFormatter You can use all the features of QAF while developing cucumber java steps.","title":"QAF cucumber"},{"location":"latest/qaf_kwd_reference/","text":"Keyword Driven Define Test Suite Keyword driven scenario Keyword driven describe test step","title":"QAF KWD Reference"},{"location":"latest/qaf_listeners/","text":"QAF provides command listener support for both Selenium 1 and 2 API. The general idea is that one or more objects (the listeners) register their interest in being notified of command execution on selenium/webdriver/webelement. The listener can perform some actions or track details before/after command execution as well as on failure. You can create listener by implementing appropriate listener interface of by extending appropriate adapter class. To register one or more listener you need to set appropriate property. Listeners API Table \u00b6 List Interface Adapter Class Property Listener Methods QAFDataProviderIntercepter QAFListenerAdapter qaf.listeners beforeFech(TestNGScenario, ITestContext) List intercept(TestNGScenario, ITestContext, List ) QAFTestStepListener QAFTestStepAdapter teststep.listeners or qaf.listeners onFailure(StepExecutionTracker) beforExecute(StepExecutionTracker) afterExecute(StepExecutionTracker) QAFWebDriverCommandListener QAFWebDriverCommandAdapter wd.command.listeners or qaf.listeners beforeInitialize(Capabilities) onInitialize(QAFExtendedWebDriver) beforeCommand(QAFExtendedWebDriver, CommandTracker) afterCommand(QAFExtendedWebDriver, CommandTracker) onFailure(QAFExtendedWebDriver, CommandTracker) onInitializationFailure(Capabilities desiredCapabilities, Throwable t) QAFWebElementCommandListener QAFWebElementCommandAdapter we.command.listeners or qaf.listeners beforeCommand(QAFExtendedWebElement, CommandTracker) afterCommand(QAFExtendedWebElement, CommandTracker) onFailure(QAFExtendedWebElement, CommandTracker) There is additional Adapter Class QAFListenerAdapter introduced from 2.1.9 that implements all of the qaf listeners. You can extend it, override required methods and register using qaf.listeners property. TestStep Listener \u00b6 In order to create teststep listener, you need to implement listener interface com.qmetry.qaf.automation.step.QAFTestStepListener or extend adapter class QAFTestStepAdapter . QAFTestStepListener defines following methods: void beforExecute ( StepExecutionTracker stepExecutionTracker ); void afterExecute ( StepExecutionTracker stepExecutionTracker ); void onFailure ( StepExecutionTracker stepExecutionTracker ); Creating listener public class ThresholdListener extends QAFTestStepAdapter { @Override public void afterExecute ( StepExecutionTracker stepExecutionTracker ) { long duration = ( stepExecutionTracker . getEndTime () - stepExecutionTracker . getStartTime ()) / 1000 ; if ( stepExecutionTracker . getStep (). getThreshold () > duration ) stepExecutionTracker . setVerificationError ( \"Threshold value is exceed\" ); } } Registering listener To register listener set property teststep.listeners . For example to register above created listener you need to set property as below: teststep.listeners = com.qmetry.qaf.listeners.ThresholdListener WebDriver Listener \u00b6 In order to create webdriver command listener, you need to implement listener interface QAFWebDriverCommandListener or extend adapter class QAFWebDriverCommandAdapter . QAFWebDriverCommandListener defines following methods: void beforeInitialize ( Capabilities ) void beforeCommand ( QAFExtendedWebDriver paramQAFExtendedWebDriver , CommandTracker paramCommandTracker ); void afterCommand ( QAFExtendedWebDriver paramQAFExtendedWebDriver , CommandTracker paramCommandTracker ); void onFailure ( QAFExtendedWebDriver paramQAFExtendedWebDriver , CommandTracker paramCommandTracker ); void onInitialize ( QAFExtendedWebDriver driver ); Creating listener public class WDListener extends QAFWebDriverCommandAdapter { Log logger = LogFactory . getLog ( getClass ()); @Override public void beforeCommand ( QAFExtendedWebDriver driver , CommandTracker commandTracker ) { super . beforeCommand ( driver , commandTracker ); String command = commandTracker . getCommand (); Map < String , Object > params = commandTracker . getParameters (); // support selenium 1 api for navigating from frame to main window // with selenium.selectFrame(\"\"); if ( command . equalsIgnoreCase ( DriverCommand . SWITCH_TO_FRAME ) && StringUtil . isBlank (( String ) params . get ( \"id\" ))) { String mainWindow = driver . getWindowHandle (); params . put ( \"id\" , mainWindow ); driver . switchTo (). window ( mainWindow ); // skip original command execution commandTracker . setResponce ( new Response ()); } if ( command . equalsIgnoreCase ( DriverCommand . SWITCH_TO_WINDOW )) { String targetWindow = String . valueOf ( commandTracker . getParameters (). get ( \"name\" )); String parentHandle = driver . getWindowHandle (); if ( ! targetWindow . equalsIgnoreCase ( parentHandle )) { // store the parent window handle ConfigurationManager . getBundle (). setProperty ( \"parentWindowHandel\" , parentHandle ); } } } @Override public void onFailure ( QAFExtendedWebDriver driver , CommandTracker commandTracker ) { super . onFailure ( driver , commandTracker ); if ( commandTracker . getCommand (). equalsIgnoreCase ( DriverCommand . SWITCH_TO_WINDOW ) && commandTracker . hasException ()) { Set < String > windows = driver . getWindowHandles (); String parentWindowHandel = ConfigurationManager . getBundle (). getString ( \"parentWindowHandel\" ); for ( String window : windows ) { if ( ! parentWindowHandel . equalsIgnoreCase ( window )) { driver . switchTo (). window ( window ); // now we can remove the exception, it is handled! commandTracker . setException ( null ); break ; } } } } } Registering listener To register listener set property wd.command.listeners . For example to register above created listener you need to set property as below: wd.command.listeners = com.ispl.automation.sample.webdriver.WDListener WebElement Listener \u00b6 A simple but very useful example of listener is \"listener for sendkeys\". As you know in webdriver send keys will append the text box, so each time we need to first call clear command and then use send keys command. Code Without listener: firstName . clear (); firstName . sendKeys ( \"fname\" ); lastName . clear (); firstName . sendKeys ( \"lname\" ); Code With use of listener: firstName . sendKeys ( \"fname\" ); firstName . sendKeys ( \"lname\" ); Creating listener In order to create webelement command listener, you need to implement listener interface QAFWebElementCommandListener or extend adapter class QAFWebElementCommandAdapter . QAFWebElementCommandListener defines following methods: void beforeCommand ( QAFExtendedWebElement paramQAFExtendedWebElement , CommandTracker paramCommandTracker ); void afterCommand ( QAFExtendedWebElement paramQAFExtendedWebElement , CommandTracker paramCommandTracker ); void onFailure ( QAFExtendedWebElement paramQAFExtendedWebElement , CommandTracker paramCommandTracker ); Below example illustrates how we can write a listener that clears element text before sending text. public class SendKeysListener extends QAFWebElementCommandAdapter { @Override public void beforeCommand ( QAFExtendedWebElement element , CommandTracker commandTracker ) { if ( commandTracker . getCommand (). equalsIgnoreCase ( DriverCommand . SEND_KEYS_TO_ELEMENT )) { element . clear (); // you access/modify any parameter! String value = String . valueOf ( commandTracker . getParameters (). get ( \"value\" )); if ( StringUtil . isBlank ( value )) { // No need to send key // ignore actual command commandTracker . setResponce ( new Response ()); } } } } In this example we had extended adapter class for webelement command listener and provided implementation for beforeCommand . Same way you can provide implementation for afterCommand and onFailure method if required. You can see that one can access parameters in listener and also can modify its value if required. Registering listener To register listener set property we.command.listeners . For example to register above created listener you need to set property as below: we.command.listeners = com.ispl.automation.sample.webdriver.SendKeysListener","title":"QAF listeners"},{"location":"latest/qaf_listeners/#listeners-api-table","text":"List Interface Adapter Class Property Listener Methods QAFDataProviderIntercepter QAFListenerAdapter qaf.listeners beforeFech(TestNGScenario, ITestContext) List intercept(TestNGScenario, ITestContext, List ) QAFTestStepListener QAFTestStepAdapter teststep.listeners or qaf.listeners onFailure(StepExecutionTracker) beforExecute(StepExecutionTracker) afterExecute(StepExecutionTracker) QAFWebDriverCommandListener QAFWebDriverCommandAdapter wd.command.listeners or qaf.listeners beforeInitialize(Capabilities) onInitialize(QAFExtendedWebDriver) beforeCommand(QAFExtendedWebDriver, CommandTracker) afterCommand(QAFExtendedWebDriver, CommandTracker) onFailure(QAFExtendedWebDriver, CommandTracker) onInitializationFailure(Capabilities desiredCapabilities, Throwable t) QAFWebElementCommandListener QAFWebElementCommandAdapter we.command.listeners or qaf.listeners beforeCommand(QAFExtendedWebElement, CommandTracker) afterCommand(QAFExtendedWebElement, CommandTracker) onFailure(QAFExtendedWebElement, CommandTracker) There is additional Adapter Class QAFListenerAdapter introduced from 2.1.9 that implements all of the qaf listeners. You can extend it, override required methods and register using qaf.listeners property.","title":"Listeners API Table"},{"location":"latest/qaf_listeners/#teststep-listener","text":"In order to create teststep listener, you need to implement listener interface com.qmetry.qaf.automation.step.QAFTestStepListener or extend adapter class QAFTestStepAdapter . QAFTestStepListener defines following methods: void beforExecute ( StepExecutionTracker stepExecutionTracker ); void afterExecute ( StepExecutionTracker stepExecutionTracker ); void onFailure ( StepExecutionTracker stepExecutionTracker ); Creating listener public class ThresholdListener extends QAFTestStepAdapter { @Override public void afterExecute ( StepExecutionTracker stepExecutionTracker ) { long duration = ( stepExecutionTracker . getEndTime () - stepExecutionTracker . getStartTime ()) / 1000 ; if ( stepExecutionTracker . getStep (). getThreshold () > duration ) stepExecutionTracker . setVerificationError ( \"Threshold value is exceed\" ); } } Registering listener To register listener set property teststep.listeners . For example to register above created listener you need to set property as below: teststep.listeners = com.qmetry.qaf.listeners.ThresholdListener","title":"TestStep Listener"},{"location":"latest/qaf_listeners/#webdriver-listener","text":"In order to create webdriver command listener, you need to implement listener interface QAFWebDriverCommandListener or extend adapter class QAFWebDriverCommandAdapter . QAFWebDriverCommandListener defines following methods: void beforeInitialize ( Capabilities ) void beforeCommand ( QAFExtendedWebDriver paramQAFExtendedWebDriver , CommandTracker paramCommandTracker ); void afterCommand ( QAFExtendedWebDriver paramQAFExtendedWebDriver , CommandTracker paramCommandTracker ); void onFailure ( QAFExtendedWebDriver paramQAFExtendedWebDriver , CommandTracker paramCommandTracker ); void onInitialize ( QAFExtendedWebDriver driver ); Creating listener public class WDListener extends QAFWebDriverCommandAdapter { Log logger = LogFactory . getLog ( getClass ()); @Override public void beforeCommand ( QAFExtendedWebDriver driver , CommandTracker commandTracker ) { super . beforeCommand ( driver , commandTracker ); String command = commandTracker . getCommand (); Map < String , Object > params = commandTracker . getParameters (); // support selenium 1 api for navigating from frame to main window // with selenium.selectFrame(\"\"); if ( command . equalsIgnoreCase ( DriverCommand . SWITCH_TO_FRAME ) && StringUtil . isBlank (( String ) params . get ( \"id\" ))) { String mainWindow = driver . getWindowHandle (); params . put ( \"id\" , mainWindow ); driver . switchTo (). window ( mainWindow ); // skip original command execution commandTracker . setResponce ( new Response ()); } if ( command . equalsIgnoreCase ( DriverCommand . SWITCH_TO_WINDOW )) { String targetWindow = String . valueOf ( commandTracker . getParameters (). get ( \"name\" )); String parentHandle = driver . getWindowHandle (); if ( ! targetWindow . equalsIgnoreCase ( parentHandle )) { // store the parent window handle ConfigurationManager . getBundle (). setProperty ( \"parentWindowHandel\" , parentHandle ); } } } @Override public void onFailure ( QAFExtendedWebDriver driver , CommandTracker commandTracker ) { super . onFailure ( driver , commandTracker ); if ( commandTracker . getCommand (). equalsIgnoreCase ( DriverCommand . SWITCH_TO_WINDOW ) && commandTracker . hasException ()) { Set < String > windows = driver . getWindowHandles (); String parentWindowHandel = ConfigurationManager . getBundle (). getString ( \"parentWindowHandel\" ); for ( String window : windows ) { if ( ! parentWindowHandel . equalsIgnoreCase ( window )) { driver . switchTo (). window ( window ); // now we can remove the exception, it is handled! commandTracker . setException ( null ); break ; } } } } } Registering listener To register listener set property wd.command.listeners . For example to register above created listener you need to set property as below: wd.command.listeners = com.ispl.automation.sample.webdriver.WDListener","title":"WebDriver Listener"},{"location":"latest/qaf_listeners/#webelement-listener","text":"A simple but very useful example of listener is \"listener for sendkeys\". As you know in webdriver send keys will append the text box, so each time we need to first call clear command and then use send keys command. Code Without listener: firstName . clear (); firstName . sendKeys ( \"fname\" ); lastName . clear (); firstName . sendKeys ( \"lname\" ); Code With use of listener: firstName . sendKeys ( \"fname\" ); firstName . sendKeys ( \"lname\" ); Creating listener In order to create webelement command listener, you need to implement listener interface QAFWebElementCommandListener or extend adapter class QAFWebElementCommandAdapter . QAFWebElementCommandListener defines following methods: void beforeCommand ( QAFExtendedWebElement paramQAFExtendedWebElement , CommandTracker paramCommandTracker ); void afterCommand ( QAFExtendedWebElement paramQAFExtendedWebElement , CommandTracker paramCommandTracker ); void onFailure ( QAFExtendedWebElement paramQAFExtendedWebElement , CommandTracker paramCommandTracker ); Below example illustrates how we can write a listener that clears element text before sending text. public class SendKeysListener extends QAFWebElementCommandAdapter { @Override public void beforeCommand ( QAFExtendedWebElement element , CommandTracker commandTracker ) { if ( commandTracker . getCommand (). equalsIgnoreCase ( DriverCommand . SEND_KEYS_TO_ELEMENT )) { element . clear (); // you access/modify any parameter! String value = String . valueOf ( commandTracker . getParameters (). get ( \"value\" )); if ( StringUtil . isBlank ( value )) { // No need to send key // ignore actual command commandTracker . setResponce ( new Response ()); } } } } In this example we had extended adapter class for webelement command listener and provided implementation for beforeCommand . Same way you can provide implementation for afterCommand and onFailure method if required. You can see that one can access parameters in listener and also can modify its value if required. Registering listener To register listener set property we.command.listeners . For example to register above created listener you need to set property as below: we.command.listeners = com.ispl.automation.sample.webdriver.SendKeysListener","title":"WebElement Listener"},{"location":"latest/release_notes/","text":"VER-2.1.15 Release Notes: \u00b6 #287 Updated license to MIT Deprecated RestWSTestCase use WSTestCase instead New Features Support to add third party step finder service #276 Support to locate element using extJs. Provided additional locator strategies: extDom : to locate element by ExtJS dom query extComp : to locate element by ExtJS component query #301 Format meta-data value in report #302 Enforce meta-data rules in dryrun qaf-aem-support AEM CoralUI functional test automation support. BDD2 with cucumber runner support through qaf-cucumber Enhancements Ensuring clear step mapping when populating steps mapping decreased report file name prefix max length from 50 to 45 char Moved meta data related method to MetaDataScanner Code improvement to process outline for data driven scenario without support to trigger element listener on find element command #23 Support JSON report for multiple XML suite in single run #123 Added comment for CDN. #275 - support of JQuery locator strategy to find child element #277 Support to have custom step provider class object factory Bug fixes #241 Capabilities with driverName prefix should take effect with custom driver #242 cacheble set through default element data doesn't take effect #243 Issue with Time Duration at Test Level #249 ResultUpdator not awaiting for completion When groups include/exclude used in xml configuration file #250 null pointer exception when test method from class in default package #256 Exception when feature file is empty or all statement commented #257 Scenario not parsed by Gherkin and BDD2 Factory when additional details provided after Feature Keyword #269 BDD2 - Examples - Blank/Empty data is not being executed #278 Runtime exception when test method has @Parameters annotation #300 Scenario outline in bdd2 should work without Examples keyword VER-2.1.14 Release Notes: \u00b6 New Features New bdd parser and factory - derived from QAF BDD, Jbehave and Gherkin. It supports meta-data with tags, data driven test using meta-data or example, tag support with examples BDD multi-line comment support #185 support to provider xml file for xml data provider #180 added intercepter and filter support in data-provider #177 Set proxy for specific URL(s) configuration Enahancements #231 When https.accept.all.cert property set to false, then QAF should revert the previous value in JVM #212 meta-data with parameters should get reflected with value in qaf report #184 Support to format step arguments #182 enhanced utility methods to get parameters from TestNG context #176 New annotation @PageIdentifier test-page #175 Support for selenium-support library 3+ #38 for data driven test global.datadriven.parallel and <test-case>.parallel property #226 Additional wait/assert/verify method with QAFWebElement for css style color properties to match expected and actual values as color object Bug Fixes #196 xml reference resolution in step argument #195 parameter name with numbers in step description changes the order of argument to be considered #203 sendkeys command uses encrypted password instead of decrypted version Fixed issue with findElement and findElements with type argument methods in component, moved it form QAFWebCompont to QAFExtendedWebElement #181 Fixed Step call in Gherkin data-table with single entry #131 Ability to teardown driver by name #229 Database data provider not working if query contains \"=\" VER-2.1.13 Release Notes: \u00b6 New Features #171 Support to have encripted password #168 Support to specify default webelement implementation #160 Timeout support in BDD Scenario Default element listener for password field and element scroll behavior Support of @Inject annotation in step library class Added support for custom by Enahancements #131 Ability to teardown driver by name Support to provide default element meta-data using property element.default.metadata Support to allow all certificates and ignore host name verification for web-services using property https.accept.all.cert Disabled Delimiter Parsing for xml configuration Web service request entity logging Added methods in DatabaseUtils to support multiple database Bug Fixes #169 With long bdd scenario name, not able to open captured images on windows #159 Checkpoints and command log not available in report for test case with timeout #154 Not able to override step.provider.pkg property for data driven scenario #153 result file generation for scenario name with some special characters is not working #139 Optional parameter in step #108 exclude capture screen shot for web-service failure Fixed element not found exception from isPresent called by element from component VER-2.1.12 Release Notes: \u00b6 New Features 1. #102 Adding env.resourse property per driver 2. #82 Custom Data Provider support for BDD Scenarios Enahancements 1. Added project name and project path as project.name and project.path properties Bug Fixes 1. #129 changing driver.name property doesn't take effect 1. #126 Wait for ajax throws exception dojo is not defined 2. #124 Test-NG #1480 impact on parallel execution 3. #119 Selenium 3+ causes unable to cast error 4. #106 Fixed issue of parameter having property with subnode 5. #94 parameter support in BDD meta-data for data-provider VER-2.1.11 Release Notes: \u00b6 New Features #54 Support XML node key in BDD step call where to JavaStep requires map #96 Support for Multiple Devices in one script Enahancements #73 Support to define component with locator repository #74 Data driven scenario count issue in case of verification failure #91 Support for Rest Client Factory #92 TestNG version upgrade to 6.10 Bug Fixes #66 dependsOnMethods not working for BDD scenarios #69 Getting Error \"Error communicating with the remote browser. It may have died.\" #70 Unable to capture screenshot for IE driver #75 Duplicate result file for data driven testcase VER-2.1.10 Release Notes: \u00b6 New Features #14 support for bdd, kwd dry-run mode Enahancements #45 Support to set class-finder for TestStepFinder #52 allowed space in path for step provider classes Bug Fixes #40 TestStep executed from the wrong package #41 Gherkin parser does does not include last step in scenario #42 Unable to load step from the class extending another class #50 Step reporting broken in when test authored in java #53 Solved ClassCastException in fillData VER-2.1.9 Release Notes: \u00b6 New Features #11 TestNG 6.9.10 support #28 Gherkin for test authoring #29 Driver initialize failure method in driver listener #30 Introduce new property qaf.listeners to register any of qaf listener #19 scenario object access in test-step listener #31 FormDataBean Custom Component support #32 New property step.provider.sharedinstance to allow class variable sharing among steps in same class. Default is false. #36 New step creation code snippet when step not found #37 new property driver.init.retry.timeout to retry on driver initialization failure #10 Support for xml for test-authoring Support to third party java step annotation (for example cucumber Given/When/Then instead of QAFTestStep) Added new driver name perfecto can be used in driver.name value as perfectoDriver or perfectoRemoteDriver Enahancements #17 passing params in deployResult instead of scenario.getMetadata() #20 support to provide .xml or .loc file location as resources QAF BDD background support Private method (with step annotation or Step provider annotation at class level) will be excluded from step mapping Utility method in UIDriverFectory to get capability that will be used by factory to create driver object. Updates releated to selenium 3 and Removed seleniumExceptions to make code work without selenium-leg dependency with selenium 3. Bug Fixes #18 Fixed infinite loop issue with retry.count Fixed issue of not scanning steps from all step provider package. Improved step finder. Depricated/Removed features Moved cucumber package in seperate QAF-Cucumber project. VER-2.1.8 Release Notes: \u00b6 New Features: Refactored package from com.infostretch to com.qmetry.qaf VER-2.1.7b Release Notes: \u00b6 New Features: Test step threshold support at step level Inbuilt step to start and stop time tracking with threshold Test step duration and threshold recording in json report Command execution duration recording in json report test step result as warning when one or more warning in sub steps non-java custom step definition updates custom step definition to have parameter names instead of index, for ex: instead of bdl step def : \"login with {0} and {1}\" user can define as \"login with {username} and {password}\" Supported to access map and array argument in step call within custom step. Removed web driver response status from command log for web driver command result Retry analyzer support for data-driven test Introduced new property 'retry.analyzer' : Provide this property to use your custom retry analyzer Added support to provide license file for license property list value passed as system property Specified default driver \"firefoxDriver\" if driver property not provided, with console message Added support to specify individual capability with \"driver.capabilities\" prefix for all driver Enhanced step exceptions handling Enhanced verify/assert for text/attribute/value to have proper message if timeout with element not present Added support to have BDD Keyword Synonyms Added support to scan bdd,kwd and excel file with step provider package to load non java steps Support of TestStep meta-data by using MetaData annotation at method level or at class level. Step Provider Package order and priority.Last package in list has highest priority. Underlying configuration of property util from property configuration to xml configuration For Test Step string argument , Single quote (') or Double quote (\") is now compulsory Updated cucumber formatter Deprecated \"driver.class\" use instead \"driverClass\" Bug Fixes: ISFW-148 - Same Scenario name overwrites <test_case_name>.json file in report. ISFW-150 - Run Configuration Include / Exclude not working properly. QAF Reporter: Report Enhancements/Improvements Test step duration indication in checkpoints and subcheckpoints BarChart for Test step threshold and duration Actual summary time at scenario level Added duration in command log Added Different Exception type as Error Analysis Added rerun count Added retry icon at scenario level Well formatted Command Logs and Error Trace VER-2.1.6b Release Notes: \u00b6 New Features: custom meta-data support in json report Test management tool integration support for QMetry 6 Randomized data selection for the data driven test cases Introduced new property 'bean.populate.random' Generate failed test cases incase of bdd Added property change listener to handle driver, resources, step provider package changes on the fly. Renamed few of properties related to driver. selenium.defaultBrowser\u2192driver.name selenium.server\u2192remote.server selenium.port\u2192remote.port removed setup method from WebDriverTestBase class for Test Step string argument , Single quote (') or Double quote (\") is now compulsory Renamed Attritube to Attribute for following methods verifyAttritube \u2192 verifyAttribute verifyNotAttritube \u2192 verifyNotAttribute waitForNotAttritube \u2192 waitForNotAttribute waitForAttritube \u2192 waitForAttribute assertAttritube \u2192 assertAttribute assertNotAttritube \u2192 assertNotAttribute QAF Reporter: Report Enhancements/Improvements Custom meta-data display in report Report backward support Bug Fixes: ISFWR-46 - QAS report Order by \"Name\" not working Properly. VER-2.1.5 Release Notes: \u00b6 New Features: Custom meta-data filter support using include and exclude parameters Typo correction in 'assertNotText' Enable Perfecto Command logs same as selenium logs Test management tool integration support for QMetry Bug Fixes: ISFW-113 - BDD Empty Scenario must run without any error. ISFW-115 - Screenshot not capture on failure case. ISFW-117 - wrong exception display on failure of assert. ISFW-119 - driver.executeScript throws java.lang.NullPointerException. ISFW-116 - Unexpected behaviour while QAFTestStep defined at interface level and implemented interface in class. QAF Reporter Report Enhancements/Improvements Bug Fixes ISFWR-43 - Wrong PassRate percentage in report. VER-2.1.4 Release Notes: \u00b6 New Features: Fetch all data of DataProvider Performance Enhancements Step exception handling, line number and bdd file name in stacktrace. TestCase marked as skip in-case of TestStep not found or BDD parsing issue. Provision in StepInvocation listener to have step type, step index and also to set next step index from listener. Report to have , not run step in case of TestCase fail or skip. BDD test steps call are now case-insensitive. Bug Fixes: ISFW-148 - Same Scenario name overwrites <test_case_name>.json file in report. QAF Reporter: ISFWR-35 - TrendChart showing incorrect execution count. VER-2.1.3 Release Notes: \u00b6 Supported selenium-server version 2.41 or above New Features: Supported jre 1.6 or above (1.8 will now supported with updated base data bean) Compatibility Perfecto mobile Continue to selenium 1 support Added support for custom locator strategy especially to support custom strategy by appium Added support for getting underlaying driver Test Management Tool Integration Support for BDD and KWD. Appium 1.7 version support Test Step Library BDL and KWL Bug Fixes: ISFW-126 - Wrong testcase count in report. ISFW-105 - BDD/KWD data-driven test data map as Parameter not working. ISFW-99 - With perfacto driver, actual capabilities are not available in Report. ISFW-100 - verification/ assertions with perfecto QASMobileElement is not working. ISFW-101 - Custom locator startegy always taking xpath. ISFW-102 - StepProvider Package for parellel execution not working. ISFW-95 - Typo of method name for assert. ISFW-93 - QAS report showing invalid checkpoints for Java Arguments. QAF Reporter: Enhancements: Combine checkpoint and overview tab. Auto refresh button redesign. Add legend in trend chart related to pass, skip, and fail test cases. Indication for expandable step in checkpoints tab. Navigate to particular execution from trend-chart. Add tool tip for count of pass, fail, skip test cases in trends-chart. Execution number on sidebar in reports. Add label for Number of Test Cases in trends-chart.(Y-Axis) Bug Fixes: ISFWR-33 - method results are not expanding in report. VER-2.1.2 Release Notes: \u00b6 Supported selenium-server version min 2.34 New Features: ISFW-51: multiple step provider packages. ISFW-54 Added support for data-bean field value list (list or key) to pick random value ISFW-45 Alternate/multiple locator support ISFW-43: Support for override property from xml configuration in web-service testing ISFW-49: JQuery Locator support Added waitForAjaxToLoad with IsExtendedWebDriver. Test step BDD client - Behavior driven support Test step listener support Property file with .loc extension Cucumber with ISFW (Web application functional Android/IPhone native and Rest web service automation) Validation Support Reporting check points in default cucumber report(s) ISFW reporter support Parameter support in cucumber feature file step call arguments Bug Fixes: seleniumEquals Null Pointer exception. ISFW-57: VerifyPresent is not working in case of nested child component ISFW-47: Wrong Description in report Deprecated Feature JSONUtil.toMap method Modifications Following properties modified/added Original property name|New Property name load.locale|env.load.locale default.locales|env.default.locales teststep.listeners ISFW Reporter New Features Attached deffect tracker with report. Bug Fixes ISFW-55 Not Able to get Test Case Summary in ISFW New Report Not displaying method result if args not provided in method meta-info.json VER-2.1.1 Release Notes: \u00b6 New Features: Supported selenium-server version min 2.22.0 max 2.32.0 and upto 2.34 Pro: Added ISFW build information and environment information in report under test overview section. Pro: Added CSV step client Pro: Added group, soft dependency, ordering support for CSV/Excel scenario Pro: Added predefined steps working with web element object Pro: Added rest web service testing support Added Validator class to provide assertion/verification methods that supports hamcrest matchers Added onInitialize method in web driver command listener Improvements: Updated QMetry client Removed feature of automatic starting selenium server. Renamed properties: selenium.browser.url - > env.baseurl test.props.dir -> env.resources app.autolaod.test.prop -> resources.load.subdirs selenium.server.start.command -> discontinued Package restructured and renamed some classes, please refer Upgrade notes. Screen Shots {% include inline_image.html file=\"TestStep_clients.png\" %} {% include inline_image.html file=\"Report_overview.png\" %} {% include inline_image.html file=\"Report_env.png\" %} {% include inline_image.html file=\"Report_details.png\" %} VER-2.1.0 Release Notes: \u00b6 Improvements: Renamed properties: driver.extra.capabilities to driver.additional.capabilities driver.extra.capabilities to driver.additional.capabilities Package restructured and code clean up: Removed \"com.qmetry.qaf.automation.webdriver.custom\" package holding sample custom component. Removed class/pacakage from selenium community (org.**). Removed deprecated methods:** /** * key:test.selenium.report.dir <br/> * value: dir to place generated result files * * @Deprecated: use {@link #REPORT_DIR} instead */ @Deprecated SEL_REPORT_DIR ( \"selenium.report.dir\" ), ISWebDriverBackedSelenium: /** * @deprecated Use {@link #getWrappedDriver()} instead. */ @Deprecated public IsExtendedWebDriver getUnderlyingWebDriver () { return getWrappedDriver (); } Base test case: /** * blank implementation need to override this method to provide before * individual test specific implementation Override beforeTest method for * before test implementation if you are configuring parallel methods * instead of method with @beforeTest annotation * * @deprecated use @beforeMethod instead * @param stb * @param m */ @Deprecated protected void beforeTest ( SeleneseTestBase stb , Method m ) { } /** * blank implementation need to override this method to provide before each * test specific implementation * * @deprecated use @beforeMethod instead * @param stb */ @Deprecated protected void beforeTest ( SeleneseTestBase stb ) { } PropertyUtil: /** * @deprecated use {@link #getString(String, String)} instead * @param sPropertyName * @param def * @return */ @Deprecated public String getProperty ( String sPropertyName , String def ) { return getString ( sPropertyName , def ); } /** * @param sPropertyName * @return default value is key itself */ public String getPropertyValue ( String key ) { return this . getString ( key , key ); } /** * @deprecated use {@link #getInt(String)} instead * @param sPropertyName * @return */ @Deprecated public int getPropertyIntValue ( String sPropertyName ) { return getInt ( sPropertyName , 0 ); } /** * @deprecated use {@link #getInt(String, int)} instead * @param sPropertyName * @param defaultVal * @return */ @Deprecated public int getPropertyIntValue ( String sPropertyName , int defaultVal ) { return getInt ( sPropertyName , defaultVal ); } /** * @deprecated use {@link #getString(String,String)} instead * @param sPropertyName * @param def * @return */ @Deprecated public String getPropertyValue ( String sPropertyName , String def ) { return getString ( sPropertyName , def ); } ConfigurationManager: /** * @deprecated Use {@link ConfigurationManager#getBundle()} instead * @return */ @Deprecated public PropertyUtil getApplicationProperties () { return getBundle (); } VER-2_0-b09 Release Notes: \u00b6 Improvements: Compatibility for chrome driver with server version above or below 2.22 (latest till the date is 2.33) Changed the way of providing extra capabilities from csv to json for example chrome.extra.capabilities = {\"platform\"=\"ANY\",\"cssSelectorsEnabled\"=true,\"chrome.switches\":[\"--ignore-certificate-errors\",\"--user-data-dir=F:\\chirag\\projects\\STFWs\\ISFWTestStepDemoProject\\chromeprofile\"]} VER-2_0-b08 Release Notes \u00b6 New Features: Added support localization of xml file. To create xml file for specific local provide local ext after .xml for example testdata.xml.en Added test step feature: Step Feature: ISFW will provide a mechanism to specify any method as test step by annotating the method with @IsTestStep . Furthermore methods in class specified as step provider by annotating the class with@IsTestStepProvider. Also we have provided provision to supply step description so that it can be reported in report. public class SampleClass { @IsTestStep ( description = \"do the needful with {0}\" ) public static void testStep ( String s ) { System . out . println ( \"testStep invoked!.....\" + s ); } @IsTestStep ( description = \"do the needful\" ) public void testStep2 () { System . out . println ( \"testStep without args invoked!.....\" ); } } @IsTestStepProvider public class SampleStepProvider { public void step () { System . out . println ( \"step invoked!.....\" ); } public void anotherStep () { System . out . println ( \"anotherStep invoked!.....\" ); } } Added Step client for Excel Bug Fixes: Fixed issue of overriding resources from config file by providing resource file(s)/dir(s) VER-2_0-b07 Release Notes: \u00b6 New Features: Json based reporting support , you need to copy dashboard.htm and jquery directory. Added service entry to register testNG listener. Now you don't require to register testng listener of ISFW. Please remove \"com.qmetry.qaf.automation.testng.IsTestNGListener\" entry from the listener entries in existing build files. Added support to directly provide remote webdriver url in case it is not in standard remote webdriver format. ie http:// : /wd/hub. In case the remote wd url is different then the defult pattern then insted of providing server and port just provide actual url as value of server property. For example: http://14.97.73.4:7777/wd/ Added support/compatibility with selenium 2.25 and later for using running browser session Bug Fixes: Fixed issue of finding element within component. VER-2_0-b06 Release Notes \u00b6 New Features: Added String matcher and additional wait/assert/verify methods for element text and value with String matcher argument example: import static com.qmetry.qaf.automation.util.StringMatcher.containsIgnoringCase ele . verifyText ( containsIgnoringCase ( \"partial text\" )); ele . verifyText ( exact ( \"text\" )); ele . verifyText ( startsWith ( \"prefix\" )); ele . verifyText ( startsWithIgnoringCase ( \"prefix\" )); ele . verifyText ( like ( \"valid regular expr\" )); ele . verifyText ( likeIgnoringCase ( \"valid regular expr\" )); {% include note.html content='ele.verifyText(\"text\") is equivalent to ele.verifyText(exactIgnoringCase (\"text\"))' %} Added Support to provide wait time for wait methods. example: ele . waitForText ( containsIgnoringCase ( \"partial text\" )); //default timeout and interval ele . waitForText ( containsIgnoringCase ( \"partial text\" ), 5000 ); //with timeout 5000 ms and default interval ele . waitForText ( containsIgnoringCase ( \"partial text\" ), 5000 , 100 ); //with timeout 5000 ms and interval 100ms Added support for xml data provider @IsDataProvider ( key = \"test.set\" ) @Test public void xmlDPTest ( String p1 , String p2 , String p3 ) { System . out . printf ( \"data - p1:[%s] p2:[%s] p3:[%s]\" , p1 , p2 , p3 ); } @IsDataProvider ( key = \"test.set\" ) @Test public void xmlDPTest ( Map < String , String > data ) { System . out . println ( \"data - \" + data ); } below is the content of data file <testdata> <test> <set> <val1> aaa </val1> <val2> bbb </val2> <val3> ccc </val3> </set> <set> <val1> xxx </val1> <val2> yyy </val2> <val3> zzz </val3> </set> <set> <val1> 111 </val1> <val2> 222 </val2> <val3> 333 </val3> </set> </test> </testdata> * Added support for xml property configuration Added locale support Any locale or env specific data can be stored in properties file with extension of the locale or env. It can be retrieved by getting subset. We need to specify which locales we want to initialize by setting following property #all the locales that can be used load.locales = zh_CN;hi above setting will load properties from *.zh_CN *.hi files To access hi locale properties ConfigurationManager . getBundle (). subset ( \"hi\" ). getString ( \"test.prop\" ); props . subset ( \"hi\" ). getString ( \"test.prop\" ); props . subset ( \"zh_CN\" ). getString ( \"test.prop\" ); There is a provision of setting default locale by providing default.locale In that case if multiple locale loaded and want to use prop from default locale then don't require to use subset. For example: load.locales = zh_CN;hi default.locale = hi Then use properties directly for hi locale: props . getString ( \"test.prop\" ); For zh_CN: props . subset ( \"zh_CN\" ). getString ( \"test.prop\" ) {% include note.html content=\" in this case where 'hi' is set to default. props.subset('hi').getString('test.prop'); will not work as 'hi' locale is default locale so will be added to main configuration.\" %} Default encoding for reading locale properties is UTF-8 that can be change by providing system/application property \"locale.char.encoding\" Added component class and support to find component from parent element. public class TestComponent extends Component { public TestComponent ( String locator ) { super ( locator ); } .... } TestComponent comp = ele . findElement ( \"css=a\" , TestComponent . class ); List < TestComponent > testComponents = ele . findElements ( \"css=.pass\" , TestComponent . class ); Added support to link java doc with test description in report. To enable set property 'report.javadoc.link=true' to set docs dir path set property javadoc.folderpath default is \"../../../docs/tests/\" to customize link set report.javadoc.link.format default value is <a href=\"%s\" target=\"_blank\">[View-doc]</a> Added support to pass parameter in locator string. For exmple in locator xpath=//@*/[name()=' wl:trnslate'][.='${foo.bar}']//.. {foo.bar} will be replaced with the value of property \"foo.bar\". Assuming value is xxx then the locator will become xpath=//@*[name()='.. Same way link= {foo.bar} will be replaced with the value of property \"foo.bar\". Assuming value is xxx then the locator will become xpath=//@*[name()='.. Same way link= will become link=xxx It supports multiple parameters as well as same parameter multiple times. Added QC support - refer QC integration doc Support for JSON file to provide test data. Test method should expect Map. Added support to use map as parameter for data-driven test where db is used to provide data. column name/alise will be key and column value will be value. Added support to use existing driver session Following are the steps: Webdriver session can be created through http://localhost:4444/wd/hub/static/resource/hub.html . After starting session you can perform manual steps on the browser! You need to use only appropriate remote driver for this purpose. (e.g. firefoxRemoteDriver) You need to provide session id by setting driver extra capability webdriver.remote.session or a property webdriver.remote.session . The session id can <driver>.extra.capabilities=webdriver.remote.session=<session id> or webdriver.remote.session=<session id> Introduced page launch strategy so that one can define the page launch behavior from one of the following always launch from parent always launch from root launch page only if required (default) Added support for retry command through command tracker so that in on failure we can set retry to true and give it to one more try. Added support for self-descriptive web element: For self descriptive locator you can provide json string with key \"desc\". See below example of normal and self descriptive element locator. String LOGOUT_LINK_LOC = \"{'locator':'link=Logout','desc'='Logout link'}\" ; String LOGOUT_LINK_LOC = \"{'locator':'key=loc.properyname.in.property.file','desc'='Logout link'}\" ; //self descriptive the element description is available by ele.getDescription(). Also it will be used in different assertion/verification messages automatically by the fw. Added support for fill string in given format for bean property. Added randomize parameter format which can be used to provide format of the value. It will work only with String properties of bean. Sample format 999-999-99 aaa-a9a-99 99.99.aa alphabet will replaced random alphabet and digit will replaced with random digit Added safari driver support. required selenium server 2.21 or latest Added support for Date property in data bean. Fill random data will generate random date for day range min-max to current date Added new FindBy Annotation so you can find element by selenium-1 locator strategy Added order parameter in UiElement annotation. This can be used to set order of bean properties for fillUiElement. Support to override any property using testng config or system property. Priority will be system property, xml config, property file. Additional flag \"selenium.failure.screenshots\" to skip screen-shot for each failure and to have single screen-shot in case of failure. Added support for providing extra capability through property. For all driver set property \"driver.extra.capabilities\" For specific driver set property \"<driver>.extra.capabilities\" Example: driver.extra.capabilities = acceptSslCerts=false;platform=WINDOWS chrome.extra.capabilities = acceptSslCerts=true;chrome.switches=[--ignore- certificate-errors] chrome.extra.capabilities = acceptSslCerts=true;chrome.switches=[-- ignore-certificate-errors, --sample-other-switch] -added support for otherDriver or otherRemoteDriver For that you must need to set property \"other.extra.capabilities\". In case of otherDriver (not remote driver) you must need to provide driver class as capability : \"driver.class\", Example : other remote driver other.extra.capabilities = platform=ANY;browserName=safari other driver other.extra.capabilities = driver.class=org.openqa.selenium.safari.SafariDriver Added new form data bean and UiElement annotation Support to java script expr for dependent value match in form data bean Added support to use map as parameter for data-driven test, first row will be treated as header row header column will considered as key. Added support to populate bean from map having bean properties as keys Added skip parameter in Randomizer annotation Data bean random data generation: Added support for min and max value Improvements: Updated properties util, derived from PropertiesConfiguration [dependency of commons-configuration.jar] Updated data-provider functionality Updated data driven functionality added new annotation IsDataProvider added listener IsAnnotationTransformer Properties: For test data: <tc>.testdata=<param>=value;<param>=value globle. <param> are one of the parameter of IsDataProvider (dataFile, sheetName,hasHeaderRow,labelName,sqlQuery) Discontinue to support property CMD_EXECUTION_INTERVAL (key:commands.execution.interval) to Set execution interval between two selenium commands. Bug Fixes: Fix for IllegalAccessException while filling random data in non public variables Fixed issue of varification failed test considered as pass with testng 6. VER-2_0-b05 Release Notes \u00b6 New Features: Added support to provide application.properties file by setting system property application.properties.file. Added support to provide read test.props.dir from system property if exist. Improvements: Separated UI code as ISFW-UI project Updated to search server jar in all folders in project if selenium server is not started Updated QMetry integration to support new Scheduler xml and web-service added support for filter by script name, runid added support for multiple script name, tc id, run id Separated Qmetry integration from ISFW base test case and provided Bug Fixes: Fixed issue of execution fail if application.properties file not found. VER-2_0-b04 Release Notes \u00b6 New Features: Added setAttribute custom command Improvements: Updated excel data provider VER-31072011 Release Notes \u00b6 Posted on July 5, 2011 New Features: Added new feature to set interval between two commands by setting property Added capture screen shot support for remote web-driver Added Web-driver support VER-05042011 Release Notes \u00b6 Posted on Apr 5, 2011 New Features: Added ClipBoardUtil ImageCompareUtil (requires JAI dependency jars ) Tage: extjs Support for Extjs component model For example purpose inbuilt basic implementation for ExtGrid, ExtTree, ExtCombo Improvements: Updated ConfigurationManager default application properties file name to \"resources/application.properties\" from \"resources/appication.properties\" Used property \"selenium.screenshots.kwargs\" as parameter while capturing screen shot VER-04032011 Release Notes \u00b6 Posted on Mar 4, 2011 New Features: Added flexCall method for support to call flash/flex methods not available in client interface/implementation. Improvements: Updated BaseTestCase, moved result updater thread pool to ResultUpdator Bug Fixes: Fixed issue of null point exception in testNG group run. VER-19022011 Release Notes \u00b6 Posted on Feb 19,2011 New Features: Added ext component implementation with basic functionality for Grid Tree Combo-box Window Added support for flex api Extended selenium interface Extended selenium implementation VER-11022011 Release Notes \u00b6 Posted on Feb 11, 2011 New Features: Selenium Command Listener Ability to create and register listeners to perform before and after events while executing selenium command from command processor. Inbuilt AutoWaitInjector - auto wait listener, that can be registered to inject wait for locator before executing commands Inbuilt IEScreenshotListner - auto scroll window before capturing screen-shot. Added ajaxwait ability for phpjs toolkit VER-05022011 Release Notes \u00b6 Posted on Feb 05,2011 New Features: ExtJs utility: Classes to construct extjs container and component object using framework. Any ext component can be pointed using component class object Ajax wait: waitForAjaxToLoad() and waitForAjaxToLoad(JavaScriptToolkit) methods to support wait forajaxrequest to complete. At present supportingajaxwait for following toolkit. DOJO EXTJS JQUERY YUI PROTOTYPE Tested for extjs with example application, for other toolkit testing not done IS Automation framework UI: Settings tab Test runner can view list of property files loaded. view all properties loaded from selected file. set/update property value and load (Hot-fix property value also possible) It might be helpful when updating (Hot-fix) property value after started run for pending test. For example, started test run with initial 10000 wait timeout value which is AVG value for AUT. But found AUT much slow after some test executed and want to change wait time for remaining tests, then one can set and load property value say 20000 that will take effect immediately . VER-28012011 Release Notes \u00b6 Posted on Jan 28, 2011 New Features: IS Automation framework QMetry Integration: Scheduler filter Accepts scheduler file as argument to run script; filters test case and run tcs provided in scheduler xml file Posting run results to QMetry: for fail and pass test-cases. Parameter mapping QMetry TC ID : using one of following way (annotation has priority) QMetry annotation TC_ID value eg. @QmetryTestCase (TC_ID = \"999\") test case name with prefix TC eg TC999 maps to Qmetry TC ID 999 QMetry project, build, release, suit, platform: from scheduler xml file. QMetry instance URL, user, pwd : from application properties Supported way Executing test runner from other tools : execute batch file or ant script call bath file: seleniumToolRunner.bat <scheduler file> call ant script: ant -f seleniumtestrunner.xml -Dqmetry.schedule.file=<scheduler file> UI (Supposed): Select scheduler file IS Automation framework UI: GUI for start/stop automation run User can stop automation run at any point of time and can get report of run test-cases, not-run will marked as skipped. Integrating third party XML editor tool for configuration file editing Stop/check-status/Start selenium server from UI; (start support only for localhost) Selenium IDE code formator VER-30122010 Release Notes \u00b6 Posted on Dec 30, 2010 Improvements: Removed use of property selenium.report.dir used test.results.dir instead Provided work-around for base URL with basic authentication not working when directly open / [/ ] VER-28122010 Release Notes \u00b6 Posted on Dec 12,2010 Improvements: Bug Fixes: Fixed issue of selenium tear down with parallel data provider VER-25122010 Release Notes \u00b6 Posted on Dec 25, 2010 Improvements: Updated framework to provide report message filtering with pass, fail, info check-box with each test case result Updated reportNG with JS and CSS for the same. jar: ireportng-1.1.3.jar Updated framework to support configurable Selenium base url Now supports baseUrl property in testNG configuration file Bug Fixes: Fixed issue of opened browser when running in parallel mode with data-provider VER-Old Release Notes \u00b6 Features: Excel data provider. It will allow non Windows operating systems to use Excel spreadsheets as data file. CSV data provider support. Support to distributed server for different browse Configurable capturing screen-shot capability Parallel support Logging selenium Test Page based framework design with support of different page concepts. Record of assertion/verification messages Customized reportNg to provide tc details, assertion/verification messages and selenium command log Auto scroll while capturing screen-shot","title":"Release Notes"},{"location":"latest/release_notes/#ver-2115-release-notes","text":"#287 Updated license to MIT Deprecated RestWSTestCase use WSTestCase instead New Features Support to add third party step finder service #276 Support to locate element using extJs. Provided additional locator strategies: extDom : to locate element by ExtJS dom query extComp : to locate element by ExtJS component query #301 Format meta-data value in report #302 Enforce meta-data rules in dryrun qaf-aem-support AEM CoralUI functional test automation support. BDD2 with cucumber runner support through qaf-cucumber Enhancements Ensuring clear step mapping when populating steps mapping decreased report file name prefix max length from 50 to 45 char Moved meta data related method to MetaDataScanner Code improvement to process outline for data driven scenario without support to trigger element listener on find element command #23 Support JSON report for multiple XML suite in single run #123 Added comment for CDN. #275 - support of JQuery locator strategy to find child element #277 Support to have custom step provider class object factory Bug fixes #241 Capabilities with driverName prefix should take effect with custom driver #242 cacheble set through default element data doesn't take effect #243 Issue with Time Duration at Test Level #249 ResultUpdator not awaiting for completion When groups include/exclude used in xml configuration file #250 null pointer exception when test method from class in default package #256 Exception when feature file is empty or all statement commented #257 Scenario not parsed by Gherkin and BDD2 Factory when additional details provided after Feature Keyword #269 BDD2 - Examples - Blank/Empty data is not being executed #278 Runtime exception when test method has @Parameters annotation #300 Scenario outline in bdd2 should work without Examples keyword","title":"VER-2.1.15 Release Notes:"},{"location":"latest/release_notes/#ver-2114-release-notes","text":"New Features New bdd parser and factory - derived from QAF BDD, Jbehave and Gherkin. It supports meta-data with tags, data driven test using meta-data or example, tag support with examples BDD multi-line comment support #185 support to provider xml file for xml data provider #180 added intercepter and filter support in data-provider #177 Set proxy for specific URL(s) configuration Enahancements #231 When https.accept.all.cert property set to false, then QAF should revert the previous value in JVM #212 meta-data with parameters should get reflected with value in qaf report #184 Support to format step arguments #182 enhanced utility methods to get parameters from TestNG context #176 New annotation @PageIdentifier test-page #175 Support for selenium-support library 3+ #38 for data driven test global.datadriven.parallel and <test-case>.parallel property #226 Additional wait/assert/verify method with QAFWebElement for css style color properties to match expected and actual values as color object Bug Fixes #196 xml reference resolution in step argument #195 parameter name with numbers in step description changes the order of argument to be considered #203 sendkeys command uses encrypted password instead of decrypted version Fixed issue with findElement and findElements with type argument methods in component, moved it form QAFWebCompont to QAFExtendedWebElement #181 Fixed Step call in Gherkin data-table with single entry #131 Ability to teardown driver by name #229 Database data provider not working if query contains \"=\"","title":"VER-2.1.14 Release Notes:"},{"location":"latest/release_notes/#ver-2113-release-notes","text":"New Features #171 Support to have encripted password #168 Support to specify default webelement implementation #160 Timeout support in BDD Scenario Default element listener for password field and element scroll behavior Support of @Inject annotation in step library class Added support for custom by Enahancements #131 Ability to teardown driver by name Support to provide default element meta-data using property element.default.metadata Support to allow all certificates and ignore host name verification for web-services using property https.accept.all.cert Disabled Delimiter Parsing for xml configuration Web service request entity logging Added methods in DatabaseUtils to support multiple database Bug Fixes #169 With long bdd scenario name, not able to open captured images on windows #159 Checkpoints and command log not available in report for test case with timeout #154 Not able to override step.provider.pkg property for data driven scenario #153 result file generation for scenario name with some special characters is not working #139 Optional parameter in step #108 exclude capture screen shot for web-service failure Fixed element not found exception from isPresent called by element from component","title":"VER-2.1.13 Release Notes:"},{"location":"latest/release_notes/#ver-2112-release-notes","text":"New Features 1. #102 Adding env.resourse property per driver 2. #82 Custom Data Provider support for BDD Scenarios Enahancements 1. Added project name and project path as project.name and project.path properties Bug Fixes 1. #129 changing driver.name property doesn't take effect 1. #126 Wait for ajax throws exception dojo is not defined 2. #124 Test-NG #1480 impact on parallel execution 3. #119 Selenium 3+ causes unable to cast error 4. #106 Fixed issue of parameter having property with subnode 5. #94 parameter support in BDD meta-data for data-provider","title":"VER-2.1.12 Release Notes:"},{"location":"latest/release_notes/#ver-2111-release-notes","text":"New Features #54 Support XML node key in BDD step call where to JavaStep requires map #96 Support for Multiple Devices in one script Enahancements #73 Support to define component with locator repository #74 Data driven scenario count issue in case of verification failure #91 Support for Rest Client Factory #92 TestNG version upgrade to 6.10 Bug Fixes #66 dependsOnMethods not working for BDD scenarios #69 Getting Error \"Error communicating with the remote browser. It may have died.\" #70 Unable to capture screenshot for IE driver #75 Duplicate result file for data driven testcase","title":"VER-2.1.11 Release Notes:"},{"location":"latest/release_notes/#ver-2110-release-notes","text":"New Features #14 support for bdd, kwd dry-run mode Enahancements #45 Support to set class-finder for TestStepFinder #52 allowed space in path for step provider classes Bug Fixes #40 TestStep executed from the wrong package #41 Gherkin parser does does not include last step in scenario #42 Unable to load step from the class extending another class #50 Step reporting broken in when test authored in java #53 Solved ClassCastException in fillData","title":"VER-2.1.10 Release Notes:"},{"location":"latest/release_notes/#ver-219-release-notes","text":"New Features #11 TestNG 6.9.10 support #28 Gherkin for test authoring #29 Driver initialize failure method in driver listener #30 Introduce new property qaf.listeners to register any of qaf listener #19 scenario object access in test-step listener #31 FormDataBean Custom Component support #32 New property step.provider.sharedinstance to allow class variable sharing among steps in same class. Default is false. #36 New step creation code snippet when step not found #37 new property driver.init.retry.timeout to retry on driver initialization failure #10 Support for xml for test-authoring Support to third party java step annotation (for example cucumber Given/When/Then instead of QAFTestStep) Added new driver name perfecto can be used in driver.name value as perfectoDriver or perfectoRemoteDriver Enahancements #17 passing params in deployResult instead of scenario.getMetadata() #20 support to provide .xml or .loc file location as resources QAF BDD background support Private method (with step annotation or Step provider annotation at class level) will be excluded from step mapping Utility method in UIDriverFectory to get capability that will be used by factory to create driver object. Updates releated to selenium 3 and Removed seleniumExceptions to make code work without selenium-leg dependency with selenium 3. Bug Fixes #18 Fixed infinite loop issue with retry.count Fixed issue of not scanning steps from all step provider package. Improved step finder. Depricated/Removed features Moved cucumber package in seperate QAF-Cucumber project.","title":"VER-2.1.9 Release Notes:"},{"location":"latest/release_notes/#ver-218-release-notes","text":"New Features: Refactored package from com.infostretch to com.qmetry.qaf","title":"VER-2.1.8 Release Notes:"},{"location":"latest/release_notes/#ver-217b-release-notes","text":"New Features: Test step threshold support at step level Inbuilt step to start and stop time tracking with threshold Test step duration and threshold recording in json report Command execution duration recording in json report test step result as warning when one or more warning in sub steps non-java custom step definition updates custom step definition to have parameter names instead of index, for ex: instead of bdl step def : \"login with {0} and {1}\" user can define as \"login with {username} and {password}\" Supported to access map and array argument in step call within custom step. Removed web driver response status from command log for web driver command result Retry analyzer support for data-driven test Introduced new property 'retry.analyzer' : Provide this property to use your custom retry analyzer Added support to provide license file for license property list value passed as system property Specified default driver \"firefoxDriver\" if driver property not provided, with console message Added support to specify individual capability with \"driver.capabilities\" prefix for all driver Enhanced step exceptions handling Enhanced verify/assert for text/attribute/value to have proper message if timeout with element not present Added support to have BDD Keyword Synonyms Added support to scan bdd,kwd and excel file with step provider package to load non java steps Support of TestStep meta-data by using MetaData annotation at method level or at class level. Step Provider Package order and priority.Last package in list has highest priority. Underlying configuration of property util from property configuration to xml configuration For Test Step string argument , Single quote (') or Double quote (\") is now compulsory Updated cucumber formatter Deprecated \"driver.class\" use instead \"driverClass\" Bug Fixes: ISFW-148 - Same Scenario name overwrites <test_case_name>.json file in report. ISFW-150 - Run Configuration Include / Exclude not working properly. QAF Reporter: Report Enhancements/Improvements Test step duration indication in checkpoints and subcheckpoints BarChart for Test step threshold and duration Actual summary time at scenario level Added duration in command log Added Different Exception type as Error Analysis Added rerun count Added retry icon at scenario level Well formatted Command Logs and Error Trace","title":"VER-2.1.7b Release Notes:"},{"location":"latest/release_notes/#ver-216b-release-notes","text":"New Features: custom meta-data support in json report Test management tool integration support for QMetry 6 Randomized data selection for the data driven test cases Introduced new property 'bean.populate.random' Generate failed test cases incase of bdd Added property change listener to handle driver, resources, step provider package changes on the fly. Renamed few of properties related to driver. selenium.defaultBrowser\u2192driver.name selenium.server\u2192remote.server selenium.port\u2192remote.port removed setup method from WebDriverTestBase class for Test Step string argument , Single quote (') or Double quote (\") is now compulsory Renamed Attritube to Attribute for following methods verifyAttritube \u2192 verifyAttribute verifyNotAttritube \u2192 verifyNotAttribute waitForNotAttritube \u2192 waitForNotAttribute waitForAttritube \u2192 waitForAttribute assertAttritube \u2192 assertAttribute assertNotAttritube \u2192 assertNotAttribute QAF Reporter: Report Enhancements/Improvements Custom meta-data display in report Report backward support Bug Fixes: ISFWR-46 - QAS report Order by \"Name\" not working Properly.","title":"VER-2.1.6b Release Notes:"},{"location":"latest/release_notes/#ver-215-release-notes","text":"New Features: Custom meta-data filter support using include and exclude parameters Typo correction in 'assertNotText' Enable Perfecto Command logs same as selenium logs Test management tool integration support for QMetry Bug Fixes: ISFW-113 - BDD Empty Scenario must run without any error. ISFW-115 - Screenshot not capture on failure case. ISFW-117 - wrong exception display on failure of assert. ISFW-119 - driver.executeScript throws java.lang.NullPointerException. ISFW-116 - Unexpected behaviour while QAFTestStep defined at interface level and implemented interface in class. QAF Reporter Report Enhancements/Improvements Bug Fixes ISFWR-43 - Wrong PassRate percentage in report.","title":"VER-2.1.5 Release Notes:"},{"location":"latest/release_notes/#ver-214-release-notes","text":"New Features: Fetch all data of DataProvider Performance Enhancements Step exception handling, line number and bdd file name in stacktrace. TestCase marked as skip in-case of TestStep not found or BDD parsing issue. Provision in StepInvocation listener to have step type, step index and also to set next step index from listener. Report to have , not run step in case of TestCase fail or skip. BDD test steps call are now case-insensitive. Bug Fixes: ISFW-148 - Same Scenario name overwrites <test_case_name>.json file in report. QAF Reporter: ISFWR-35 - TrendChart showing incorrect execution count.","title":"VER-2.1.4 Release Notes:"},{"location":"latest/release_notes/#ver-213-release-notes","text":"Supported selenium-server version 2.41 or above New Features: Supported jre 1.6 or above (1.8 will now supported with updated base data bean) Compatibility Perfecto mobile Continue to selenium 1 support Added support for custom locator strategy especially to support custom strategy by appium Added support for getting underlaying driver Test Management Tool Integration Support for BDD and KWD. Appium 1.7 version support Test Step Library BDL and KWL Bug Fixes: ISFW-126 - Wrong testcase count in report. ISFW-105 - BDD/KWD data-driven test data map as Parameter not working. ISFW-99 - With perfacto driver, actual capabilities are not available in Report. ISFW-100 - verification/ assertions with perfecto QASMobileElement is not working. ISFW-101 - Custom locator startegy always taking xpath. ISFW-102 - StepProvider Package for parellel execution not working. ISFW-95 - Typo of method name for assert. ISFW-93 - QAS report showing invalid checkpoints for Java Arguments. QAF Reporter: Enhancements: Combine checkpoint and overview tab. Auto refresh button redesign. Add legend in trend chart related to pass, skip, and fail test cases. Indication for expandable step in checkpoints tab. Navigate to particular execution from trend-chart. Add tool tip for count of pass, fail, skip test cases in trends-chart. Execution number on sidebar in reports. Add label for Number of Test Cases in trends-chart.(Y-Axis) Bug Fixes: ISFWR-33 - method results are not expanding in report.","title":"VER-2.1.3 Release Notes:"},{"location":"latest/release_notes/#ver-212-release-notes","text":"Supported selenium-server version min 2.34 New Features: ISFW-51: multiple step provider packages. ISFW-54 Added support for data-bean field value list (list or key) to pick random value ISFW-45 Alternate/multiple locator support ISFW-43: Support for override property from xml configuration in web-service testing ISFW-49: JQuery Locator support Added waitForAjaxToLoad with IsExtendedWebDriver. Test step BDD client - Behavior driven support Test step listener support Property file with .loc extension Cucumber with ISFW (Web application functional Android/IPhone native and Rest web service automation) Validation Support Reporting check points in default cucumber report(s) ISFW reporter support Parameter support in cucumber feature file step call arguments Bug Fixes: seleniumEquals Null Pointer exception. ISFW-57: VerifyPresent is not working in case of nested child component ISFW-47: Wrong Description in report Deprecated Feature JSONUtil.toMap method Modifications Following properties modified/added Original property name|New Property name load.locale|env.load.locale default.locales|env.default.locales teststep.listeners ISFW Reporter New Features Attached deffect tracker with report. Bug Fixes ISFW-55 Not Able to get Test Case Summary in ISFW New Report Not displaying method result if args not provided in method meta-info.json","title":"VER-2.1.2 Release Notes:"},{"location":"latest/release_notes/#ver-211-release-notes","text":"New Features: Supported selenium-server version min 2.22.0 max 2.32.0 and upto 2.34 Pro: Added ISFW build information and environment information in report under test overview section. Pro: Added CSV step client Pro: Added group, soft dependency, ordering support for CSV/Excel scenario Pro: Added predefined steps working with web element object Pro: Added rest web service testing support Added Validator class to provide assertion/verification methods that supports hamcrest matchers Added onInitialize method in web driver command listener Improvements: Updated QMetry client Removed feature of automatic starting selenium server. Renamed properties: selenium.browser.url - > env.baseurl test.props.dir -> env.resources app.autolaod.test.prop -> resources.load.subdirs selenium.server.start.command -> discontinued Package restructured and renamed some classes, please refer Upgrade notes. Screen Shots {% include inline_image.html file=\"TestStep_clients.png\" %} {% include inline_image.html file=\"Report_overview.png\" %} {% include inline_image.html file=\"Report_env.png\" %} {% include inline_image.html file=\"Report_details.png\" %}","title":"VER-2.1.1 Release Notes:"},{"location":"latest/release_notes/#ver-210-release-notes","text":"Improvements: Renamed properties: driver.extra.capabilities to driver.additional.capabilities driver.extra.capabilities to driver.additional.capabilities Package restructured and code clean up: Removed \"com.qmetry.qaf.automation.webdriver.custom\" package holding sample custom component. Removed class/pacakage from selenium community (org.**). Removed deprecated methods:** /** * key:test.selenium.report.dir <br/> * value: dir to place generated result files * * @Deprecated: use {@link #REPORT_DIR} instead */ @Deprecated SEL_REPORT_DIR ( \"selenium.report.dir\" ), ISWebDriverBackedSelenium: /** * @deprecated Use {@link #getWrappedDriver()} instead. */ @Deprecated public IsExtendedWebDriver getUnderlyingWebDriver () { return getWrappedDriver (); } Base test case: /** * blank implementation need to override this method to provide before * individual test specific implementation Override beforeTest method for * before test implementation if you are configuring parallel methods * instead of method with @beforeTest annotation * * @deprecated use @beforeMethod instead * @param stb * @param m */ @Deprecated protected void beforeTest ( SeleneseTestBase stb , Method m ) { } /** * blank implementation need to override this method to provide before each * test specific implementation * * @deprecated use @beforeMethod instead * @param stb */ @Deprecated protected void beforeTest ( SeleneseTestBase stb ) { } PropertyUtil: /** * @deprecated use {@link #getString(String, String)} instead * @param sPropertyName * @param def * @return */ @Deprecated public String getProperty ( String sPropertyName , String def ) { return getString ( sPropertyName , def ); } /** * @param sPropertyName * @return default value is key itself */ public String getPropertyValue ( String key ) { return this . getString ( key , key ); } /** * @deprecated use {@link #getInt(String)} instead * @param sPropertyName * @return */ @Deprecated public int getPropertyIntValue ( String sPropertyName ) { return getInt ( sPropertyName , 0 ); } /** * @deprecated use {@link #getInt(String, int)} instead * @param sPropertyName * @param defaultVal * @return */ @Deprecated public int getPropertyIntValue ( String sPropertyName , int defaultVal ) { return getInt ( sPropertyName , defaultVal ); } /** * @deprecated use {@link #getString(String,String)} instead * @param sPropertyName * @param def * @return */ @Deprecated public String getPropertyValue ( String sPropertyName , String def ) { return getString ( sPropertyName , def ); } ConfigurationManager: /** * @deprecated Use {@link ConfigurationManager#getBundle()} instead * @return */ @Deprecated public PropertyUtil getApplicationProperties () { return getBundle (); }","title":"VER-2.1.0 Release Notes:"},{"location":"latest/release_notes/#ver-2_0-b09-release-notes","text":"Improvements: Compatibility for chrome driver with server version above or below 2.22 (latest till the date is 2.33) Changed the way of providing extra capabilities from csv to json for example chrome.extra.capabilities = {\"platform\"=\"ANY\",\"cssSelectorsEnabled\"=true,\"chrome.switches\":[\"--ignore-certificate-errors\",\"--user-data-dir=F:\\chirag\\projects\\STFWs\\ISFWTestStepDemoProject\\chromeprofile\"]}","title":"VER-2_0-b09 Release Notes:"},{"location":"latest/release_notes/#ver-2_0-b08-release-notes","text":"New Features: Added support localization of xml file. To create xml file for specific local provide local ext after .xml for example testdata.xml.en Added test step feature: Step Feature: ISFW will provide a mechanism to specify any method as test step by annotating the method with @IsTestStep . Furthermore methods in class specified as step provider by annotating the class with@IsTestStepProvider. Also we have provided provision to supply step description so that it can be reported in report. public class SampleClass { @IsTestStep ( description = \"do the needful with {0}\" ) public static void testStep ( String s ) { System . out . println ( \"testStep invoked!.....\" + s ); } @IsTestStep ( description = \"do the needful\" ) public void testStep2 () { System . out . println ( \"testStep without args invoked!.....\" ); } } @IsTestStepProvider public class SampleStepProvider { public void step () { System . out . println ( \"step invoked!.....\" ); } public void anotherStep () { System . out . println ( \"anotherStep invoked!.....\" ); } } Added Step client for Excel Bug Fixes: Fixed issue of overriding resources from config file by providing resource file(s)/dir(s)","title":"VER-2_0-b08 Release Notes"},{"location":"latest/release_notes/#ver-2_0-b07-release-notes","text":"New Features: Json based reporting support , you need to copy dashboard.htm and jquery directory. Added service entry to register testNG listener. Now you don't require to register testng listener of ISFW. Please remove \"com.qmetry.qaf.automation.testng.IsTestNGListener\" entry from the listener entries in existing build files. Added support to directly provide remote webdriver url in case it is not in standard remote webdriver format. ie http:// : /wd/hub. In case the remote wd url is different then the defult pattern then insted of providing server and port just provide actual url as value of server property. For example: http://14.97.73.4:7777/wd/ Added support/compatibility with selenium 2.25 and later for using running browser session Bug Fixes: Fixed issue of finding element within component.","title":"VER-2_0-b07 Release Notes:"},{"location":"latest/release_notes/#ver-2_0-b06-release-notes","text":"New Features: Added String matcher and additional wait/assert/verify methods for element text and value with String matcher argument example: import static com.qmetry.qaf.automation.util.StringMatcher.containsIgnoringCase ele . verifyText ( containsIgnoringCase ( \"partial text\" )); ele . verifyText ( exact ( \"text\" )); ele . verifyText ( startsWith ( \"prefix\" )); ele . verifyText ( startsWithIgnoringCase ( \"prefix\" )); ele . verifyText ( like ( \"valid regular expr\" )); ele . verifyText ( likeIgnoringCase ( \"valid regular expr\" )); {% include note.html content='ele.verifyText(\"text\") is equivalent to ele.verifyText(exactIgnoringCase (\"text\"))' %} Added Support to provide wait time for wait methods. example: ele . waitForText ( containsIgnoringCase ( \"partial text\" )); //default timeout and interval ele . waitForText ( containsIgnoringCase ( \"partial text\" ), 5000 ); //with timeout 5000 ms and default interval ele . waitForText ( containsIgnoringCase ( \"partial text\" ), 5000 , 100 ); //with timeout 5000 ms and interval 100ms Added support for xml data provider @IsDataProvider ( key = \"test.set\" ) @Test public void xmlDPTest ( String p1 , String p2 , String p3 ) { System . out . printf ( \"data - p1:[%s] p2:[%s] p3:[%s]\" , p1 , p2 , p3 ); } @IsDataProvider ( key = \"test.set\" ) @Test public void xmlDPTest ( Map < String , String > data ) { System . out . println ( \"data - \" + data ); } below is the content of data file <testdata> <test> <set> <val1> aaa </val1> <val2> bbb </val2> <val3> ccc </val3> </set> <set> <val1> xxx </val1> <val2> yyy </val2> <val3> zzz </val3> </set> <set> <val1> 111 </val1> <val2> 222 </val2> <val3> 333 </val3> </set> </test> </testdata> * Added support for xml property configuration Added locale support Any locale or env specific data can be stored in properties file with extension of the locale or env. It can be retrieved by getting subset. We need to specify which locales we want to initialize by setting following property #all the locales that can be used load.locales = zh_CN;hi above setting will load properties from *.zh_CN *.hi files To access hi locale properties ConfigurationManager . getBundle (). subset ( \"hi\" ). getString ( \"test.prop\" ); props . subset ( \"hi\" ). getString ( \"test.prop\" ); props . subset ( \"zh_CN\" ). getString ( \"test.prop\" ); There is a provision of setting default locale by providing default.locale In that case if multiple locale loaded and want to use prop from default locale then don't require to use subset. For example: load.locales = zh_CN;hi default.locale = hi Then use properties directly for hi locale: props . getString ( \"test.prop\" ); For zh_CN: props . subset ( \"zh_CN\" ). getString ( \"test.prop\" ) {% include note.html content=\" in this case where 'hi' is set to default. props.subset('hi').getString('test.prop'); will not work as 'hi' locale is default locale so will be added to main configuration.\" %} Default encoding for reading locale properties is UTF-8 that can be change by providing system/application property \"locale.char.encoding\" Added component class and support to find component from parent element. public class TestComponent extends Component { public TestComponent ( String locator ) { super ( locator ); } .... } TestComponent comp = ele . findElement ( \"css=a\" , TestComponent . class ); List < TestComponent > testComponents = ele . findElements ( \"css=.pass\" , TestComponent . class ); Added support to link java doc with test description in report. To enable set property 'report.javadoc.link=true' to set docs dir path set property javadoc.folderpath default is \"../../../docs/tests/\" to customize link set report.javadoc.link.format default value is <a href=\"%s\" target=\"_blank\">[View-doc]</a> Added support to pass parameter in locator string. For exmple in locator xpath=//@*/[name()=' wl:trnslate'][.='${foo.bar}']//.. {foo.bar} will be replaced with the value of property \"foo.bar\". Assuming value is xxx then the locator will become xpath=//@*[name()='.. Same way link= {foo.bar} will be replaced with the value of property \"foo.bar\". Assuming value is xxx then the locator will become xpath=//@*[name()='.. Same way link= will become link=xxx It supports multiple parameters as well as same parameter multiple times. Added QC support - refer QC integration doc Support for JSON file to provide test data. Test method should expect Map. Added support to use map as parameter for data-driven test where db is used to provide data. column name/alise will be key and column value will be value. Added support to use existing driver session Following are the steps: Webdriver session can be created through http://localhost:4444/wd/hub/static/resource/hub.html . After starting session you can perform manual steps on the browser! You need to use only appropriate remote driver for this purpose. (e.g. firefoxRemoteDriver) You need to provide session id by setting driver extra capability webdriver.remote.session or a property webdriver.remote.session . The session id can <driver>.extra.capabilities=webdriver.remote.session=<session id> or webdriver.remote.session=<session id> Introduced page launch strategy so that one can define the page launch behavior from one of the following always launch from parent always launch from root launch page only if required (default) Added support for retry command through command tracker so that in on failure we can set retry to true and give it to one more try. Added support for self-descriptive web element: For self descriptive locator you can provide json string with key \"desc\". See below example of normal and self descriptive element locator. String LOGOUT_LINK_LOC = \"{'locator':'link=Logout','desc'='Logout link'}\" ; String LOGOUT_LINK_LOC = \"{'locator':'key=loc.properyname.in.property.file','desc'='Logout link'}\" ; //self descriptive the element description is available by ele.getDescription(). Also it will be used in different assertion/verification messages automatically by the fw. Added support for fill string in given format for bean property. Added randomize parameter format which can be used to provide format of the value. It will work only with String properties of bean. Sample format 999-999-99 aaa-a9a-99 99.99.aa alphabet will replaced random alphabet and digit will replaced with random digit Added safari driver support. required selenium server 2.21 or latest Added support for Date property in data bean. Fill random data will generate random date for day range min-max to current date Added new FindBy Annotation so you can find element by selenium-1 locator strategy Added order parameter in UiElement annotation. This can be used to set order of bean properties for fillUiElement. Support to override any property using testng config or system property. Priority will be system property, xml config, property file. Additional flag \"selenium.failure.screenshots\" to skip screen-shot for each failure and to have single screen-shot in case of failure. Added support for providing extra capability through property. For all driver set property \"driver.extra.capabilities\" For specific driver set property \"<driver>.extra.capabilities\" Example: driver.extra.capabilities = acceptSslCerts=false;platform=WINDOWS chrome.extra.capabilities = acceptSslCerts=true;chrome.switches=[--ignore- certificate-errors] chrome.extra.capabilities = acceptSslCerts=true;chrome.switches=[-- ignore-certificate-errors, --sample-other-switch] -added support for otherDriver or otherRemoteDriver For that you must need to set property \"other.extra.capabilities\". In case of otherDriver (not remote driver) you must need to provide driver class as capability : \"driver.class\", Example : other remote driver other.extra.capabilities = platform=ANY;browserName=safari other driver other.extra.capabilities = driver.class=org.openqa.selenium.safari.SafariDriver Added new form data bean and UiElement annotation Support to java script expr for dependent value match in form data bean Added support to use map as parameter for data-driven test, first row will be treated as header row header column will considered as key. Added support to populate bean from map having bean properties as keys Added skip parameter in Randomizer annotation Data bean random data generation: Added support for min and max value Improvements: Updated properties util, derived from PropertiesConfiguration [dependency of commons-configuration.jar] Updated data-provider functionality Updated data driven functionality added new annotation IsDataProvider added listener IsAnnotationTransformer Properties: For test data: <tc>.testdata=<param>=value;<param>=value globle. <param> are one of the parameter of IsDataProvider (dataFile, sheetName,hasHeaderRow,labelName,sqlQuery) Discontinue to support property CMD_EXECUTION_INTERVAL (key:commands.execution.interval) to Set execution interval between two selenium commands. Bug Fixes: Fix for IllegalAccessException while filling random data in non public variables Fixed issue of varification failed test considered as pass with testng 6.","title":"VER-2_0-b06 Release Notes"},{"location":"latest/release_notes/#ver-2_0-b05-release-notes","text":"New Features: Added support to provide application.properties file by setting system property application.properties.file. Added support to provide read test.props.dir from system property if exist. Improvements: Separated UI code as ISFW-UI project Updated to search server jar in all folders in project if selenium server is not started Updated QMetry integration to support new Scheduler xml and web-service added support for filter by script name, runid added support for multiple script name, tc id, run id Separated Qmetry integration from ISFW base test case and provided Bug Fixes: Fixed issue of execution fail if application.properties file not found.","title":"VER-2_0-b05 Release Notes"},{"location":"latest/release_notes/#ver-2_0-b04-release-notes","text":"New Features: Added setAttribute custom command Improvements: Updated excel data provider","title":"VER-2_0-b04 Release Notes"},{"location":"latest/release_notes/#ver-31072011-release-notes","text":"Posted on July 5, 2011 New Features: Added new feature to set interval between two commands by setting property Added capture screen shot support for remote web-driver Added Web-driver support","title":"VER-31072011 Release Notes"},{"location":"latest/release_notes/#ver-05042011-release-notes","text":"Posted on Apr 5, 2011 New Features: Added ClipBoardUtil ImageCompareUtil (requires JAI dependency jars ) Tage: extjs Support for Extjs component model For example purpose inbuilt basic implementation for ExtGrid, ExtTree, ExtCombo Improvements: Updated ConfigurationManager default application properties file name to \"resources/application.properties\" from \"resources/appication.properties\" Used property \"selenium.screenshots.kwargs\" as parameter while capturing screen shot","title":"VER-05042011 Release Notes"},{"location":"latest/release_notes/#ver-04032011-release-notes","text":"Posted on Mar 4, 2011 New Features: Added flexCall method for support to call flash/flex methods not available in client interface/implementation. Improvements: Updated BaseTestCase, moved result updater thread pool to ResultUpdator Bug Fixes: Fixed issue of null point exception in testNG group run.","title":"VER-04032011 Release Notes"},{"location":"latest/release_notes/#ver-19022011-release-notes","text":"Posted on Feb 19,2011 New Features: Added ext component implementation with basic functionality for Grid Tree Combo-box Window Added support for flex api Extended selenium interface Extended selenium implementation","title":"VER-19022011 Release Notes"},{"location":"latest/release_notes/#ver-11022011-release-notes","text":"Posted on Feb 11, 2011 New Features: Selenium Command Listener Ability to create and register listeners to perform before and after events while executing selenium command from command processor. Inbuilt AutoWaitInjector - auto wait listener, that can be registered to inject wait for locator before executing commands Inbuilt IEScreenshotListner - auto scroll window before capturing screen-shot. Added ajaxwait ability for phpjs toolkit","title":"VER-11022011 Release Notes"},{"location":"latest/release_notes/#ver-05022011-release-notes","text":"Posted on Feb 05,2011 New Features: ExtJs utility: Classes to construct extjs container and component object using framework. Any ext component can be pointed using component class object Ajax wait: waitForAjaxToLoad() and waitForAjaxToLoad(JavaScriptToolkit) methods to support wait forajaxrequest to complete. At present supportingajaxwait for following toolkit. DOJO EXTJS JQUERY YUI PROTOTYPE Tested for extjs with example application, for other toolkit testing not done IS Automation framework UI: Settings tab Test runner can view list of property files loaded. view all properties loaded from selected file. set/update property value and load (Hot-fix property value also possible) It might be helpful when updating (Hot-fix) property value after started run for pending test. For example, started test run with initial 10000 wait timeout value which is AVG value for AUT. But found AUT much slow after some test executed and want to change wait time for remaining tests, then one can set and load property value say 20000 that will take effect immediately .","title":"VER-05022011 Release Notes"},{"location":"latest/release_notes/#ver-28012011-release-notes","text":"Posted on Jan 28, 2011 New Features: IS Automation framework QMetry Integration: Scheduler filter Accepts scheduler file as argument to run script; filters test case and run tcs provided in scheduler xml file Posting run results to QMetry: for fail and pass test-cases. Parameter mapping QMetry TC ID : using one of following way (annotation has priority) QMetry annotation TC_ID value eg. @QmetryTestCase (TC_ID = \"999\") test case name with prefix TC eg TC999 maps to Qmetry TC ID 999 QMetry project, build, release, suit, platform: from scheduler xml file. QMetry instance URL, user, pwd : from application properties Supported way Executing test runner from other tools : execute batch file or ant script call bath file: seleniumToolRunner.bat <scheduler file> call ant script: ant -f seleniumtestrunner.xml -Dqmetry.schedule.file=<scheduler file> UI (Supposed): Select scheduler file IS Automation framework UI: GUI for start/stop automation run User can stop automation run at any point of time and can get report of run test-cases, not-run will marked as skipped. Integrating third party XML editor tool for configuration file editing Stop/check-status/Start selenium server from UI; (start support only for localhost) Selenium IDE code formator","title":"VER-28012011 Release Notes"},{"location":"latest/release_notes/#ver-30122010-release-notes","text":"Posted on Dec 30, 2010 Improvements: Removed use of property selenium.report.dir used test.results.dir instead Provided work-around for base URL with basic authentication not working when directly open / [/ ]","title":"VER-30122010 Release Notes"},{"location":"latest/release_notes/#ver-28122010-release-notes","text":"Posted on Dec 12,2010 Improvements: Bug Fixes: Fixed issue of selenium tear down with parallel data provider","title":"VER-28122010 Release Notes"},{"location":"latest/release_notes/#ver-25122010-release-notes","text":"Posted on Dec 25, 2010 Improvements: Updated framework to provide report message filtering with pass, fail, info check-box with each test case result Updated reportNG with JS and CSS for the same. jar: ireportng-1.1.3.jar Updated framework to support configurable Selenium base url Now supports baseUrl property in testNG configuration file Bug Fixes: Fixed issue of opened browser when running in parallel mode with data-provider","title":"VER-25122010 Release Notes"},{"location":"latest/release_notes/#ver-old-release-notes","text":"Features: Excel data provider. It will allow non Windows operating systems to use Excel spreadsheets as data file. CSV data provider support. Support to distributed server for different browse Configurable capturing screen-shot capability Parallel support Logging selenium Test Page based framework design with support of different page concepts. Record of assertion/verification messages Customized reportNg to provide tc details, assertion/verification messages and selenium command log Auto scroll while capturing screen-shot","title":"VER-Old Release Notes"},{"location":"latest/release_notes2_1_7/","text":"New Features \u00b6 custom meta-data support in json report Test step threshold support at step level Inbuilt step to start and stop time tracking with threshold Test step duration and threshold recording in json report Command execution duration recording in json report license validation any of the MAC address against licenseto addresses test step result as warning when one or more warning in sub steps non-java custom step definition updates custom step definition to have parameter names instead of index for ex: instead of bdl step def : \"login with {0} and {1}\" user can define as \"login with {username} and {password}\" Supported to access map and array argument in step call within custom step. Removed web driver response status from command log for web driver command result Retry analyzer support for data-driven test Introduced new property 'retry.analyzer' : Provide this property to use your custom retry analyzer Added support to provide license file for license property list value passed as system property Specified default driver \"firefoxDriver\" if driver property not provided, with console message Added support to specify individual capability with \"driver.capabilities\" prefix for all driver Enhanced step exceptions handling Enhanced verify/assert for text/attribute/value to have proper message if timeout with element not present Added support to have BDD Keyword Synonyms Added support to scan bdd,kwd and excel file with step provider package to load non java steps Support of TestStep meta-data by using MetaData annotation at method level or at class level. Step Provider Package order and priority.Last package in list has highest priority. Underlying configuration of property util from property configuration to xml configuration For Test Step string argument , Single quote (') or Double quote (\") is now compulsory Updated cucumber formatter Deprecated \"driver.class\" use instead \"driverClass\" Bug Fixes \u00b6 JIRA project doesn't exist or you don't have permission to view it. ISFW-148 JIRA project doesn't exist or you don't have permission to view it. ISFW-150 QAF Reporter \u00b6 Report Enhancements/Improvements Test step duration indication in checkpoints and subcheckpoints BarChart for Test step threshold and duration Actual summary time at scenario level Added duration in command log Added Different Exception type as Error Analysis Added rerun count Added retry icon at scenario level Well formatted Command Logs and Error Trace","title":"QAF-2.1.7b Release Notes"},{"location":"latest/release_notes2_1_7/#new-features","text":"custom meta-data support in json report Test step threshold support at step level Inbuilt step to start and stop time tracking with threshold Test step duration and threshold recording in json report Command execution duration recording in json report license validation any of the MAC address against licenseto addresses test step result as warning when one or more warning in sub steps non-java custom step definition updates custom step definition to have parameter names instead of index for ex: instead of bdl step def : \"login with {0} and {1}\" user can define as \"login with {username} and {password}\" Supported to access map and array argument in step call within custom step. Removed web driver response status from command log for web driver command result Retry analyzer support for data-driven test Introduced new property 'retry.analyzer' : Provide this property to use your custom retry analyzer Added support to provide license file for license property list value passed as system property Specified default driver \"firefoxDriver\" if driver property not provided, with console message Added support to specify individual capability with \"driver.capabilities\" prefix for all driver Enhanced step exceptions handling Enhanced verify/assert for text/attribute/value to have proper message if timeout with element not present Added support to have BDD Keyword Synonyms Added support to scan bdd,kwd and excel file with step provider package to load non java steps Support of TestStep meta-data by using MetaData annotation at method level or at class level. Step Provider Package order and priority.Last package in list has highest priority. Underlying configuration of property util from property configuration to xml configuration For Test Step string argument , Single quote (') or Double quote (\") is now compulsory Updated cucumber formatter Deprecated \"driver.class\" use instead \"driverClass\"","title":"New Features"},{"location":"latest/release_notes2_1_7/#bug-fixes","text":"JIRA project doesn't exist or you don't have permission to view it. ISFW-148 JIRA project doesn't exist or you don't have permission to view it. ISFW-150","title":"Bug Fixes"},{"location":"latest/release_notes2_1_7/#qaf-reporter","text":"Report Enhancements/Improvements Test step duration indication in checkpoints and subcheckpoints BarChart for Test step threshold and duration Actual summary time at scenario level Added duration in command log Added Different Exception type as Error Analysis Added rerun count Added retry icon at scenario level Well formatted Command Logs and Error Trace","title":"QAF Reporter"},{"location":"latest/resource_management/","text":"Resource management \u00b6 Managing Locales Managing resources for Different Environments","title":"Resource management"},{"location":"latest/resource_management/#resource-management","text":"Managing Locales Managing resources for Different Environments","title":"Resource management"},{"location":"latest/scenario/","text":"Scenario consist of meta-data and sequence of steps to represents a single test case. Each step can be started with standard BDD keywords. List of available keywords. \u00b6 Below are available keywords taht can be used as prefix while calling step in bdd. You can define your own by providing keyword synonym keywords Given When Then And Having Structure \u00b6 Scenario: <Name of the Scenario> Meta-data: {<meta-key>:<meta-value>[,<meta-key>:<meta-value>]} [Keyword] <first step description with parameters> \u2026 [Keyword] <nth step description> End Want to iterate with set of test data from file? You got it with data-driven Scenario. References \u00b6 meta-data make-test-data-driven comment in BDD Data-driven Scenario \u00b6 You can iterate your scenario with set of test data. Refer make test data driven , any of the @QAFDataProvider property you can set as meta-data. Below example demonstrates data-driven feature SCENARIO: Data-driven Example META-DATA: {\"dataFile\":\"resources/data/testdata.csv\",\"description\":\"Data driven test that uses csv file to provide data\"} Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' END Below is csv data file and first row is column names. testdata.csv fruit,color grapes,green banana,yellow If you want to use custom TestNG data provider, you need to provide data provider name and class in meta-data. SCENARIO: Custom Data provider Example META-DATA: {\"dataProvider\":\"my-custom-dp\", \"dataProviderClass\":\"my.project.impl.CustomDataProvider\",\"description\":\"Data driven test that uses custom data provider\"} Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' END package my.project.impl ; import java.util.Map ; import org.testng.annotations.DataProvider ; import org.testng.collections.Maps ; /** * @author chirag.jayswal * */ public class CustomDataProvider { @DataProvider ( name = \"my-custom-dp\" ) public static Object [][] dataProviderForBDD (){ Map < Object , Object > rec1 = Maps . newHashMap (); m . put ( \"fruit\" , \"grapes\" ); m . put ( \"color\" , \"green\" ); Map < Object , Object > rec2 = Maps . newHashMap (); m . put ( \"fruit\" , \"banana\" ); m . put ( \"color\" , \"yellow\" ); return new Object [][] { % raw % }{{ rec1 },{ rec2 }}{ % endraw % } ; } }","title":"Scenario"},{"location":"latest/scenario/#list-of-available-keywords","text":"Below are available keywords taht can be used as prefix while calling step in bdd. You can define your own by providing keyword synonym keywords Given When Then And Having","title":"List of available keywords."},{"location":"latest/scenario/#structure","text":"Scenario: <Name of the Scenario> Meta-data: {<meta-key>:<meta-value>[,<meta-key>:<meta-value>]} [Keyword] <first step description with parameters> \u2026 [Keyword] <nth step description> End Want to iterate with set of test data from file? You got it with data-driven Scenario.","title":"Structure"},{"location":"latest/scenario/#references","text":"meta-data make-test-data-driven comment in BDD","title":"References"},{"location":"latest/scenario/#data-driven-scenario","text":"You can iterate your scenario with set of test data. Refer make test data driven , any of the @QAFDataProvider property you can set as meta-data. Below example demonstrates data-driven feature SCENARIO: Data-driven Example META-DATA: {\"dataFile\":\"resources/data/testdata.csv\",\"description\":\"Data driven test that uses csv file to provide data\"} Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' END Below is csv data file and first row is column names. testdata.csv fruit,color grapes,green banana,yellow If you want to use custom TestNG data provider, you need to provide data provider name and class in meta-data. SCENARIO: Custom Data provider Example META-DATA: {\"dataProvider\":\"my-custom-dp\", \"dataProviderClass\":\"my.project.impl.CustomDataProvider\",\"description\":\"Data driven test that uses custom data provider\"} Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' END package my.project.impl ; import java.util.Map ; import org.testng.annotations.DataProvider ; import org.testng.collections.Maps ; /** * @author chirag.jayswal * */ public class CustomDataProvider { @DataProvider ( name = \"my-custom-dp\" ) public static Object [][] dataProviderForBDD (){ Map < Object , Object > rec1 = Maps . newHashMap (); m . put ( \"fruit\" , \"grapes\" ); m . put ( \"color\" , \"green\" ); Map < Object , Object > rec2 = Maps . newHashMap (); m . put ( \"fruit\" , \"banana\" ); m . put ( \"color\" , \"yellow\" ); return new Object [][] { % raw % }{{ rec1 },{ rec2 }}{ % endraw % } ; } }","title":"Data-driven Scenario"},{"location":"latest/scenario_metadatata_filter_include_exclude_prop/","text":"There are 2 properties to filter scenario/test cases using meta-data , which is written in bdd or kwd or java. include exclude You can filter scenario using include-exclude property when you want to run test cases or scenarios that have (or don't have) meta-data with certain value. Include property using specific meta-data \u00b6 Generally, \"include\" property can be used to include test cases/scenario at run time. Give include property value as map. For example, There are two scenarios with different meta-data. SCENARIO: checkout for mobile META-DATA: {\"description\": \"checkout scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Mobile\", \"module\": \"checkout\"} #TODO: call test steps END SCENARIO: login META-DATA: {\"description\": \"login scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Web\"} #TODO: call test steps END Now apply filter to these two scenarios using below include property. include= {'channel': ['Mobile'], 'module': ['checkout', 'search']} Conclusion: It will include only 'checkout for mobile' scenario. QAF perform Logical AND and OR operation in include property When you give multiple value for same key, it will perform logical OR operation between them. When you give different keys, it will perform logical AND operation. For example, include = {'channel': ['Mobile', 'Web'], 'module': ['checkout', 'PDP', 'search']} It will include test cases/scenario which has meta-data 'channel' whose value is Mobile OR Web AND 'module' whose value is checkout OR PDP OR search. Exclude property using specific meta-data \u00b6 Generally, \"exclude\" property can be used to exclude (not to run) scenarios/test-cases. Give exclude property value as map. You can exclude test cases/scenarios based on multiple meta-data keys or same key. At that time it will perform OR operation between each values across different meta keys. For example, There are two scenarios with different meta-data. SCENARIO: checkout for mobile META-DATA: {\"description\": \"checkout scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Mobile\", \"module\": \"checkout\"} #TODO: call test steps END SCENARIO: login META-DATA: {\"description\": \"login scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Web\"} #TODO: call test steps END Now apply filter to these two scenarios using below include property. exclude={'channel: ['MobileWeb'], 'module': ['checkout', 'PDP']} It will exclude only 'checkout for mobile' scenario. Because it will exclude test cases/scenario with meta-data 'channel' whose value is MobileWeb OR 'module' whose value is checkout OR PDP. Conclusion: It will exclude only 'checkout for mobile' scenario. Example: SCENARIO: checkout for mobile META-DATA: {\"description\": \"checkout scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Mobile\", \"module\": \"checkout\"} #TODO: call test steps END SCENARIO: search item META-DATA: {\"description\": \"login scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Web\", \"module\": \"search\"}} #TODO: call test steps END Now apply filter to these two scenarios using below include and exclude property. include={'channel':['Mobile','MobileWeb'],'module':['PDP','search']} exclude={'channel': ['web'], 'module': ['cart', 'profile']} It will include scenario which has meta-data 'channel' with value Mobile OR MobileWeb AND 'module' with value PDP OR search and exclude scenario which has meta-data channel with value web OR module with value cart OR profile. NOTE: Meta-data filter uses method selector com.qmetry.qaf.automation.testng.pro.QAFMethodSelector . Please make sure that your ant script or maven pom provided this method selector. Alternately you can add method selector in your xml configuration file. <method-selectors> <method-selector> <selector-class name= \"com.qmetry.qaf.automation.testng.pro.QAFMethodSelector\" /> </method-selector> </method-selectors>","title":"Scenario Meta-Data Filtering Using Include-Exclude Property"},{"location":"latest/scenario_metadatata_filter_include_exclude_prop/#include-property-using-specific-meta-data","text":"Generally, \"include\" property can be used to include test cases/scenario at run time. Give include property value as map. For example, There are two scenarios with different meta-data. SCENARIO: checkout for mobile META-DATA: {\"description\": \"checkout scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Mobile\", \"module\": \"checkout\"} #TODO: call test steps END SCENARIO: login META-DATA: {\"description\": \"login scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Web\"} #TODO: call test steps END Now apply filter to these two scenarios using below include property. include= {'channel': ['Mobile'], 'module': ['checkout', 'search']} Conclusion: It will include only 'checkout for mobile' scenario. QAF perform Logical AND and OR operation in include property When you give multiple value for same key, it will perform logical OR operation between them. When you give different keys, it will perform logical AND operation. For example, include = {'channel': ['Mobile', 'Web'], 'module': ['checkout', 'PDP', 'search']} It will include test cases/scenario which has meta-data 'channel' whose value is Mobile OR Web AND 'module' whose value is checkout OR PDP OR search.","title":"Include property using specific meta-data"},{"location":"latest/scenario_metadatata_filter_include_exclude_prop/#exclude-property-using-specific-meta-data","text":"Generally, \"exclude\" property can be used to exclude (not to run) scenarios/test-cases. Give exclude property value as map. You can exclude test cases/scenarios based on multiple meta-data keys or same key. At that time it will perform OR operation between each values across different meta keys. For example, There are two scenarios with different meta-data. SCENARIO: checkout for mobile META-DATA: {\"description\": \"checkout scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Mobile\", \"module\": \"checkout\"} #TODO: call test steps END SCENARIO: login META-DATA: {\"description\": \"login scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Web\"} #TODO: call test steps END Now apply filter to these two scenarios using below include property. exclude={'channel: ['MobileWeb'], 'module': ['checkout', 'PDP']} It will exclude only 'checkout for mobile' scenario. Because it will exclude test cases/scenario with meta-data 'channel' whose value is MobileWeb OR 'module' whose value is checkout OR PDP. Conclusion: It will exclude only 'checkout for mobile' scenario. Example: SCENARIO: checkout for mobile META-DATA: {\"description\": \"checkout scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Mobile\", \"module\": \"checkout\"} #TODO: call test steps END SCENARIO: search item META-DATA: {\"description\": \"login scenario\", \"groups\": [\"SMOKE\"], \"channel\": \"Web\", \"module\": \"search\"}} #TODO: call test steps END Now apply filter to these two scenarios using below include and exclude property. include={'channel':['Mobile','MobileWeb'],'module':['PDP','search']} exclude={'channel': ['web'], 'module': ['cart', 'profile']} It will include scenario which has meta-data 'channel' with value Mobile OR MobileWeb AND 'module' with value PDP OR search and exclude scenario which has meta-data channel with value web OR module with value cart OR profile. NOTE: Meta-data filter uses method selector com.qmetry.qaf.automation.testng.pro.QAFMethodSelector . Please make sure that your ant script or maven pom provided this method selector. Alternately you can add method selector in your xml configuration file. <method-selectors> <method-selector> <selector-class name= \"com.qmetry.qaf.automation.testng.pro.QAFMethodSelector\" /> </method-selector> </method-selectors>","title":"Exclude property using specific meta-data"},{"location":"latest/setting_driver_capabilities/","text":"Setting driver capabilities \u00b6 Following properties are available to set driver capabilities in order of their priority <driverName>.capabilities.<capabilityName> ( highest priority ) <driverName>.additional.capabilities driver.capabilities.<capabilityName> driver.additional.capabilities ( lowest priority ) <driverName>.capabilities.<capabilityName> can be used to set individual capability for specific driver Examples: firefox.capabilities.version = 48 appium.capabilities.automationName = Appium appium.capabilities.applicationName = Calculator <driverName>.additional.capabilities can be used to set all capabilities for specific driver. This need to be provided as JSON map of capability: value pair. Example appium.additional.capabilities = {'user':'user1@infostretch.com','password':'password','automationName':'Appium','applicationName':'Calculator'} driver.capabilities.<capabilityName> Can be used to set individual capability for all driver. Example driver.capabilities.user = myCloudeUser driver.capabilities.password = myPwd driver.capabilities.plateform = Windows driver.additional.capabilities can be used to set all capabilities for each driver. This need to be provided as JSON map of capability: value pair. driver.additional.capabilities = {'user':'user1@infostretch.com','password':'password','automationName':'Appium','applicationName':'Calculator'} {% include note.html content=\" If same capability set through more than one of above properties then preference for capabilities to be loaded will be considered as per the priority of the property.\" %}","title":"Setting driver capabilities"},{"location":"latest/setting_driver_capabilities/#setting-driver-capabilities","text":"Following properties are available to set driver capabilities in order of their priority <driverName>.capabilities.<capabilityName> ( highest priority ) <driverName>.additional.capabilities driver.capabilities.<capabilityName> driver.additional.capabilities ( lowest priority ) <driverName>.capabilities.<capabilityName> can be used to set individual capability for specific driver Examples: firefox.capabilities.version = 48 appium.capabilities.automationName = Appium appium.capabilities.applicationName = Calculator <driverName>.additional.capabilities can be used to set all capabilities for specific driver. This need to be provided as JSON map of capability: value pair. Example appium.additional.capabilities = {'user':'user1@infostretch.com','password':'password','automationName':'Appium','applicationName':'Calculator'} driver.capabilities.<capabilityName> Can be used to set individual capability for all driver. Example driver.capabilities.user = myCloudeUser driver.capabilities.password = myPwd driver.capabilities.plateform = Windows driver.additional.capabilities can be used to set all capabilities for each driver. This need to be provided as JSON map of capability: value pair. driver.additional.capabilities = {'user':'user1@infostretch.com','password':'password','automationName':'Appium','applicationName':'Calculator'} {% include note.html content=\" If same capability set through more than one of above properties then preference for capabilities to be loaded will be considered as per the priority of the property.\" %}","title":"Setting driver capabilities"},{"location":"latest/sponsors/","text":"{% include inline_image.html file=\"company_logo.png\" alt=\" http://www.infostretch.com \" %} Infostretch Corp is the primary sponsor of QMetry Automation Framework.","title":"Sponsers"},{"location":"latest/testNG_listeners/","text":"One can create and use different kind of TestNG listeners. Please refer TestNG documentation for more information and examples.","title":"TestNG listeners"},{"location":"latest/testdata/","text":"{% include inline_image.html file=\"worddavbc574dd694d63ef066aa760b1d31af80.png\" alt=\"Test Data Diagram\" %} Properties: \u00b6 You can create properties file as per your requirement under resources dir. Properties will be available in your test case and test page. You can directly access by props/pageProps object available at test/page level. Example: String someprop = props.getString(\"some.property\"); Context \u00b6 A context object is available in every class that extends BaseTestCase. It contains all the information for a given test run. You can set/get attributes to/from context, provides a way for inter test communication. Data Beans \u00b6 Make Tests Data Driven \u00b6","title":"Test Data"},{"location":"latest/testdata/#properties","text":"You can create properties file as per your requirement under resources dir. Properties will be available in your test case and test page. You can directly access by props/pageProps object available at test/page level. Example: String someprop = props.getString(\"some.property\");","title":"Properties:"},{"location":"latest/testdata/#context","text":"A context object is available in every class that extends BaseTestCase. It contains all the information for a given test run. You can set/get attributes to/from context, provides a way for inter test communication.","title":"Context"},{"location":"latest/testdata/#data-beans","text":"","title":"Data Beans"},{"location":"latest/testdata/#make-tests-data-driven","text":"","title":"Make Tests Data Driven"},{"location":"latest/testing_mobile_web_in_desktop_browser/","text":"Using Firefox \u00b6 Install modify-headers plug-in in Firefox. Create new ff profile Set appropriate user-agent in profile To run using driver (not remote driver): While running script pass additional system property -Dwebdriver.firefox.profile=<profilename> or in ant target add <systemproperty name=\"webdriver.firefox.profile\" value=\"<profilename>\"> . Set property driver.name = firefoxDriver To use remote driver Start selenium server with -Dwebdriver.firefox.profile=<profilename> Set properties remote.server = \"selenium server host ip\" remote.port = \"port on which selenium server running\" driver.name = firefoxRemoteDriver Using Chrome \u00b6 Provide following property in application.properties file chrome.additional.capabilities = {\"chromeOptions\":{\"mobileEmulation\":{\"deviceName\":\"Google Nexus 5\"}}} webdriver.chrome.driver = chromedriver path driver.name = chromeDriver Follow the link for specifying a device from the DevTools Emulation panel as the value for \u201cdeviceName\". Mobile Emulation Another way to run using Chrome : Create Chrome Profile on which mobile web tests will execute. Provide following property in application.properties file chrome.additional.capabilities = {\"chromeOptions\":{\"args\":[\"user-data-dir=D:/tools/webdriver/chromedriver_win32/mobile\"]}} {% include note.html content=\"Please update path of user-data-dir as per your chrome profile dir.\" %}","title":"Testing Mobile web in desktop Browser with modify header"},{"location":"latest/testing_mobile_web_in_desktop_browser/#using-firefox","text":"Install modify-headers plug-in in Firefox. Create new ff profile Set appropriate user-agent in profile To run using driver (not remote driver): While running script pass additional system property -Dwebdriver.firefox.profile=<profilename> or in ant target add <systemproperty name=\"webdriver.firefox.profile\" value=\"<profilename>\"> . Set property driver.name = firefoxDriver To use remote driver Start selenium server with -Dwebdriver.firefox.profile=<profilename> Set properties remote.server = \"selenium server host ip\" remote.port = \"port on which selenium server running\" driver.name = firefoxRemoteDriver","title":"Using Firefox"},{"location":"latest/testing_mobile_web_in_desktop_browser/#using-chrome","text":"Provide following property in application.properties file chrome.additional.capabilities = {\"chromeOptions\":{\"mobileEmulation\":{\"deviceName\":\"Google Nexus 5\"}}} webdriver.chrome.driver = chromedriver path driver.name = chromeDriver Follow the link for specifying a device from the DevTools Emulation panel as the value for \u201cdeviceName\". Mobile Emulation Another way to run using Chrome : Create Chrome Profile on which mobile web tests will execute. Provide following property in application.properties file chrome.additional.capabilities = {\"chromeOptions\":{\"args\":[\"user-data-dir=D:/tools/webdriver/chromedriver_win32/mobile\"]}} {% include note.html content=\"Please update path of user-data-dir as per your chrome profile dir.\" %}","title":"Using Chrome"},{"location":"latest/troubleshoot/","text":"Troubleshoot Problems","title":"Troubleshoot Problems"},{"location":"latest/understand_directory_structure/","text":"config The config directory contains testng.xml file, and is a place holder for configuration files. lib The lib directory contains required jar files, and is a place holder for other library jars/zips. resources The resources directory contains all required resources including properties files and data files, and is a place holder for other resources. scripts The scripts directory contains ant script to build and run automation. It also contains bat file for windows environment. src The src directory contains all java files and is a place holder for other java files. bin The bin directory contains compiled classes, and is a volatile directory that is deleted by the target clean in build.xml file. test-results The test-results directory contains result files. scenarios The scenarios directory is the default place holder for all the bdd and kwd scenario files.","title":"Understanding Directory Structure"},{"location":"latest/using_listeners/","text":"Using Listeners \u00b6 TestNG listeners QAF listeners","title":"Using listeners"},{"location":"latest/using_listeners/#using-listeners","text":"TestNG listeners QAF listeners","title":"Using Listeners"},{"location":"latest/using_running_driver_session/","text":"One of the useful features of QAF, while testing the code, is using running webdriver session. Following are the steps: Start selenium server. Navigate to http://localhost:4444/wd/hub/static/resource/hub.html in browser. Create a new session. Select browser and click ok. It will create a new session for selected browser. Set appropriate remote driver as browser and \"webdriver.remote.session\". For example in this case: driver.name = firefoxRemoteDriver webdriver.remote.session = c21c48ce-3256-47a7-aa86-f3476ffa0060 Navigate to the page manually in the browser. Start executing code snippet for test on that page. For example in following case I navigated to the page and opened calendar to test calendar component by following test code. @Test void test1 () { WebCalendar calendar = new WebCalendar ( WebHomePageLocators . CALENDAR_COMPONENT_LOC ); calendar . setDates ( DateUtil . getDate ( 25 ), DateUtil . getDate ( 30 )); } I can run/debug above snippet as testng test to test different aspects or to reproduce any defective behavior.","title":"Using running Driver Session"},{"location":"latest/wait_service/","text":"There is a listener that automatically injects wait if required before executing selenium command. However, one can utilize wait service which provides different wait methods. In test case method you can create object of WaitService and utilize different wait methods. When using webdriver API for development different wait methods are available with extended webelement object itself. For example assuming that firstName is QAFExtendedWebElement and you want to wait for first name field to be present: firstName . waitForPresent (); Other examples of WaitServices methods. firstName . waitForPresent (); firstName . waitForVisible (); firstName . waitForSelected (); firstName . waitForEnabled (); firstName . waitForCssClass ( \"enabled\" ); firstName . waitForCssStyle ( \"display\" , \"none\" );","title":"Wait Service"},{"location":"latest/web_services/","text":"For advance usage please refer qaf-suport-ws . QAF provides support classes for Webservice Testing. It displays all details of web services request/response in QAF Report. You can create a new test case or suit by extending RestWSTestCase class. On extending RestWSTestCase following object will be available to use in your test. WebResource WebResource instance can be accessed using getWebResource method. WebResource is a useful class to specify request body, headers and invoking Http Requests. Client Client instance can be accessed using getClient method. Client instance is useful for configuring the properties of connections and requests. Response Response instance can be accessed using getResponse method. Using response class user can access response status code, response body and response headers. Validation Methods All the methods of Validator can be accessed directly in testcase or suite. Example Below is a sample example to invoke http request and verify response code using QAF. public class Wstest extends RestWSTestCase { @Test ( testName = \"create order\" ) public void createOrder () { //request data Map < String , String > data = new HashMap < String , String > (); data . put ( \"clientName\" , \"Amit\" ); data . put ( \"amount\" , \"100\" ); //create post request getWebResource ( \"/orders.json\" ). post ( new Gson (). toJson ( data )); //verify response verifyThat ( \"Response Status\" , getResponse (). getStatus (), Matchers . equalTo ( Status . CREATED )); } } For more reference visit Jersey Client API Documentation .","title":"Web Services Testing"},{"location":"latest/bdd/bdd_comment/","text":"Comment \u00b6 Comments can be placed any where in the bdd file. Comment can be single line or multiline. Single line comment starts with # or ! . Multi-line comments start with \"\"\" and end with \"\"\" .Multiline comment in scenario or background logged in report as info message, however comments outside will not logged in report. # this is example of single line comment # single line comment will be ignored by BDD parser ! this is also a comment \"\"\" This is multi line comment will be logged in report if it is inside background or scenario. \"\"\" line-break \u00b6 To break statement in multiple line you can use _& as line break.","title":"Comment and line break in BDD"},{"location":"latest/bdd/bdd_comment/#comment","text":"Comments can be placed any where in the bdd file. Comment can be single line or multiline. Single line comment starts with # or ! . Multi-line comments start with \"\"\" and end with \"\"\" .Multiline comment in scenario or background logged in report as info message, however comments outside will not logged in report. # this is example of single line comment # single line comment will be ignored by BDD parser ! this is also a comment \"\"\" This is multi line comment will be logged in report if it is inside background or scenario. \"\"\"","title":"Comment"},{"location":"latest/bdd/bdd_comment/#line-break","text":"To break statement in multiple line you can use _& as line break.","title":"line-break"},{"location":"latest/bdd/bdd_configuration/","text":"QAF considers each BDD Scenario as TestNG test and Scenario Outline as data-driven test. You can run sequential or parallel methods (scenarios) or groups or xml test on one or more browser same as test case in Java. In order to run your test cases written using BDD syntax , you need to create TestNG XML or YAML configuration file with appropriate factory class . You can set scenario file to run and step implementation package using properties. To set properties refer Different ways of providing properties Properties \u00b6 Following are properties used for bdd execution configuration Property Value Description step.provider.pkg one or more package Specify where to look up for step implementation. scenario.file.loc bdd file or folder Specify where to look up for scenarios. Default value is scenarios directory. You can specify one or more bdd file, folder separated by ; txt.scenario.file.ext bdd file extension Specify extension of file containing scenarios. Default is .bdd for qaf bdd parser and .feature for qaf bdd2 parser. Not applicable for Gherkin parser Factory class \u00b6 BDD: com.qmetry.qaf.automation.step.client.text.BDDTestFactory BDD2 com.qmetry.qaf.automation.step.client.text.BDDTestFactory2 Gherkin com.qmetry.qaf.automation.step.client.gherkin.GherkinScenarioFactory Configuration file example \u00b6 Considering following structure, few configuration examples provided here. ProjectHome | |--scenarios | |--module1 | | |--suite1.feature | | |--suite2.feature | | | | | | |--module2 | | |--suite1.feature | | |--suite2.feature | | | | | | | |--resources | |--common | | |--env.properties | | | |--web | | |--env.properties | | | |--mobile | | |--env.properties | | resource/web/env.properties step.provider.pkg=my.aut.common;my.aut.web resource/mobile/env.properties step.provider.pkg=my.aut.common;my.aut.mobile Basic example \u00b6 <test name= \"QAF-BDD-Test\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> Running tests with specific group(s) \u00b6 Only test with group smoke . <test name= \"QAF-BDD-Test\" > <groups> <run> <include name= \"smoke\" /> </run> </groups> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> Running tests with specific meta-data \u00b6 Only test with channel value web . Refer meta-data filter for more details. <test name= \"QAF-BDD-Test\" > <parameter name= \"include\" value= \"{'channel': ['web']}\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> Running specific file or folder \u00b6 <test name= \"QAF-BDD-Test\" > <parameter name= \"scenario.file.loc\" value= \"resources/module1\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> Above example will run all bdd files under folder resources/module1 . You can provide one or more file/folder as values of scenario.file.loc property. Blow are few more examples: <parameter name=\"scenario.file.loc\" value=\"resources/module1/suite1.feature\" /> <parameter name=\"scenario.file.loc\" value=\"resources/module1/suite1.feature;resources/module2/suite2.feature\" /> <parameter name=\"scenario.file.loc\" value=\"resources/module1/suite1.feature;resources/module2\" /> Different step implementation for two or more platform \u00b6 <test name= \"QAF-BDD-Test-Web\" > <parameter name= \"step.provider.pkg\" value= \"my.aut.common;my.aut.web\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> <test name= \"QAF-BDD-Test-Mobile\" > <parameter name= \"step.provider.pkg\" value= \"my.aut.common;my.aut.mobile\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> Step provider package provided in properties. <test name= \"QAF-BDD-Test-Web\" > <parameter name= \"env.resources\" value= \"resources/common;resources/web\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> <test name= \"QAF-BDD-Test-Mobile\" > <parameter name= \"env.resources\" value= \"resources/common;resources/mobile\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test>","title":"Configuring BDD for execution"},{"location":"latest/bdd/bdd_configuration/#properties","text":"Following are properties used for bdd execution configuration Property Value Description step.provider.pkg one or more package Specify where to look up for step implementation. scenario.file.loc bdd file or folder Specify where to look up for scenarios. Default value is scenarios directory. You can specify one or more bdd file, folder separated by ; txt.scenario.file.ext bdd file extension Specify extension of file containing scenarios. Default is .bdd for qaf bdd parser and .feature for qaf bdd2 parser. Not applicable for Gherkin parser","title":"Properties"},{"location":"latest/bdd/bdd_configuration/#factory-class","text":"BDD: com.qmetry.qaf.automation.step.client.text.BDDTestFactory BDD2 com.qmetry.qaf.automation.step.client.text.BDDTestFactory2 Gherkin com.qmetry.qaf.automation.step.client.gherkin.GherkinScenarioFactory","title":"Factory class"},{"location":"latest/bdd/bdd_configuration/#configuration-file-example","text":"Considering following structure, few configuration examples provided here. ProjectHome | |--scenarios | |--module1 | | |--suite1.feature | | |--suite2.feature | | | | | | |--module2 | | |--suite1.feature | | |--suite2.feature | | | | | | | |--resources | |--common | | |--env.properties | | | |--web | | |--env.properties | | | |--mobile | | |--env.properties | | resource/web/env.properties step.provider.pkg=my.aut.common;my.aut.web resource/mobile/env.properties step.provider.pkg=my.aut.common;my.aut.mobile","title":"Configuration file example"},{"location":"latest/bdd/bdd_configuration/#basic-example","text":"<test name= \"QAF-BDD-Test\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test>","title":"Basic example"},{"location":"latest/bdd/bdd_configuration/#running-tests-with-specific-groups","text":"Only test with group smoke . <test name= \"QAF-BDD-Test\" > <groups> <run> <include name= \"smoke\" /> </run> </groups> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test>","title":"Running tests with specific group(s)"},{"location":"latest/bdd/bdd_configuration/#running-tests-with-specific-meta-data","text":"Only test with channel value web . Refer meta-data filter for more details. <test name= \"QAF-BDD-Test\" > <parameter name= \"include\" value= \"{'channel': ['web']}\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test>","title":"Running tests with specific meta-data"},{"location":"latest/bdd/bdd_configuration/#running-specific-file-or-folder","text":"<test name= \"QAF-BDD-Test\" > <parameter name= \"scenario.file.loc\" value= \"resources/module1\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> Above example will run all bdd files under folder resources/module1 . You can provide one or more file/folder as values of scenario.file.loc property. Blow are few more examples: <parameter name=\"scenario.file.loc\" value=\"resources/module1/suite1.feature\" /> <parameter name=\"scenario.file.loc\" value=\"resources/module1/suite1.feature;resources/module2/suite2.feature\" /> <parameter name=\"scenario.file.loc\" value=\"resources/module1/suite1.feature;resources/module2\" />","title":"Running specific file or folder"},{"location":"latest/bdd/bdd_configuration/#different-step-implementation-for-two-or-more-platform","text":"<test name= \"QAF-BDD-Test-Web\" > <parameter name= \"step.provider.pkg\" value= \"my.aut.common;my.aut.web\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> <test name= \"QAF-BDD-Test-Mobile\" > <parameter name= \"step.provider.pkg\" value= \"my.aut.common;my.aut.mobile\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> Step provider package provided in properties. <test name= \"QAF-BDD-Test-Web\" > <parameter name= \"env.resources\" value= \"resources/common;resources/web\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test> <test name= \"QAF-BDD-Test-Mobile\" > <parameter name= \"env.resources\" value= \"resources/common;resources/mobile\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory2\" /> </classes> </test>","title":"Different step implementation for two or more platform"},{"location":"latest/bdd/bdd_syntax/","text":"QAF supports multiple BDD syntaxes with meta-data , comment and data-provider support. While using QAF, you can take advantage of each TestNG features, including data-providers, parallel execution configuration in different ways (groups/tests/methods), TestNG listeners. QAF BDD2 Syntax \u00b6 BDD2 syntax is supported by the BDDTestFactory2 which uses BDDFileParser2 . It is derived from QAF BDD, Jbehave and Gherkin. @group1 @author:Chirag Jayswal @channel:[\"web\",\"mobile\"] Feature: A feature is a collection of scenarios Narrative: In order to communicate effectively to the business some functionality As a development team I want to use Behavior-Driven Development Background: Given a step that is executed before each scenario @smoke @TestcaseId:12345 Scenario: A scenario is a collection of executable steps of different type Given step represents a precondition to an event When step represents the occurrence of the event Then step represents the outcome of the event @datafie:resources/${env}/testdata.txt @regression Scenario: Another scenario exploring different combination using data-provider Given a \"${precondition}\" When an event occurs Then the outcome should \"${be-captured}\" @regression Scenario Outline: Another scenario exploring different combination using examples Given a \"${precondition}\" When an event occurs Then the outcome should \"${be-captured}\" Examples: |TestcaseId|precondition|be-captured| |123461|abc|be captured | |123462|xyz|not be captured| QAF BDD Syntax \u00b6 QAF BDD syntax is supported by the BDDTestFactory which uses BDDFileParser . Feature: A feature is a collection of scenarios Meta-data: {'groups':['group1'], 'author':'Chirag Jayswal', 'channel':['web','mobile']} Narrative: In order to communicate effectively to the business some functionality As a development team I want to use Behavior-Driven Development Background: Given a step that is executed before each scenario Scenario: A scenario is a collection of executable steps of different type Meta-data: {'groups':['smoke']} Given step represents a precondition to an event When step represents the occurrence of the event Then step represents the outcome of the event Scenario: Another scenario exploring different combination using data-provider Meta-data: {'groups':['regression'],'datafie':'resources/${env}/testdata.txt'} Given a \"${precondition}\" When an event occurs Then the outcome should \"${be-captured}\" Gherkin Syntax \u00b6 Gherkin syntax is supported by the GherkinScenarioFactory which uses GherkinFileParser . QAF also supports parameters as argument and data-providers for examples, which are not currently available in Gherkin. @group1 Feature: A feature is a collection of scenarios Background: Given a step that is executed before each scenario @smoke Scenario: A scenario is a collection of executable steps of different type Given step represents a precondition to an event When step represents the occurrence of the event Then step represents the outcome of the event @regression Scenario Outline: Another scenario exploring different combinations using examples Given a \"<precondition>\" When an event occurs Then the outcome should \"<be-captured>\" Examples: |precondition|be-captured| |123461|abc|be captured | |123462|xyz|not be captured| Scenario Outline: Another scenario exploring different combinations using data provider Given a \"<precondition>\" When an event occurs Then the outcome should \"<be-captured>\" Examples: {'datafile':'resources/${env}/testdata.txt'}","title":"BDD syntax"},{"location":"latest/bdd/bdd_syntax/#qaf-bdd2-syntax","text":"BDD2 syntax is supported by the BDDTestFactory2 which uses BDDFileParser2 . It is derived from QAF BDD, Jbehave and Gherkin. @group1 @author:Chirag Jayswal @channel:[\"web\",\"mobile\"] Feature: A feature is a collection of scenarios Narrative: In order to communicate effectively to the business some functionality As a development team I want to use Behavior-Driven Development Background: Given a step that is executed before each scenario @smoke @TestcaseId:12345 Scenario: A scenario is a collection of executable steps of different type Given step represents a precondition to an event When step represents the occurrence of the event Then step represents the outcome of the event @datafie:resources/${env}/testdata.txt @regression Scenario: Another scenario exploring different combination using data-provider Given a \"${precondition}\" When an event occurs Then the outcome should \"${be-captured}\" @regression Scenario Outline: Another scenario exploring different combination using examples Given a \"${precondition}\" When an event occurs Then the outcome should \"${be-captured}\" Examples: |TestcaseId|precondition|be-captured| |123461|abc|be captured | |123462|xyz|not be captured|","title":"QAF BDD2 Syntax"},{"location":"latest/bdd/bdd_syntax/#qaf-bdd-syntax","text":"QAF BDD syntax is supported by the BDDTestFactory which uses BDDFileParser . Feature: A feature is a collection of scenarios Meta-data: {'groups':['group1'], 'author':'Chirag Jayswal', 'channel':['web','mobile']} Narrative: In order to communicate effectively to the business some functionality As a development team I want to use Behavior-Driven Development Background: Given a step that is executed before each scenario Scenario: A scenario is a collection of executable steps of different type Meta-data: {'groups':['smoke']} Given step represents a precondition to an event When step represents the occurrence of the event Then step represents the outcome of the event Scenario: Another scenario exploring different combination using data-provider Meta-data: {'groups':['regression'],'datafie':'resources/${env}/testdata.txt'} Given a \"${precondition}\" When an event occurs Then the outcome should \"${be-captured}\"","title":"QAF BDD Syntax"},{"location":"latest/bdd/bdd_syntax/#gherkin-syntax","text":"Gherkin syntax is supported by the GherkinScenarioFactory which uses GherkinFileParser . QAF also supports parameters as argument and data-providers for examples, which are not currently available in Gherkin. @group1 Feature: A feature is a collection of scenarios Background: Given a step that is executed before each scenario @smoke Scenario: A scenario is a collection of executable steps of different type Given step represents a precondition to an event When step represents the occurrence of the event Then step represents the outcome of the event @regression Scenario Outline: Another scenario exploring different combinations using examples Given a \"<precondition>\" When an event occurs Then the outcome should \"<be-captured>\" Examples: |precondition|be-captured| |123461|abc|be captured | |123462|xyz|not be captured| Scenario Outline: Another scenario exploring different combinations using data provider Given a \"<precondition>\" When an event occurs Then the outcome should \"<be-captured>\" Examples: {'datafile':'resources/${env}/testdata.txt'}","title":"Gherkin Syntax"},{"location":"latest/bdd/metadata_rule/","text":"@since 2.1.15 Meta-data rule provides a way to enforce meta-data and it's possible value for the project. You can define required and optional meta-data for scenario along with its possible values. You can specify meta data rules by using metadata.rules property. During dryrun metadata get validated by applying metadata rules. Metadata rule \u00b6 metadata.rules accepts json list of Metadata rule in following structre: MetadataRule = { String key; MetaDataRule depends; List<Object> values; Boolean required; } ### Basic Example Below is basic example with one rule. metadata.rules=[{\"key\":\"groups\",\"values\":[\"P1\",\"P2\",\"P3\",\"sanity\",\"regression\",\"module1\"],\"required\":true}] In above example, there is only one rule that enforece user to specify groups in testcase/scenario with possible vaules [\"P1\",\"P2\",\"P3\",\"sanity\",\"regression\",\"module1\"] . \"required\":true means you must provide groups . If any other group specified meta-data rule will fail. ### Complex Example Here is another example, which difines mulitple rules. metadata.rules=[\\ {\"key\":\"groups\",\"values\":[\"P1\",\"P2\",\"P3\"],\"required\":false},\\ {\"key\":\"testCaseID\",\"values\":[\"TC-(\\\\\\\\d)+\"],\"required\":true},\\ {\"key\":\"type\",\"values\":[\"sanity\",\"regression\"],\"required\":true},\\ {\"key\":\"storyId\",\"values\":[\"PRJ-(\\\\\\\\d)+\"],\"required\":true},\\ {\"key\":\"channel\",\"values\":[\"web\",\"mobile\",\"api\"],\"required\":false},\\ {\"key\":\"module\",\"values\":[\"M1\",\"M2\",\"M3\"],\"required\":false},\\ {\"key\":\"M1Type\",\"values\":[\"M1Sub1\",\"M1Sub2\",\"M1Sub3\"],\\ \"depends\":{\"key\":\"module\", \"vaules\":[\"M1\"]}\\ }\\ ] In above example testCaseID and storyId specified with pattern. M1Type is dependent on module value M1 that means you can define M1Type only when module is M1 .","title":"Metadata rules"},{"location":"latest/bdd/metadata_rule/#metadata-rule","text":"metadata.rules accepts json list of Metadata rule in following structre: MetadataRule = { String key; MetaDataRule depends; List<Object> values; Boolean required; } ### Basic Example Below is basic example with one rule. metadata.rules=[{\"key\":\"groups\",\"values\":[\"P1\",\"P2\",\"P3\",\"sanity\",\"regression\",\"module1\"],\"required\":true}] In above example, there is only one rule that enforece user to specify groups in testcase/scenario with possible vaules [\"P1\",\"P2\",\"P3\",\"sanity\",\"regression\",\"module1\"] . \"required\":true means you must provide groups . If any other group specified meta-data rule will fail. ### Complex Example Here is another example, which difines mulitple rules. metadata.rules=[\\ {\"key\":\"groups\",\"values\":[\"P1\",\"P2\",\"P3\"],\"required\":false},\\ {\"key\":\"testCaseID\",\"values\":[\"TC-(\\\\\\\\d)+\"],\"required\":true},\\ {\"key\":\"type\",\"values\":[\"sanity\",\"regression\"],\"required\":true},\\ {\"key\":\"storyId\",\"values\":[\"PRJ-(\\\\\\\\d)+\"],\"required\":true},\\ {\"key\":\"channel\",\"values\":[\"web\",\"mobile\",\"api\"],\"required\":false},\\ {\"key\":\"module\",\"values\":[\"M1\",\"M2\",\"M3\"],\"required\":false},\\ {\"key\":\"M1Type\",\"values\":[\"M1Sub1\",\"M1Sub2\",\"M1Sub3\"],\\ \"depends\":{\"key\":\"module\", \"vaules\":[\"M1\"]}\\ }\\ ] In above example testCaseID and storyId specified with pattern. M1Type is dependent on module value M1 that means you can define M1Type only when module is M1 .","title":"Metadata rule"},{"location":"latest/bdd/scenario_meta_data/","text":"Meta-data \u00b6 Meta-data with test case provides information to help manage test cases. In Java test case is defined with @Test annotation on method and in BDD test case is defined with Scenario statement. Each meta-data provided as combination of meta-key and meta-value . The meta-data are collected as part of the BDD parsing and made available for different uses, e.g. grouping scenario, setting data-provider. It can be used for scenario selection by providing meta-data filter and in listeners. Meta-value can be string , number , boolean , list or map . Meta data can be provided with following statements: * Feature * Scenario or Scenario Outline Meta-data rules \u00b6 Meta data rules can be defiened to enforce meta-data and it's possible value for the project Meta data provided to feature will be inherited by each scenario. Meta-data formatter \u00b6 Since 2.1.15, Meta data values can be formatted by providing formmater. To provide formattor for any meta-value, you need to provide property with metadata.formatter prefix and meta-key suffix. You can set format as supported by MessageFormat that accepts one argument for format to apply on meta-value. metadata.formatter.storyKey=<a href=\"${jira.url}/{0}\">{0}</a> When you provide metadata with meta-key storyKey on test case, for example in BDD, @storyKey:PRJ-123 in report story id will be formatted with link. This is applicable for BDD, Java, Keyword driven test case. Example BDD2: \u00b6 In BDD2 meta-data declaration starts with @ followed by meta-key and meta-value separated with : . @enabled:true @channel:['web','mobile'] Feature: example feature @description:This is example scenario in BDD2 @grp1 @grp2 @author: Chirag Jayswal @TestID:12345 Scenario: example ... Meta-data without value will be considered as groups in BDD2. in example above, @grp1 and @grp2 will be considered as groups grp1 and grp2 Example BDD: \u00b6 In BDD meta-data provided as JSON map of meta-key and meta-value with Meta-data statement. Feature: example feature Meta-data:{'enabled':true, 'channel':['web','mobile'], 'storyKey':'PRJ-123'} Scenario: example Meta-data:{'TestID':'12345', 'description':'This is example scenario in BDD', 'groups':['grp1','grp2'],'author':'Chirag Jayswal'} ... Example Java: \u00b6 In Java meta-data provided as JSON map of meta-key and meta-value with @MetaData annotation. Any annotation provided on test method including @Test and @QAFDataProvider represents meta-data. @Test(description=\"This is example scenario in BDD\",groups={\"grp1\",\"grp2\"}) @MetaData(\"{'TestID':'12345', 'storyKey':'PRJ-123', 'channel':['web','mobile'] ,'author':'Chirag Jayswal'}}\" public void example(){ } Example Gherkin: \u00b6 In Gherkin meta-data declaration starts with @ followed by value. Gherkin syntax supports only groups which is called as tags in gherkin. @grp1 Feature: example feature @grp1 @grp2 Scenario: example ... Pre-Defined Meta-data for BDD \u00b6 Parameters of @Test and @QAFDataProvider can be used as meta-data and it will work same as working for test case written in Java. Refer meta-data for data-providers and predefined meta-key available to use which are listed in table below. In addition to predefined meta-data, you can have your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. In examples above, TestID and channel represents custom meta-data. Pre-Defined Meta-Keys Type Comments description Text Text to describe scenario in detail enabled True or false Switch to consider scenario executable groups Array of String List of groups of test case, i.e. smoke, regression, P1 etc. priority Number Defines the order in which scenario should be executed. Higher the priority, earlier it will execute dependsOnGroups Array of String Scenarios of Groups, to be executed before dependsOnMethods Array of String Scenarios to be executed before dataProviderClass Fully qualified class name required if you want to use custom data provider (since 2.1.12) dataProvider name of the data provider required when you want to use custom data provider (since 2.1.12)","title":"Test case meta-data"},{"location":"latest/bdd/scenario_meta_data/#meta-data","text":"Meta-data with test case provides information to help manage test cases. In Java test case is defined with @Test annotation on method and in BDD test case is defined with Scenario statement. Each meta-data provided as combination of meta-key and meta-value . The meta-data are collected as part of the BDD parsing and made available for different uses, e.g. grouping scenario, setting data-provider. It can be used for scenario selection by providing meta-data filter and in listeners. Meta-value can be string , number , boolean , list or map . Meta data can be provided with following statements: * Feature * Scenario or Scenario Outline","title":"Meta-data"},{"location":"latest/bdd/scenario_meta_data/#meta-data-rules","text":"Meta data rules can be defiened to enforce meta-data and it's possible value for the project Meta data provided to feature will be inherited by each scenario.","title":"Meta-data rules"},{"location":"latest/bdd/scenario_meta_data/#meta-data-formatter","text":"Since 2.1.15, Meta data values can be formatted by providing formmater. To provide formattor for any meta-value, you need to provide property with metadata.formatter prefix and meta-key suffix. You can set format as supported by MessageFormat that accepts one argument for format to apply on meta-value. metadata.formatter.storyKey=<a href=\"${jira.url}/{0}\">{0}</a> When you provide metadata with meta-key storyKey on test case, for example in BDD, @storyKey:PRJ-123 in report story id will be formatted with link. This is applicable for BDD, Java, Keyword driven test case.","title":"Meta-data formatter"},{"location":"latest/bdd/scenario_meta_data/#example-bdd2","text":"In BDD2 meta-data declaration starts with @ followed by meta-key and meta-value separated with : . @enabled:true @channel:['web','mobile'] Feature: example feature @description:This is example scenario in BDD2 @grp1 @grp2 @author: Chirag Jayswal @TestID:12345 Scenario: example ... Meta-data without value will be considered as groups in BDD2. in example above, @grp1 and @grp2 will be considered as groups grp1 and grp2","title":"Example BDD2:"},{"location":"latest/bdd/scenario_meta_data/#example-bdd","text":"In BDD meta-data provided as JSON map of meta-key and meta-value with Meta-data statement. Feature: example feature Meta-data:{'enabled':true, 'channel':['web','mobile'], 'storyKey':'PRJ-123'} Scenario: example Meta-data:{'TestID':'12345', 'description':'This is example scenario in BDD', 'groups':['grp1','grp2'],'author':'Chirag Jayswal'} ...","title":"Example BDD:"},{"location":"latest/bdd/scenario_meta_data/#example-java","text":"In Java meta-data provided as JSON map of meta-key and meta-value with @MetaData annotation. Any annotation provided on test method including @Test and @QAFDataProvider represents meta-data. @Test(description=\"This is example scenario in BDD\",groups={\"grp1\",\"grp2\"}) @MetaData(\"{'TestID':'12345', 'storyKey':'PRJ-123', 'channel':['web','mobile'] ,'author':'Chirag Jayswal'}}\" public void example(){ }","title":"Example Java:"},{"location":"latest/bdd/scenario_meta_data/#example-gherkin","text":"In Gherkin meta-data declaration starts with @ followed by value. Gherkin syntax supports only groups which is called as tags in gherkin. @grp1 Feature: example feature @grp1 @grp2 Scenario: example ...","title":"Example Gherkin:"},{"location":"latest/bdd/scenario_meta_data/#pre-defined-meta-data-for-bdd","text":"Parameters of @Test and @QAFDataProvider can be used as meta-data and it will work same as working for test case written in Java. Refer meta-data for data-providers and predefined meta-key available to use which are listed in table below. In addition to predefined meta-data, you can have your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. In examples above, TestID and channel represents custom meta-data. Pre-Defined Meta-Keys Type Comments description Text Text to describe scenario in detail enabled True or false Switch to consider scenario executable groups Array of String List of groups of test case, i.e. smoke, regression, P1 etc. priority Number Defines the order in which scenario should be executed. Higher the priority, earlier it will execute dependsOnGroups Array of String Scenarios of Groups, to be executed before dependsOnMethods Array of String Scenarios to be executed before dataProviderClass Fully qualified class name required if you want to use custom data provider (since 2.1.12) dataProvider name of the data provider required when you want to use custom data provider (since 2.1.12)","title":"Pre-Defined Meta-data for BDD"},{"location":"latest/bdd2/bdd2/","text":"Comment \u00b6 Comments can be placed any where in the bdd file. Comment can be single line or multiline. Single line comment starts with # or ! . Multi-line comments start with \"\"\" and end with \"\"\" .Multiline comment in scenario or background logged in report as info message, however comments outside will not logged in report. # this is example of single line comment # single line comment will be ignored by BDD parser ! this is also a comment \"\"\" This is multi line comment will be logged in report if it is inside background or scenario. \"\"\" line-break \u00b6 To break statement in multiple line you can use _& as line break. Meta-data \u00b6 There are predefined meta-key available to use which are listed in meta-data . You can define your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. The meta-data are collected as part of the scenario parsing and made available for different uses, e.g. Scenario selection, setting priority @description:Data driven test that uses csv file to provide data @group1 @group2 @author: Chirag Jayswal SCENARIO: Scenario Example Given I am on fruits and colors activity When i select 'grapes' Then the color should be 'green' Data-driven Scenario \u00b6 You can iterate your scenario with set of test data by providing examples with scenario outline. You also can provide data from qaf data provider by providing @QAFDataProvider property as meta-data.Refer make test data driven , any of the @QAFDataProvider property you can set as meta-data. Below example demonstrates data-driven feature @author:Chirag Jayswal @regression @dataFile:resources/data/testdata.csv SCENARIO: Data-driven Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Below is csv data file and first row is column names. testdata.csv fruit,color grapes,green banana,yellow Scenario outline with examples. @regression @author:Chirag Jayswal Scenario Outline: Data-driven Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Examples: |fruit|color| |grapes|green| |banana|yellow| You can also use groups/tags with Examples , however data-provider recommended over Examples with or without groups. If you want to uses custom data set you need to provide data provider class and data provider name in meta-data. @dataProvider:my-custom-dp @dataProviderClass:my.project.impl.CustomDataProvider @regression @author:Chirag Jayswal Scenario: Custom Data provider Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Above scenario will use custom data provider defined in class CustomDataProvider . It will add regression group and Chirag Jayswal as custom meta-data author . package my.project.impl ; import java.util.Map ; import org.testng.annotations.DataProvider ; import org.testng.collections.Maps ; /** * @author chirag.jayswal * */ public class CustomDataProvider { @DataProvider ( name = \"my-custom-dp\" ) public static Object [][] dataProviderForBDD (){ Map < Object , Object > rec1 = Maps . newHashMap (); m . put ( \"fruit\" , \"grapes\" ); m . put ( \"color\" , \"green\" ); Map < Object , Object > rec2 = Maps . newHashMap (); m . put ( \"fruit\" , \"banana\" ); m . put ( \"color\" , \"yellow\" ); return new Object [][] { % raw % }{{ rec1 },{ rec2 }}{ % endraw % } ; } }","title":"BDD2"},{"location":"latest/bdd2/bdd2/#comment","text":"Comments can be placed any where in the bdd file. Comment can be single line or multiline. Single line comment starts with # or ! . Multi-line comments start with \"\"\" and end with \"\"\" .Multiline comment in scenario or background logged in report as info message, however comments outside will not logged in report. # this is example of single line comment # single line comment will be ignored by BDD parser ! this is also a comment \"\"\" This is multi line comment will be logged in report if it is inside background or scenario. \"\"\"","title":"Comment"},{"location":"latest/bdd2/bdd2/#line-break","text":"To break statement in multiple line you can use _& as line break.","title":"line-break"},{"location":"latest/bdd2/bdd2/#meta-data","text":"There are predefined meta-key available to use which are listed in meta-data . You can define your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. The meta-data are collected as part of the scenario parsing and made available for different uses, e.g. Scenario selection, setting priority @description:Data driven test that uses csv file to provide data @group1 @group2 @author: Chirag Jayswal SCENARIO: Scenario Example Given I am on fruits and colors activity When i select 'grapes' Then the color should be 'green'","title":"Meta-data"},{"location":"latest/bdd2/bdd2/#data-driven-scenario","text":"You can iterate your scenario with set of test data by providing examples with scenario outline. You also can provide data from qaf data provider by providing @QAFDataProvider property as meta-data.Refer make test data driven , any of the @QAFDataProvider property you can set as meta-data. Below example demonstrates data-driven feature @author:Chirag Jayswal @regression @dataFile:resources/data/testdata.csv SCENARIO: Data-driven Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Below is csv data file and first row is column names. testdata.csv fruit,color grapes,green banana,yellow Scenario outline with examples. @regression @author:Chirag Jayswal Scenario Outline: Data-driven Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Examples: |fruit|color| |grapes|green| |banana|yellow| You can also use groups/tags with Examples , however data-provider recommended over Examples with or without groups. If you want to uses custom data set you need to provide data provider class and data provider name in meta-data. @dataProvider:my-custom-dp @dataProviderClass:my.project.impl.CustomDataProvider @regression @author:Chirag Jayswal Scenario: Custom Data provider Example Given I am on fruits and colors activity When i select '${fruit}' Then the color should be '${color}' Above scenario will use custom data provider defined in class CustomDataProvider . It will add regression group and Chirag Jayswal as custom meta-data author . package my.project.impl ; import java.util.Map ; import org.testng.annotations.DataProvider ; import org.testng.collections.Maps ; /** * @author chirag.jayswal * */ public class CustomDataProvider { @DataProvider ( name = \"my-custom-dp\" ) public static Object [][] dataProviderForBDD (){ Map < Object , Object > rec1 = Maps . newHashMap (); m . put ( \"fruit\" , \"grapes\" ); m . put ( \"color\" , \"green\" ); Map < Object , Object > rec2 = Maps . newHashMap (); m . put ( \"fruit\" , \"banana\" ); m . put ( \"color\" , \"yellow\" ); return new Object [][] { % raw % }{{ rec1 },{ rec2 }}{ % endraw % } ; } }","title":"Data-driven Scenario"},{"location":"latest/bdd2/bdd2_meta_data/","text":"Meta-data \u00b6 Scenario metadata provides information to help manage. The meta-data are collected as part of the BDD parsing and made available for different uses, e.g. grouping scenario, setting data-provider. It can be used for scenario selection by providing meta-data filter . There are predefined meta-key available to use which are listed in meta-data . In addition to predefined meta-data, you can have your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. @description:Data driven test that uses csv file to provide data @group1 @group2 @author: Chirag Jayswal Meta-value can string, number, boolean or list. @TestID:12345 @enabled:true @channel:['web','mobile'] Meta data can be provided with following elements: * Feature * Scenario * Scenario Outline * Examples Meta data provided to feature will be inherited by each scenario or scenario outline.","title":"BDD2"},{"location":"latest/bdd2/bdd2_meta_data/#meta-data","text":"Scenario metadata provides information to help manage. The meta-data are collected as part of the BDD parsing and made available for different uses, e.g. grouping scenario, setting data-provider. It can be used for scenario selection by providing meta-data filter . There are predefined meta-key available to use which are listed in meta-data . In addition to predefined meta-data, you can have your custom meta-key to categorize scenarios as per AUT. You can choose whatever names are most appropriate for the information they are trying to convey. @description:Data driven test that uses csv file to provide data @group1 @group2 @author: Chirag Jayswal Meta-value can string, number, boolean or list. @TestID:12345 @enabled:true @channel:['web','mobile'] Meta data can be provided with following elements: * Feature * Scenario * Scenario Outline * Examples Meta data provided to feature will be inherited by each scenario or scenario outline.","title":"Meta-data"},{"location":"latest/bdd2/bdd_step/","text":"","title":"BDD-step"},{"location":"latest/datadriven/data_driven_csv/","text":"CSV data provider supports character separated values including standard comma separated values. Each line in file represents one record except blank line or comment line. The file extension can be csv or txt . Following are examples of CSV data file used to provide test data where first line is header. The test gets executed 4 times as there are 4 data set in data file. Character separated values \u00b6 In order to use any character other than , as separator character, you need to specify comment in file #col.seperator=<char> . You can use \\ as escape character. For instance with | as separator char you can provide column value abc | def as abc \\| def . Example-1 below uses | as separator character. Example-1: logintestdata.csv #col.seperator=| user_name|password|isvalid ruchita.shah@gmail.com|pwdtest|true ruchita.shah@gmail.com|wrongpwd|false wronguser@domain.com|pwdtest|false wronguser@domain.com|wrongpwd|false Comma separated values: \u00b6 Both abc and \"abc\" are supported to represent string abc . Quoted string will eliminate use of escape char for separator char, for example with , as separator char you can provide column value abc, def as \"abc, def\" QAF supports industry standard comma separated values with quoted string. As per RFC 4180 CSV implementation leading or trailing spaces are trimmed (ignored), fields with such spaces as meaningful data must be quoted. Double quotes are not allowed in unquoted fields according to RFC 4180. Example-2: logintestdata.csv #this is comment user_name,password,isvalid ruchita.shah@gmail.com,pwdtest,true ruchita.shah@gmail.com,wrongpwd,false wronguser@domain.com,pwdtest,false wronguser@domain.com,wrongpwd,false Usage \u00b6 Java \u00b6 @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) BDD \u00b6 Meta-data:{\"dataFile\":\"resources/data/logintestdata.csv\"} BDD2 \u00b6 @dataFile:resources/data/logintestdata.csv Or Examples: {\"dataFile\":\"resources/data/logintestdata.csv\"} Gherkin \u00b6 Examples: {\"dataFile\":\"resources/data/logintestdata.csv\"}","title":"CSV Data Provider"},{"location":"latest/datadriven/data_driven_csv/#character-separated-values","text":"In order to use any character other than , as separator character, you need to specify comment in file #col.seperator=<char> . You can use \\ as escape character. For instance with | as separator char you can provide column value abc | def as abc \\| def . Example-1 below uses | as separator character. Example-1: logintestdata.csv #col.seperator=| user_name|password|isvalid ruchita.shah@gmail.com|pwdtest|true ruchita.shah@gmail.com|wrongpwd|false wronguser@domain.com|pwdtest|false wronguser@domain.com|wrongpwd|false","title":"Character separated values"},{"location":"latest/datadriven/data_driven_csv/#comma-separated-values","text":"Both abc and \"abc\" are supported to represent string abc . Quoted string will eliminate use of escape char for separator char, for example with , as separator char you can provide column value abc, def as \"abc, def\" QAF supports industry standard comma separated values with quoted string. As per RFC 4180 CSV implementation leading or trailing spaces are trimmed (ignored), fields with such spaces as meaningful data must be quoted. Double quotes are not allowed in unquoted fields according to RFC 4180. Example-2: logintestdata.csv #this is comment user_name,password,isvalid ruchita.shah@gmail.com,pwdtest,true ruchita.shah@gmail.com,wrongpwd,false wronguser@domain.com,pwdtest,false wronguser@domain.com,wrongpwd,false","title":"Comma separated values:"},{"location":"latest/datadriven/data_driven_csv/#usage","text":"","title":"Usage"},{"location":"latest/datadriven/data_driven_csv/#java","text":"@QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" )","title":"Java"},{"location":"latest/datadriven/data_driven_csv/#bdd","text":"Meta-data:{\"dataFile\":\"resources/data/logintestdata.csv\"}","title":"BDD"},{"location":"latest/datadriven/data_driven_csv/#bdd2","text":"@dataFile:resources/data/logintestdata.csv Or Examples: {\"dataFile\":\"resources/data/logintestdata.csv\"}","title":"BDD2"},{"location":"latest/datadriven/data_driven_csv/#gherkin","text":"Examples: {\"dataFile\":\"resources/data/logintestdata.csv\"}","title":"Gherkin"},{"location":"latest/datadriven/data_driven_db/","text":"Below are the properties which required to configure in property file to configure database. db.driver.class=com.mysql.jdbc.Driver db.connection.url=jdbc:mysql://localhost:3306/db db.user=username db.pwd=password Usage \u00b6 Java \u00b6 @QAFDataProvider ( sqlQuery = \"select username,password,isvalid from login_table\" ) BDD \u00b6 Meta-data:{\"sqlQuery\":\"select username,password,isvalid from login_table\"} BDD2 \u00b6 @sqlQuery:select username,password,isvalid from login_table Or Examples: {\"sqlQuery\":\"select username,password,isvalid from login_table\"} Gherkin \u00b6 Examples: {\"sqlQuery\":\"select username,password,isvalid from login_table\"}","title":"Database Data Provider"},{"location":"latest/datadriven/data_driven_db/#usage","text":"","title":"Usage"},{"location":"latest/datadriven/data_driven_db/#java","text":"@QAFDataProvider ( sqlQuery = \"select username,password,isvalid from login_table\" )","title":"Java"},{"location":"latest/datadriven/data_driven_db/#bdd","text":"Meta-data:{\"sqlQuery\":\"select username,password,isvalid from login_table\"}","title":"BDD"},{"location":"latest/datadriven/data_driven_db/#bdd2","text":"@sqlQuery:select username,password,isvalid from login_table Or Examples: {\"sqlQuery\":\"select username,password,isvalid from login_table\"}","title":"BDD2"},{"location":"latest/datadriven/data_driven_db/#gherkin","text":"Examples: {\"sqlQuery\":\"select username,password,isvalid from login_table\"}","title":"Gherkin"},{"location":"latest/datadriven/data_driven_excel/","text":"Following is the example of xls data file used to provide test data where first row is header. The test gets executed 3 times as there are 3 data set in data file. It assumes by default first sheet. If sheet is not first sheet you need to provide sheet name using meta-key sheetName . Sheet per test case \u00b6 recId Username Password Isvalid ExpectedMsg Wrong password chirag12 test123 FALSE Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest FALSE Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 FALSE Invalid Username Or Password. Please Try Again. Usage \u00b6 sheetName only required if sheet is not first sheet Java \u00b6 @QAFDataProvider ( dataFile = \"resources/data/logintestdata.xls\" , sheetName = \"LoginSheet\" ) BDD \u00b6 Meta-data:{\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\"} BDD2 \u00b6 @dataFile:resources/data/logintestdata.xls @sheetName:LoginSheet Or Examples: {\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\"} Gherkin \u00b6 Examples: {\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\"} Excel data table \u00b6 With data table, you can provide test data for more than one test case in one sheet. sheetName only required if sheet is not first sheet. Below is xls data file represents two data tables with key login and key2 . login recId Username Password Isvalid ExpectedMsg Wrong password chirag12 test123 FALSE Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest FALSE Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 FALSE Invalid Username Or Password. Please Try Again. login Key2 recId Col1 col2 coln ------- -------- --------- ------- -------- identifier-1 col1-val1 col2-val1 coln-val1 identifier-3 col1-val2 col2-val2 coln-val1 identifier-2 col1-val3 col2-val3 coln-val1 Key2 Usage \u00b6 Java \u00b6 @QAFDataProvider ( dataFile = \"resources/data/logintestdata.xls\" , sheetName = \"LoginSheet\" , key = \"login\" ) BDD \u00b6 Meta-data:{\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\", \"key\":\"login\"} BDD2 \u00b6 @dataFile:resources/data/logintestdata.xls @sheetName:LoginSheet @key:login Or Examples: {\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\", \"key\":\"login\"} Gherkin \u00b6 Examples: {\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\", \"key\":\"login\"}","title":"Excel Data Provider"},{"location":"latest/datadriven/data_driven_excel/#sheet-per-test-case","text":"recId Username Password Isvalid ExpectedMsg Wrong password chirag12 test123 FALSE Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest FALSE Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 FALSE Invalid Username Or Password. Please Try Again.","title":"Sheet per test case"},{"location":"latest/datadriven/data_driven_excel/#usage","text":"sheetName only required if sheet is not first sheet","title":"Usage"},{"location":"latest/datadriven/data_driven_excel/#java","text":"@QAFDataProvider ( dataFile = \"resources/data/logintestdata.xls\" , sheetName = \"LoginSheet\" )","title":"Java"},{"location":"latest/datadriven/data_driven_excel/#bdd","text":"Meta-data:{\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\"}","title":"BDD"},{"location":"latest/datadriven/data_driven_excel/#bdd2","text":"@dataFile:resources/data/logintestdata.xls @sheetName:LoginSheet Or Examples: {\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\"}","title":"BDD2"},{"location":"latest/datadriven/data_driven_excel/#gherkin","text":"Examples: {\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\"}","title":"Gherkin"},{"location":"latest/datadriven/data_driven_excel/#excel-data-table","text":"With data table, you can provide test data for more than one test case in one sheet. sheetName only required if sheet is not first sheet. Below is xls data file represents two data tables with key login and key2 . login recId Username Password Isvalid ExpectedMsg Wrong password chirag12 test123 FALSE Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest FALSE Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 FALSE Invalid Username Or Password. Please Try Again. login Key2 recId Col1 col2 coln ------- -------- --------- ------- -------- identifier-1 col1-val1 col2-val1 coln-val1 identifier-3 col1-val2 col2-val2 coln-val1 identifier-2 col1-val3 col2-val3 coln-val1 Key2","title":"Excel data table"},{"location":"latest/datadriven/data_driven_excel/#usage_1","text":"","title":"Usage"},{"location":"latest/datadriven/data_driven_excel/#java_1","text":"@QAFDataProvider ( dataFile = \"resources/data/logintestdata.xls\" , sheetName = \"LoginSheet\" , key = \"login\" )","title":"Java"},{"location":"latest/datadriven/data_driven_excel/#bdd_1","text":"Meta-data:{\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\", \"key\":\"login\"}","title":"BDD"},{"location":"latest/datadriven/data_driven_excel/#bdd2_1","text":"@dataFile:resources/data/logintestdata.xls @sheetName:LoginSheet @key:login Or Examples: {\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\", \"key\":\"login\"}","title":"BDD2"},{"location":"latest/datadriven/data_driven_excel/#gherkin_1","text":"Examples: {\"dataFile\":\"resources/data/logintestdata.xls\", \"sheetName\":\"LoginSheet\", \"key\":\"login\"}","title":"Gherkin"},{"location":"latest/datadriven/data_driven_json/","text":"Following is the example of JSON data file used to provide test data. The test gets executed 3 times as there are 3 data set in data file. logintestdata.json [ { \"Username\" : \"admin\" , \"password\":\"123abc123\" , \"isvalid\":false }, { \"Username\" : \"Admin\" , \"password\":\"test\" , \"isvalid\":false }, { \"Username\" : \"admin\" , \"password\":\"Chirag2193\" , \"isvalid\":true } ] Usage \u00b6 Java \u00b6 @QAFDataProvider ( dataFile = \"resources/data/logintestdata.json\" ) BDD \u00b6 Meta-data:{\"dataFile\":\"resources/data/logintestdata.json\"} BDD2 \u00b6 @dataFile:resources/data/logintestdata.json Or Examples: {\"dataFile\":\"resources/data/logintestdata.json\"} Gherkin \u00b6 Examples: {\"dataFile\":\"resources/data/logintestdata.json\"}","title":"JSON Data Provider"},{"location":"latest/datadriven/data_driven_json/#usage","text":"","title":"Usage"},{"location":"latest/datadriven/data_driven_json/#java","text":"@QAFDataProvider ( dataFile = \"resources/data/logintestdata.json\" )","title":"Java"},{"location":"latest/datadriven/data_driven_json/#bdd","text":"Meta-data:{\"dataFile\":\"resources/data/logintestdata.json\"}","title":"BDD"},{"location":"latest/datadriven/data_driven_json/#bdd2","text":"@dataFile:resources/data/logintestdata.json Or Examples: {\"dataFile\":\"resources/data/logintestdata.json\"}","title":"BDD2"},{"location":"latest/datadriven/data_driven_json/#gherkin","text":"Examples: {\"dataFile\":\"resources/data/logintestdata.json\"}","title":"Gherkin"},{"location":"latest/datadriven/data_driven_xml/","text":"If we want to provide data using xml file below is the sample xml file. The test gets executed 4 times as there are 4 data set in data file. <root> <!-- data for login test --> <login> <data> <user_name> ruchita.shah1989+02@gmail.com </user_name> <password> aravotest </password> <isvalid> true </isvalid> </data> <data> <user_name> ruchita.shah1989+02@gmail.com </user_name> <password> wrongpwd </password> <isvalid> false </isvalid> </data> <data> <user_name> wronguser@domain.com </user_name> <password> aravotest </password> <isvalid> false </isvalid> </data> <data> <user_name> wronguser@domain.com </user_name> <password> wrondpwd </password> <isvalid> false </isvalid> </data> </login> <!-- file may contain other data --> </root> The test case code will remain same only the change will be in meta-data as below. You need to specify xml file using dataFile only if it is not in configured resources . Usage \u00b6 Java \u00b6 @QAFDataProvider ( dataFile = \"data/logintestdata.xml\" , key = \"login.data\" ) BDD \u00b6 Meta-data:{\"dataFile\":\"data/logintestdata.xml\", \"key\":\"login.data\"} BDD2 \u00b6 @dataFile:data/logintestdata.xml @key:login.data Or Examples: {\"dataFile\":\"data/logintestdata.xml\", \"key\":\"login.data\"} Gherkin \u00b6 Examples: {\"dataFile\":\"data/logintestdata.xml\", \"key\":\"login.data\"}","title":"XML Data Provider"},{"location":"latest/datadriven/data_driven_xml/#usage","text":"","title":"Usage"},{"location":"latest/datadriven/data_driven_xml/#java","text":"@QAFDataProvider ( dataFile = \"data/logintestdata.xml\" , key = \"login.data\" )","title":"Java"},{"location":"latest/datadriven/data_driven_xml/#bdd","text":"Meta-data:{\"dataFile\":\"data/logintestdata.xml\", \"key\":\"login.data\"}","title":"BDD"},{"location":"latest/datadriven/data_driven_xml/#bdd2","text":"@dataFile:data/logintestdata.xml @key:login.data Or Examples: {\"dataFile\":\"data/logintestdata.xml\", \"key\":\"login.data\"}","title":"BDD2"},{"location":"latest/datadriven/data_driven_xml/#gherkin","text":"Examples: {\"dataFile\":\"data/logintestdata.xml\", \"key\":\"login.data\"}","title":"Gherkin"},{"location":"latest/datadriven/data_filter/","text":"Consider following test data return by data provider. | TestcaseID | uname | password | id | name | price | |============|=======|==========|====|======|=======| | 12345 | user1 | @Test123 # | 101 | Item-1 | 10.50 | | 12346 | user1 | @Test123 # | 102 | Item-2 | 50.0 | | 12347 | user1 | @Test123 # | 103 | Item-3 | 125.99 | | 12348 | user2 | @Test123 # | 104 | Item-4 | 99.99 | | 12349 | user2 | @Test123 # | 105 | Item-5 | 199.0 | | 12350 | user3 | @Test123 # | 106 | Item-6 | 15.0 | Filter \u00b6 filter meta-key used to apply filter on data set returned by the data-provider that returns List of Maps. It must represent logical expression that returns true or false. You can use map key as context variable and test meta-data as parameter. For example above test data has \"uname\", \"name\", \"id\" and \"price\", you can have expression that filters records for price above 100 as below: - price>100 - uname.equalsIgnoreCase('user1') && price>25 - id==103 As you can use test case meta-data, method name as \"method\" and class name as \"class\" as parameters, Another example of using test case meta-data in filter assuming test case meta-data has meta-data \"testCaseID\". This is more useful when configuring data provider globally . filter=\"TestcaseID=='${testCaseID}'\" filter=\"TestcaseID.equalsIgnoreCase('${method}')\" Java @QAFDataProvider (..., filter = \"id==103\" ) @Test public void editItem ( Map < String , Object > data ){ //implementation } BDD Scenario: editItem Meta-data: {<data-provider meta data>,'filter':'id==103'} BDD2 <data-provider meta data> @filter:id==103 Scenario: editItem #implementation Gherkin Scenario: editItem #implementation Examples: {<data-provider meta data>,'filter':'id==103'} indices \u00b6 Indices start from 0. In example below indices set to [1,3] will return second (id=102) and forth (id=104) records. Java @MetaData ( \"{'indices':[1,3]}\" ) @QAFDataProvider (...) @Test public void editItem ( Map < String , Object > data ){ //implementation } BDD Scenario: editItem Meta-data: {<data-provider meta data>,'indices':[1,3]} BDD2 <data-provider meta data> @indices:[1,3] Scenario: editItem #implementation Gherkin Scenario: editItem #implementation Examples: {<data-provider meta data>,'indices':[1,3]} Range \u00b6 You can specify start index using from and end index using to to provide subset of records in data set base 1. Java @MetaData ( \"{'from':3}\" ) // will return subset starting from third record in dataset @MetaData ( \"{'to':3}\" ) // will return subset from first to third record (including first and third) in dataset @MetaData ( \"{'from':2,'to':4}\" ) // will return subset from second to forth record (including second and forth) in datset BDD # will return subset starting from third record in dataset Meta-data: {<data-provider meta data>,'from':3} # will return subset from first to third record (including first and third) in dataset Meta-data:{<data-provider meta data>,'to':3} Meta-data:{<data-provider meta data>,'from':2,'to':4} # will return subset from second to forth record (including second and forth) in datset BDD2 # will return subset starting from third record in dataset <data-provider meta data> @from:3 # will return subset from first to third record (including first and third) in dataset <data-provider meta data> @to:3 <data-provider meta data> @from:2 @to:4 # will return subset from second to forth record (including second and forth) in datset","title":"Test data Filter"},{"location":"latest/datadriven/data_filter/#filter","text":"filter meta-key used to apply filter on data set returned by the data-provider that returns List of Maps. It must represent logical expression that returns true or false. You can use map key as context variable and test meta-data as parameter. For example above test data has \"uname\", \"name\", \"id\" and \"price\", you can have expression that filters records for price above 100 as below: - price>100 - uname.equalsIgnoreCase('user1') && price>25 - id==103 As you can use test case meta-data, method name as \"method\" and class name as \"class\" as parameters, Another example of using test case meta-data in filter assuming test case meta-data has meta-data \"testCaseID\". This is more useful when configuring data provider globally . filter=\"TestcaseID=='${testCaseID}'\" filter=\"TestcaseID.equalsIgnoreCase('${method}')\" Java @QAFDataProvider (..., filter = \"id==103\" ) @Test public void editItem ( Map < String , Object > data ){ //implementation } BDD Scenario: editItem Meta-data: {<data-provider meta data>,'filter':'id==103'} BDD2 <data-provider meta data> @filter:id==103 Scenario: editItem #implementation Gherkin Scenario: editItem #implementation Examples: {<data-provider meta data>,'filter':'id==103'}","title":"Filter"},{"location":"latest/datadriven/data_filter/#indices","text":"Indices start from 0. In example below indices set to [1,3] will return second (id=102) and forth (id=104) records. Java @MetaData ( \"{'indices':[1,3]}\" ) @QAFDataProvider (...) @Test public void editItem ( Map < String , Object > data ){ //implementation } BDD Scenario: editItem Meta-data: {<data-provider meta data>,'indices':[1,3]} BDD2 <data-provider meta data> @indices:[1,3] Scenario: editItem #implementation Gherkin Scenario: editItem #implementation Examples: {<data-provider meta data>,'indices':[1,3]}","title":"indices"},{"location":"latest/datadriven/data_filter/#range","text":"You can specify start index using from and end index using to to provide subset of records in data set base 1. Java @MetaData ( \"{'from':3}\" ) // will return subset starting from third record in dataset @MetaData ( \"{'to':3}\" ) // will return subset from first to third record (including first and third) in dataset @MetaData ( \"{'from':2,'to':4}\" ) // will return subset from second to forth record (including second and forth) in datset BDD # will return subset starting from third record in dataset Meta-data: {<data-provider meta data>,'from':3} # will return subset from first to third record (including first and third) in dataset Meta-data:{<data-provider meta data>,'to':3} Meta-data:{<data-provider meta data>,'from':2,'to':4} # will return subset from second to forth record (including second and forth) in datset BDD2 # will return subset starting from third record in dataset <data-provider meta data> @from:3 # will return subset from first to third record (including first and third) in dataset <data-provider meta data> @to:3 <data-provider meta data> @from:2 @to:4 # will return subset from second to forth record (including second and forth) in datset","title":"Range"},{"location":"latest/faqs/how_can_i_create_custom_component/","text":"Custom component can be created by extending Component class. public class TestComponent extends QAFWebComponent { public TestComponent ( String locator ) { super ( locator ); } \u2026 . } Custom component can be used in page class as below. @FindBy ( locator = \u201d locator \u201d ) TestComponent testComponent ; @FindBy ( locator = \u201d locator \u201d ) List < TestComponent > testComponent ; Refer below example for custom component. To create a component you need to extend \u201ccom.qmetry.qaf.automation.webdriver.QAFWebComponent\u201d. {% include inline_image.html file=\"CustomComponent1.png\" alt=\"Custom Component \" %} {% include inline_image.html file=\"CustomComponent2.png\" alt=\"Custom Component \" %} public class Property extends QAFWebComponent { @FindBy ( locator = NAME_LOC ) private QAFWebElement name ; @FindBy ( locator = BOOK_BTN_LOC ) private QAFWebElement bookBtn ; @FindBy ( locator = RATEOPTION_COMP_LOC ) Private List < RateOption > rateOptions ; //child component @FindBy ( locator = RATEOPTION_RATECAL_COMP_LOC ) private WebRateCalendar ratCal ; \u2026 public Property ( String locator ) { super ( locator ); } //child component public class WebRateOption extends QAFWebComponent { @FindBy ( locator = RATEOPTION_LABEL_LOC ) private QAFWebElement label ; @FindBy ( locator = RATEOPTION_RATETEXT_LOC ) private QAFWebElement rateText ; \u2026 public WebRateOption ( String locator ) { super ( locator ); } } } public class SearchResultsPageImpl extends WebDriverBaseTestPage < WebHomePageImpl > { @FindBy ( locator = CHECKINDATE_INPUT_LOC ) private QAFWebElement checkinDate ; @FindBy ( locator = CHECKOUTDATE_INPUT_LOC ) private QAFWebElement checkoutDate ; @FindBy ( locator = PROPERTY_COMP_LOC ) private List < Property > properties ; \u2026 public List < Property > getProperties () { return properties ; } ... } String PROPERTY_COMP_LOC = \"{'locator':'css=.property';'desc':'Property on Search Result Page'}\" ; String RATEOPTION_COMP_LOC = \"{'locator':'css=.rateOption';'desc':'Property Rate Option'}\" ; String RATE_CAL_LINK_LOC = \"{'locator':'css=.multiRateCalendarLink';'desc':'Browse Dates/Rates Calander Link'}\" ; {% include inline_image.html file=\"CustomComponent3.png\" alt=\"Custom Component \" %} You can notice that in page list of property is defined as list of Property component. The property component also defines RateOptions component and a calendar component. The next step is overriding equals method to search specific component from list of component. For example below sample code demonstrate that we can match property component with string (name or id of property) or a data bean. @Override publicboolean equals ( Object obj ) { if ( obj instanceof PropertyDataBean ) { PropertyDataBean bean = ( PropertyDataBean ) obj ; return ( StringUtil . isBlank ( bean . getPropertyName ()) || getName (). getText (). trim () . equalsIgnoreCase ( bean . getPropertyName (). trim ())) && ( StringUtil . isBlank ( bean . getPropertyId ()) || getPropertyId (). trim () . equalsIgnoreCase ( bean . getPropertyId (). trim ())) && (( null == bean . isAvailable ()) || this . isAvailable ()) && ( StringUtil . isBlank ( bean . getCityStateZip ()) || getAddress (). contains ( bean . getCityStateZip ())); } if ( obj instance of String ) { return getName (). getText (). equalsIgnoreCase (( String ) obj ) || getPropertyId (). equalsIgnoreCase (( String ) obj ); } return super . equals ( obj ); } public class PropertyDataBean extends BaseDataBean { private String propertyName ; private String propertyAddress1 ; private String cityStateZip ; private Boolean isAvailable = null ; private String propertyId ; private String offerName ; private String phoneNumber ; ... public PropertyDataBean () { } public PropertyDataBean ( Map < String , String > data ) { super ( data ); } ... //getters and setters } Now following code in \u201cSearchResultsPageImpl\u201d will return you a specific property to work with as per your requirement public Property getProperty ( String name ) { return getProperty (( Object ) name ); } public Property getProperty ( PropertyDataBean property ) { return getProperty (( Object ) property ); } private Property getProperty ( Object o ) { for ( Property property : getProperties ()) { if ( property . equals ( o )) { return property ; } } return null ; } {% include inline_image.html file=\"CustomComponent4.png\" alt=\"Custom Component \" %} Above is example of reusable component in different page/component. You need to create component same as above and declare in different page/component where it is used. @FindBy ( locator = CALENDAR_COMPONENT_LOC ) public WebCalendar calendar ;","title":"How can I create custom component/element?"},{"location":"latest/faqs/how_can_i_implement_dynamic_page_flow/","text":"Consider the following case where page flow is configurable in AUT. According to flow one page flow is Review Page -> Passenger Page \u2013 > Payment Page Another possible flow is Review Page -> Payment Page. {% include inline_image.html file=\"Dynamic_Linked_Pages.png\" alt=\"Dynamic Linked Pages \" %} Blow sample shows you the implementation for such case. public class ReviewFlightPage extends WebDriverBaseTestPage < ReviewPage > implements PaymentLocators , PaymentsPageLauncher { } public class PassengerPage extends WebDriverBaseTestPage < ReviewFlightPage > implements PaymentLocators , PaymentsPageLauncher { } public class PaymentPage extends WebDriverBaseTestPage < PaymentsPageLauncher > implements PaymentLocators { protecte void initParent () { this . parent = ( pageProps . getInt ( \u201c review . next . flow \u201d ) == 6 ) ? new ReviewFlightPage () : new PassengerPage (); } }","title":"How can I implement dynamic page flow using page hierarchy design?"},{"location":"latest/faqs/how_can_i_make_a_test_data_driven/","text":"To make any test data driven you can use QAFDataProvider annotation on test method. You can provide data in CSV, JSON, MS-Excel file or from database. @QAFDataProvider ( dataFile = \" resources/data/searchText.csv \" ) @QAFDataProvider ( dataFile = \"resources/data/searchText.json\" ) @QAFDataProvider ( dataFile = \"resources/data/testdata.xls\" ) @QAFDataProvider ( dataFile = \"resources/data/testdata.xls\" , sheetName = \"TC2\" ) @QAFDataProvider ( dataFile = \"resources/data/testdata.xls\" , labelName = \"TC2\" ) @QAFDataProvider ( sqlQuery = \"select col1, col2 from tbl\" ) To configure using property global.testdata = [<param>=value] global.testdata = dataFile = \"resources/data/${class}/${method}.csv\" global.testdata = dataFile = \"resources/data/testdata.xls\"; sheetName=\"${class}\";labelName=\"${method}\" global.testdata = dataFile = \"resources/data/${class}.xls\"; sheetName=\"${ method }\" In above example you can notice ${class} and ${method} parameters are used which you can use as per your requirement. To set data provider parameters for individual test method you can provide property as below: <tc_name>.testdata = [<param>=value] TC02.testdata = dataFile = \"resources/data/testdata.xls\"; sheetName=\"TC2\" TC01.testdata = sqlQuery = \" select col1, col2 from tbl \"","title":"How can I make a test Data driven?"},{"location":"latest/faqs/how_can_i_provide_desired_capabilities_when_using_qas/","text":"For all driver set property driver.additional.capabilities = {<capabilityname1>=<value1>,<capabilityname2>=<value2>} For specific driver set property <driver>.additional.capabilities = {<capabilityname1>=<value1>,<capabilityname2>=<value2>} Example: chrome.additional.capabilities = {\"chromeOptions\":{\"mobileEmulation\":{\"deviceName\":\"Apple iPhone 5\"}}}","title":"How can I provide desired capabilities when using Qmetry Automation Framework?"},{"location":"latest/faqs/how_can_i_run_my_test_on_cloud_saucelab/","text":"Please refer: running-test-on-cloud-with-qmetry-automation-framework","title":"How can I run my test on cloud (Sauce Lab)?"},{"location":"latest/faqs/how_can_i_switch_to_another_driver/","text":"In some exceptional changes, it may be required to change the driver. For example if you want to switch to any new driver while executing on any other driver, call the following steps. By changing any of these property existing driver teardowns and new driver instance creates driver . name driver . additional . capabilities remote . server remote . port","title":"How can I switch to another driver during same testcase execution."},{"location":"latest/faqs/how_can_i_use_existing_driver_session/","text":"Following are the steps: Webdriver session can be created through http://localhost:4444/wd/hub/static/resource/hub.html . After starting session you can perform manual steps on the browser! You need to use only appropriate remote driver for this purpose. (e.g. firefoxRemoteDriver) You need to provide session id by setting a property \u201cwebdriver.remote.session\u201d. The session id can be found at http://localhost:4444/wd/hub/static/resource/hub.html from where you had created session.","title":"How can I use existing driver session?"},{"location":"latest/faqs/how_can_i_use_selenium_grid_with_qas/","text":"You need to set appropriate server, port and remote driver. For example you can set following properties in application property file. remote.server = <ip or machine name> remote.port = <port used by grid/server normally 4444> driver.name = firefoxRemoteDriver The same can be provided either by command line as system property or in testNG configuration file as parameter.","title":"How can I Use Selenium grid with Qmetry Automation Framework?"},{"location":"latest/faqs/how_multiple_parents_supported_in_page_hierarchy/","text":"The framework has multiple route support. In case of multiple route, to navigate to specific page you need to define launcher interface that extends BaseTestPage and provide that interface as parent to the page with multiple route.Implement launcher interface in each possible parent class. At the time of defining test provide parent as argument while creating page object. Here is the example for better understanding: interface MultiRoutePageLauncher extends TestPage { public void launchMultiRoutePage ( PageLocator loc ); } public class MultiRoutePage extends BaseTestPage { public MultiRoutePage ( MultiRoutePageLauncher parent ) { super ( parent ); } public MultiRoutePage () { // either provide default route //or remove this constructor this ( new Route1Page ()); } @Override protected void openPage ( PageLocator loc ) { parent . launchMultiRoutePage ( loc ); } \u2026 } public class Route1Page extends BaseTestPage implements MultiRoutePageLauncher { @Override public void launchMultiRoutePage ( PageLocator loc ) { // steps to open page. } \u2026 } public class Route2Page extends BaseTestPage implements MultiRoutePageLauncher { @Override public void launchMultiRoutePage ( PageLocator loc ) { // steps to open page. } \u2026 } Your test method will look like: @Test public void testMethod () { // Default Route MultiRoutePage multiRoutePage = new MultiRoutePage (); // route 1 // MultiRoutePage multiRoutePage = new MultiRoutePage(new Route1Page()); // route 2 //MultiRoutePage multiRoutePage = new MultiRoutePage(new Route2Page()); MultiRoutePage . launchPage ( pageLocator ); \u2026 }","title":"How multiple parents supported in page hierarchy?"},{"location":"latest/faqs/how_to_configure_bdd_for_execution/","text":"Please refer xml configuration examples provided here. Example-1 <?xml version=\"1.0\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite verbose=\"0\" name=\"QAF Demo\"> <parameter name=\"driver.name\" value=\"firefoxDriver\" /> <test name=\"Sample BDD Test\" enabled=\"true\"> <classes> <class name=\"com.qmetry.qaf.automation.step.client.text.BDDTestFactory\"/> </classes> </test> </suite> Above configuration will execute all the bdd test in scenario directory and all its subdirectory Example-2: specifying file(s) location You can specify bdd file location by using scenario.file.loc parameter. The default value is \u201cscenarios\u201d. The scenario.file.loc parameter value can be a file or directory from which you want to configure test for execution. It can also hold multiple values separated by semicolon (;) for example: <parameter name= \"scenario.file.loc\" value= \"scenarios/testsuite1.bdd; scenarios/testsuite2.bdd \" /> OR <parameter name= \"scenario.file.loc\" value= \"scenarios/testsuite1.bdd; scenarios/module1; scenarios/module2\" /> <?xml version=\"1.0\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite verbose= \"0\" name= \"QAF Demo\" > <parameter name= \"driver.name\" value= \"firefoxDriver\" /> <test name= \"Sample BDD Test\" enabled= \"true\" > <parameter name= \"scenario.file.loc\" value= \"scenarios/testsuite.bdd\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory\" /> </classes> </test> </suite> Above configuration will execute only testsuite.bdd . Example-3: specifying file(s) location <?xml version=\"1.0\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite verbose= \"0\" name= \"QAF Demo\" > <parameter name= \"driver.name\" value= \"firefoxDriver\" /> <test name= \"Sample BDD Test\" enabled= \"true\" > <parameter name= \"scenario.file.loc\" value= \" scenarios/testsuite1.bdd; scenarios/module1; scenarios/module2\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory\" /> </classes> </test> </suite> Above configuration will execute testsuite.bdd and all .bdd file(s) in module1 directory and its sub-directory and all .bdd file(s) of module2 directory and its sub directory. Example-4 specifying groups <?xml version=\"1.0\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite verbose= \"0\" name= \"QAF Demo\" > <parameter name= \"driver.name\" value= \"firefoxDriver\" /> <test name= \"Sample BDD Test\" enabled= \"true\" > <groups> <run> <include name= \"SMOKE\" /> </run> </groups> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory\" /> </classes> </test> </suite> Above configuration will execute scenarios with group SMOKE. You can use include and exclude as per your requirement.","title":"How to configure BDD for execution"},{"location":"latest/faqs/how_to_configure_kwd_for_execution/","text":"Please refer xml configuration examples provided here. Example-1 <?xml version=\"1.0\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite verbose= \"0\" name= \"QAF Demo\" > <parameter name= \"driver.name\" value= \"firefoxDriver\" /> <test name= \"Sample KWD Test\" enabled= \"true\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.KWDTestFactory\" /> </classes> </test> </suite> Above configuration will execute all the kwd test in scenario directory and all its subdirectory Example-2: specifying file(s) location You can specify kwd file location by using scenario.file.loc parameter. The default value is \u201cscenarios\u201d. The scenario.file.loc parameter value can be a file or directory from which you want to configure test for execution. It can also hold multiple values separated by semicolon (;) for example: <parameter name= \"scenario.file.loc\" value= \"scenarios/testsuite1.kwd; scenarios/testsuite2.kwd \" /> <?xml version=\"1.0\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite verbose= \"0\" name= \"QAF Demo\" > <parameter name= \"scenario.file.loc\" value= \"scenarios/testsuite1.kwd; scenarios/module1; scenarios/module2\" /> <parameter name= \"driver.name\" value= \"firefoxDriver\" /> <test name= \"Sample KWD Test\" enabled= \"true\" > <parameter name= \"scenario.file.loc\" value= \"scenarios/testsuite.kwd\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.KWDTestFactory\" /> </classes> </test> </suite> Above configuration will execute only testsuite.kwd . Example-3: specifying file(s) location You can specify kwd file location by using scenario.file.loc parameter. The default value is \u201cscenarios\u201d. You can provide \u201cscenario.file.loc\u201d either in properties file or in xml configuration file or from command line. Value for scenario.file.loc can be file or directory (or combination of both) from which you want to configure test for execution. It can hold multiple values separated by semicolon (;). <parameter name= \"scenario.file.loc\" value= \"scenarios/testsuite1.kwd; scenarios/testsuite2.kwd \" /> OR <parameter name= \"scenario.file.loc\" value= \"scenarios/testsuite1.kwd; scenarios/module1; scenarios/module2\" /> <?xml version=\"1.0\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite verbose= \"0\" name= \"QAF Demo\" > <parameter name= \"driver.name\" value= \"firefoxDriver\" /> <test name= \"Sample KWD Test\" enabled= \"true\" > <parameter name= \"scenario.file.loc\" value= \" scenarios/testsuite1.kwd; scenarios/module1; scenarios/module2\" /> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.KWDTestFactory\" /> </classes> </test> </suite> Above configuration will execute testsuite.kwd and all .kwd file(s) in module1 directory and its sub-directory and all .kwd file(s) of module2 directory and its sub directory. Example-4 specifying groups <?xml version=\"1.0\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite verbose= \"0\" name= \"QAF Demo\" > <parameter name= \"driver.name\" value= \"firefoxDriver\" /> <test name= \"Sample KWD Test\" enabled= \"true\" > <groups> <run> <include name= \"SMOKE\" /> </run> </groups> <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.KWDTestFactory\" /> </classes> </test> </suite> Above configuration will execute scenarios with group SMOKE. You can use include and exclude as per your requirement.","title":"How to configure KWD for execution"},{"location":"latest/faqs/how_to_migrate_from_older_version_to_latest_version/","text":"Follow below steps to use QAF 2.1.8: Rename below properties. selenium.defaultBrowser\u2192driver.name selenium.server\u2192remote.server selenium.port\u2192remote.port Single quote (\u2018) or Double quote (\u201c) is compulsory for Test Step string argument Copy dashboard folder and dashboard.html file for latest report. Github Repo As package structure has been changed from com.infostretch to com.qmetry.qaf , refactoring is required.One can use normal replace function of editor as well.","title":"How to migrate from older version to latest version"},{"location":"latest/faqs/how_to_run_appium_testcases_on_perfecto/","text":"Follow the below steps to execute Appium scripts on Perfecto. Step 1: Below are the properties that we need to set in application.properties file appium.additional.capabilities = { 'user' : 'user@infostretch.com', 'password' : 'password', 'deviceName' : '0123456789', 'automationName' : 'Appium', 'platformName' : 'Android', 'driverClass' : 'io.appium.java_client.android.AndroidDriver' } remote.server = https://cloud.perfectomobile.com/nexperience/perfectomobile/wd/hub driver.name = appiumDriver env.baseurl = https://cloud.perfectomobile.com/nexperience/perfectomobile/wd/hub appName = Contact Manager Step 2: Create Webdriver listener. Create or update onInitialize method, to launch application when driver initialized. ... public class PerfectoDriverListener extends QAFWebDriverCommandAdapter { @Override public void onInitialize ( QAFExtendedWebDriver driver ) { String appName = ConfigurationManager . getBundle (). getString ( \"appName\" ); //Close Application if already its opened String command = \"mobile:application:close\" ; Map < String , Object > params = new HashMap < String , Object > (); params . put ( \"name\" , appName ); try { (( RemoteWebDriver ) driver . getUnderLayingDriver ()) . executeScript ( command , params ); } catch ( Exception e ) { System . err . println ( \"Unable to close app: \" + appName ); } //Open Application command = \"mobile:application:open\" ; (( RemoteWebDriver ) driver . getUnderLayingDriver ()). executeScript ( command , params ); //Switch Context RemoteExecuteMethod executeMethod = new RemoteExecuteMethod ( ( RemoteWebDriver ) driver . getUnderLayingDriver ()); params . clear (); params . put ( \"name\" , \"NATIVE\" ); executeMethod . execute ( DriverCommand . SWITCH_TO_CONTEXT , params ); } } Step 4: Registering listener To register listener set property \u201cwd.command.listeners\u201d. For example to register above created listener you need to set property as below: wd.command.listeners = com.ispl.automation.sample.support.webdriver.PerfectoDriverListener","title":"How to run existing Appium testcases on Perfecto?"},{"location":"latest/faqs/how_to_run_mobile_web_app_on_desktop_browser/","text":"You can run your mobile web app on Firefox as well as on chrome with modify header. Using Firefox: \u00b6 First close all of the Firefox instances then create new Firefox profile. Profile can be created by following Use the Profile Manager to create and remove Firefox profiles Install Modify Header Add user agent string as follows In Firefox, click on the Tools menu, and choose Modify Headers. The Modify Headers dialog appears (it isn\u2019t the most intuitive interface): In the drop-down list at the top-left of the screen, choose Add In the first text box, type 'User agent Name' In the second box, paste in the User Agent Profile URL for the desired mobile device. UA strings can be found here Click the Add button Now turn on the Modify Headers and Test whether it works by navigating to any mobile website. Close the browser To use this profile in automation with QAF, provide webdriver.firefox.profile=<PROFILE_NAME> in application.properties file. Provide sysproperty in testng task of runtests target in scripts/seleniumtestrunner.xml file as follows. sysproperty key=\"webdriver.firefox.profile\" value=\"PROFILE_NAME\" / Using Chrome: \u00b6 1.Provide following property in application.properties file chrome.additional.capabilities = {\"chromeOptions\":{\"mobileEmulation\":{\"deviceName\":\"Google Nexus 5\"}}} webdriver.chrome.driver = D:/chromedriver.exe driver.name = chromeDriver 2.Follow the link for specifying a device from the DevTools Emulation panel as the value for \u201cdeviceName\". https://sites.google.com/a/chromium.org/chromedriver/mobile-emulation Another way to run using Chrome : Create Chrome Profile on which mobile web tests will execute. Provide following property in application.properties file chrome.additional.capabilities = {\"chromeOptions\":{\"args\":[\"user-data-dir=D:/tools/webdriver/chromedriver_win32/mobile\"]}} {% include note.html content=\"Please update path of user-data-dir as per your chrome profile dir.\" %}","title":"How to run mobile web app on desktop browser?"},{"location":"latest/faqs/how_to_run_mobile_web_app_on_desktop_browser/#using-firefox","text":"First close all of the Firefox instances then create new Firefox profile. Profile can be created by following Use the Profile Manager to create and remove Firefox profiles Install Modify Header Add user agent string as follows In Firefox, click on the Tools menu, and choose Modify Headers. The Modify Headers dialog appears (it isn\u2019t the most intuitive interface): In the drop-down list at the top-left of the screen, choose Add In the first text box, type 'User agent Name' In the second box, paste in the User Agent Profile URL for the desired mobile device. UA strings can be found here Click the Add button Now turn on the Modify Headers and Test whether it works by navigating to any mobile website. Close the browser To use this profile in automation with QAF, provide webdriver.firefox.profile=<PROFILE_NAME> in application.properties file. Provide sysproperty in testng task of runtests target in scripts/seleniumtestrunner.xml file as follows. sysproperty key=\"webdriver.firefox.profile\" value=\"PROFILE_NAME\" /","title":"Using Firefox:"},{"location":"latest/faqs/how_to_run_mobile_web_app_on_desktop_browser/#using-chrome","text":"1.Provide following property in application.properties file chrome.additional.capabilities = {\"chromeOptions\":{\"mobileEmulation\":{\"deviceName\":\"Google Nexus 5\"}}} webdriver.chrome.driver = D:/chromedriver.exe driver.name = chromeDriver 2.Follow the link for specifying a device from the DevTools Emulation panel as the value for \u201cdeviceName\". https://sites.google.com/a/chromium.org/chromedriver/mobile-emulation Another way to run using Chrome : Create Chrome Profile on which mobile web tests will execute. Provide following property in application.properties file chrome.additional.capabilities = {\"chromeOptions\":{\"args\":[\"user-data-dir=D:/tools/webdriver/chromedriver_win32/mobile\"]}} {% include note.html content=\"Please update path of user-data-dir as per your chrome profile dir.\" %}","title":"Using Chrome:"},{"location":"latest/faqs/how_to_run_mweb_on_android/","text":"Following are possible ways for mobile web for android platform. 1.Using chromedriver for mobile chrome on emulator/device 2.Using appium for mobile chrome on emulator/device Using chromedriver for mobile chrome on emulator/device 1.Download chrome driver 2.set driver as chrome driver driver.name = chromeDriver 3.set property webdriver.chrome.driver property webdriver.chrome.driver = d:/chromedriver.exe 4.Set chrome.additional.capabilities to run test on mobile chrome. 5.Start emulator or connect device 6.Make sure chrome browser is installed in emulator/device 7.Run tests Using appium for mobile chrome on emulator/device 1.Make sure Appium java client lib is in your ivy/class path <dependency org= \"io.appium\" name= \"java-client\" rev= \"1.6.2\" /> 2.set driver as appium Driver driver.name = appiumDriver 3.Set additional capabilities, you need to provide \"app\" value \"Chrome\". Here is the sample appium.additional.capabilities = {'deviceName':'<device_id>','platformName':'Android','automationName':'Appium','browserName': 'Chrome', 'driverClass' : 'io.appium.java_client.android.AndroidDriver'} 4.Start emulator or connect device where appium server is running 5.Make sure chrome browser is installed in emulator/device 6.Run tests....","title":"How to run mobile web automation on Android"},{"location":"latest/faqs/how_to_run_on_native_app_on_appium/","text":"Run Native app on appium : 1. Appium server To install and setting up appium server please follow this link : http://appium.io/slate/en/master/?java# 2. Appium Server Configuration In Appium set Application Path to ContactManager application 3. Project Configuration application.properties file settings for Appium: driver.name = appiumDriver Appium server capabilities: appium.additional.capabilities = {'browser_name':'','deviceName':'emulator-5554','platformName':'Android','automationName':'Appium','driverClass':'io.appium.java_client.android.AndroidDriver'} User need to set additional capabilities as per application environment. Detailed list of appium capabilities you can find here: Appium Server Capabilities 4. Add appium java-client dependency in ivy.xml file <dependency org= \"io.appium\" name= \"java-client\" rev= \"2.2.0\" /> 5. Make sure appium server is started Execution: Run the project","title":"How to run on Native application on appium?"},{"location":"latest/faqs/how_to_run_test_on_cloud/","text":"First of all user must required valid cloud exection provider's account which user can create from their web site. To run QAS test on cloud user required to add following keys either in application.properties or in testrun_config.xml driver.name = remotedrivername where \"remotedrivername\" can be \"firefoxRemoteDriver\",\"chromeRemoteDriver\" or any other valid remote driver remote.server = <url_where_selenium_grid_is_running> User can also provide additional properties of driver using \"browser.additional.capabilities\" key where \"browser\" can be \"firefox\", \"chrome\" or any other browser Given below keys with proper values driver.name = firefoxRemoteDriver remote.server = <url_where_selenium_grid_is_running> firefox.additional.capabilities = {'name':'SampleTestOnFirefox','platform':'Windows 8','version':'40.0'}","title":"How to run test on cloud or selenium grid?"},{"location":"latest/faqs/how_to_run_test_on_suace_lab/","text":"First of all user must required valid sauce lab account which user can create from sauce lab web site. To run QAS test on Sauce Lab user required to add following keys either in application.properties or in testrun_config.xml driver.name = remotedrivername where \"remotedrivername\" can be \"firefoxRemoteDriver\",\"chromeRemoteDriver\" or any other valid remote driver remote.server = http://<username>:<access-key>@ondemand.saucelabs.com:80/wd/hub where \"username\" = sauce lab user name , \"access-key\" = sauce lab access key User can also provide additional properties of driver using \"browser.additional.capabilities\" key where \"browser\" can be \"firefox\", \"chrome\" or any other browser Given below keys with proper values driver.name = firefoxRemoteDriver remote.server = http://<username>:<access-key>@ondemand.saucelabs.com:80/wd/hub firefox.additional.capabilities = {'name':'SampleTestOnFirefox','platform':'Windows 8','version':'40.0'}","title":"How to run test on suace lab?"},{"location":"latest/faqs/how_to_use_driver/","text":"Default available driver names in QAF: firefoxDriver iExplorerDriver chromeDriver operaDriver androidDriver iPhoneDriver appiumDriver. Available Driver : To use available driver, provide driver class as capability. Example: To use firefoxDriver driver.name=firefoxDriver To use appiumDriver for android, driver.name=appiumDriver appium.additional.capabilities={\u2018driverClass\u2019:\u2019io.appium.java_client.android.AndroidDriver\u2019} Other Driver : To use custom driver, provide driver class as capability. Example: To use PhantomJSDriver driver.name=otherDriver other.additional.capabilities={\u2018driverClass\u2019:\u2019io.appium.java_client.android.AndroidDriver\u2019} You can also use driverClass capabilities as different ways .","title":"How to use driver?"},{"location":"latest/faqs/i_am_getting_license_error_during_execution/","text":"When you try to execute your test case and you receive error like below. *Your license key has expired on.... Replace \u201clicense.key\u201d value with the valid license key in application.properties. You can locate application.properties file under resources dir in your project.","title":"I am getting License error during execution"},{"location":"latest/faqs/is_any_logging_system_used_in_qas/","text":"Yes, Apache logging services is used and logger object is available at test level as well as page level. Configuration is provided through log4j.properties file. For configuring logging as per your requirement please refer log4j documentation.","title":"Is any logging system used in Qmetry Automation Framework?"},{"location":"latest/faqs/maketest_data_driven_in_qas/","text":"To make any test data driven you can use QAFDataProvider annotation on test method, where test get executed for each data set provided in external data file. QAF supports following file formats to provide data for data driven tests. CSV MS-EXCEL JSON XML DATABASE TXT @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @QAFDataProvider ( dataFile = \"resources/data/testdata.xls\" ) @QAFDataProvider ( dataFile = \"resources/data/testdata.xls\" , sheetName = \"login\" ) @QAFDataProvider ( dataFile = \"resources/data/testdata.xls\" , key = \"login\" ) //excel with data table @QAFDataProvider ( dataFile = \"resources/data/logintestdata.json\" ) @QAFDataProvider ( key = \"login.data\" ) //xml key @QAFDataProvider ( sqlQuery = \"select col1, col2 from tbl\" ) @QAFDataProvider ( dataFile = \"resources/data/logintestdata.txt\" ) CSV Data Provider \u00b6 Following is the test where CSV data provider used to provide data set. The test gets executed 4 times as there are 4 data set in data file. @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void login ( Map < String , String > data ) { LoginUtil loginUtil = new LoginUtil (); loginUtil . launchPage ( null ); Validator . verifyThat ( loginUtil . doLogin ( data . get ( \"user_name\" ), data . get ( \"password\" )), Matchers . equalTo ( Boolean . valueOf ( data . get ( \"isvalid\" ))); } property to set data file path test.login.datafile = resources/data/logintestdata.csv Below is csv data file for login test and first row is header. logintestdata.csv user_name,password,isvalid ruchita.shah@gmail.com,pwdtest,true ruchita.shah@gmail.com,wrongpwd,false wronguser@domain.com,pwdtest,false wronguser@domain.com,wrongpwd,false Excel Data Provider \u00b6 Following is the test where xls data provider used to provide data set. The test gets executed 3 times as there are 3 data set in data file. @QAFDataProvider ( dataFile = \"resources/logindata.xls\" , sheetName = \"LoginSheet\" , key = \"data\" ) @Test ( description = \"xls file as data provider \" ) public void login ( Map < String , String > data ) { doLogin ( data . get ( \"Username\" ), data . get ( \"Password\" ), data . get ( \"Isvalid\" )); assertLoginMsg ( data . get ( \"ExpectedMsg\" )) } property to set data file path test.login.datafile = resources/data/logintestdata.xls Below is xls data file for login test and first row is header. data recId Username Password Isvalid ExpectedMsg Wrong password chirag12 test123 FALSE Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest FALSE Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 FALSE Invalid Username Or Password. Please Try Again. data JSON Data Provider \u00b6 Following is the test where JSON data provider used to provide data set. The test gets executed 3 times as there are 3 data set in data file. @QAFDataProvider ( dataFile = \"resources/logindata.json\" ) @Test ( description = \"json file as data provider \" ) public void login ( Map < String , String > data ) { doLogin ( data . get ( \"Username\" ), data . get ( \"password\" )); assertLoginMsg ( data . get ( \"isvalid\" )) } ```` property to set data file path ``` properties test . login . datafile = resources / data / logintestdata . json Below is csv data file for login test and first row is header. logintestdata.json [ { \"Username\" : \"admin\" , \"password\":\"123abc123\" , \"isvalid\":\"false\" }, { \"Username\" : \"Admin\" , \"password\":\"test\" , \"isvalid\":\"false\" }, { \"Username\" : \"admin\" , \"password\":\"Chirag2193\" , \"isvalid\":\"true\" } ] XML Data Provider \u00b6 If we want to provide data using xml file below is the sample xml file: <root> <!-- data for login test --> <login> <data> <user_name> ruchita.shah1989+02@gmail.com </user_name> <password> aravotest </password> <isvalid> true </isvalid> </data> <data> <user_name> ruchita.shah1989+02@gmail.com </user_name> <password> wrongpwd </password> <isvalid> false </isvalid> </data> <data> <user_name> wronguser@domain.com </user_name> <password> aravotest </password> <isvalid> false </isvalid> </data> <data> <user_name> wronguser@domain.com </user_name> <password> wrondpwd </password> <isvalid> false </isvalid> </data> </login> <!-- file may contain other data --> </root> The test case code will remain same only the change will be the parameter value of QAFDataProvider as below: @QAFDataProvider ( key = \"login.data\" ) @Test ( description = \"login functionality test\" ) public void login ( Map < String , String > data ) { LoginUtil loginUtil = new LoginUtil (); loginUtil . launchPage ( null ); Validator . verifyThat ( loginUtil . doLogin ( data . get ( \"user_name\" ), data . get ( \"password\" )), Matchers . equalTo ( Boolean . valueOf ( data . get ( \"isvalid\" ))); } DATABASE Data Provider \u00b6 Following is the testcase where sql query is required to get data from database. @QAFDataProvider ( sqlQuery = \"select username,password,isvalid from login_table\" ) @Test ( description = \"Database as data provider \" ) public void login ( Map < String , String > data ) { doLogin ( data . get ( \"username\" ), data . get ( \"password\" )); assertLoginMsg ( data . get ( \"isvalid\" )) } If user want to provide data using database below is the properties which user need to configure in property file as per the requirement. db.driver.class=com.mysql.jdbc.Driver db.connection.url=jdbc:mysql://localhost:3306/db db.user=username db.pwd=password Text Data Provider \u00b6 @QAFDataProvider ( dataFile = \"resources/logindata.txt\" ) @Test ( description = \"text file as data provider \" ) public void login ( Map < String , String > data ) { doLogin ( data . get ( \"Username\" ), data . get ( \"Password\" ), data . get ( \"Isvalid\" )); assertLoginMsg ( data . get ( \"ExpectedMsg\" )) } recId,Username,password,isValid,expectedMsg Wrong Password,admin,admin,false,Invalid Username Or Password. Please Try Again. Wrong Username and Password,Admin,Admin,false,Invalid Username Or Password. Please Try Again. Wrong Username,admin,admin123,false,Invalid Username Or Password. Please Try Again. Configure/Override DataProvider \u00b6 Moreover, you can configure/override QAFDataProvider parameters. To configure parameters globally for all data driven test you can set property \"global.testdata\" . Below are examples: global.testdata = [<param>=value] global.testdata = dataFile = \"resources/data/${class}/${method}.csv\" global.testdata = dataFile= \"resources/data/testdata.xls\"; sheetName=\"${class}\";labelName=\"${method}\" global.testdata = dataFile = \"resources/data/${class}.xls\"; sheetName=\"${ method }\" global.testdata = key=\"${ method }/data\" In above example you can notice ${class} and ${method} parameters are used which you can use as per the requirement. To set data provider parameters for individual test method you can provide property as below: <tc_name>.testdata=[<param>=value] login.testdata=dataFile = \"resources/data/testdata.xls\"; sheetName=\"login\" login.testdata= sqlQuery = \" select col1, col2,col3 from tbl \" Priority for parameters to take effect is: Parameters set using test method specific test data property, i.e. \" .testdata\" Parameters set using global test data property, i.e. \"gloabal.testdata\" Parameters hardcoded in QAFDataProvider annotation itself data recId Username Password Isvalid ExpectedMsg Wrong password chirag12 test123 FALSE Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest FALSE Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 FALSE Invalid Username Or Password. Please Try Again. data","title":"Make Tests Data driven"},{"location":"latest/faqs/maketest_data_driven_in_qas/#csv-data-provider","text":"Following is the test where CSV data provider used to provide data set. The test gets executed 4 times as there are 4 data set in data file. @QAFDataProvider ( dataFile = \"resources/data/logintestdata.csv\" ) @Test ( description = \"login functionality test\" ) public void login ( Map < String , String > data ) { LoginUtil loginUtil = new LoginUtil (); loginUtil . launchPage ( null ); Validator . verifyThat ( loginUtil . doLogin ( data . get ( \"user_name\" ), data . get ( \"password\" )), Matchers . equalTo ( Boolean . valueOf ( data . get ( \"isvalid\" ))); } property to set data file path test.login.datafile = resources/data/logintestdata.csv Below is csv data file for login test and first row is header. logintestdata.csv user_name,password,isvalid ruchita.shah@gmail.com,pwdtest,true ruchita.shah@gmail.com,wrongpwd,false wronguser@domain.com,pwdtest,false wronguser@domain.com,wrongpwd,false","title":"CSV Data Provider"},{"location":"latest/faqs/maketest_data_driven_in_qas/#excel-data-provider","text":"Following is the test where xls data provider used to provide data set. The test gets executed 3 times as there are 3 data set in data file. @QAFDataProvider ( dataFile = \"resources/logindata.xls\" , sheetName = \"LoginSheet\" , key = \"data\" ) @Test ( description = \"xls file as data provider \" ) public void login ( Map < String , String > data ) { doLogin ( data . get ( \"Username\" ), data . get ( \"Password\" ), data . get ( \"Isvalid\" )); assertLoginMsg ( data . get ( \"ExpectedMsg\" )) } property to set data file path test.login.datafile = resources/data/logintestdata.xls Below is xls data file for login test and first row is header. data recId Username Password Isvalid ExpectedMsg Wrong password chirag12 test123 FALSE Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest FALSE Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 FALSE Invalid Username Or Password. Please Try Again. data","title":"Excel Data Provider"},{"location":"latest/faqs/maketest_data_driven_in_qas/#json-data-provider","text":"Following is the test where JSON data provider used to provide data set. The test gets executed 3 times as there are 3 data set in data file. @QAFDataProvider ( dataFile = \"resources/logindata.json\" ) @Test ( description = \"json file as data provider \" ) public void login ( Map < String , String > data ) { doLogin ( data . get ( \"Username\" ), data . get ( \"password\" )); assertLoginMsg ( data . get ( \"isvalid\" )) } ```` property to set data file path ``` properties test . login . datafile = resources / data / logintestdata . json Below is csv data file for login test and first row is header. logintestdata.json [ { \"Username\" : \"admin\" , \"password\":\"123abc123\" , \"isvalid\":\"false\" }, { \"Username\" : \"Admin\" , \"password\":\"test\" , \"isvalid\":\"false\" }, { \"Username\" : \"admin\" , \"password\":\"Chirag2193\" , \"isvalid\":\"true\" } ]","title":"JSON Data Provider"},{"location":"latest/faqs/maketest_data_driven_in_qas/#xml-data-provider","text":"If we want to provide data using xml file below is the sample xml file: <root> <!-- data for login test --> <login> <data> <user_name> ruchita.shah1989+02@gmail.com </user_name> <password> aravotest </password> <isvalid> true </isvalid> </data> <data> <user_name> ruchita.shah1989+02@gmail.com </user_name> <password> wrongpwd </password> <isvalid> false </isvalid> </data> <data> <user_name> wronguser@domain.com </user_name> <password> aravotest </password> <isvalid> false </isvalid> </data> <data> <user_name> wronguser@domain.com </user_name> <password> wrondpwd </password> <isvalid> false </isvalid> </data> </login> <!-- file may contain other data --> </root> The test case code will remain same only the change will be the parameter value of QAFDataProvider as below: @QAFDataProvider ( key = \"login.data\" ) @Test ( description = \"login functionality test\" ) public void login ( Map < String , String > data ) { LoginUtil loginUtil = new LoginUtil (); loginUtil . launchPage ( null ); Validator . verifyThat ( loginUtil . doLogin ( data . get ( \"user_name\" ), data . get ( \"password\" )), Matchers . equalTo ( Boolean . valueOf ( data . get ( \"isvalid\" ))); }","title":"XML Data Provider"},{"location":"latest/faqs/maketest_data_driven_in_qas/#database-data-provider","text":"Following is the testcase where sql query is required to get data from database. @QAFDataProvider ( sqlQuery = \"select username,password,isvalid from login_table\" ) @Test ( description = \"Database as data provider \" ) public void login ( Map < String , String > data ) { doLogin ( data . get ( \"username\" ), data . get ( \"password\" )); assertLoginMsg ( data . get ( \"isvalid\" )) } If user want to provide data using database below is the properties which user need to configure in property file as per the requirement. db.driver.class=com.mysql.jdbc.Driver db.connection.url=jdbc:mysql://localhost:3306/db db.user=username db.pwd=password","title":"DATABASE Data Provider"},{"location":"latest/faqs/maketest_data_driven_in_qas/#text-data-provider","text":"@QAFDataProvider ( dataFile = \"resources/logindata.txt\" ) @Test ( description = \"text file as data provider \" ) public void login ( Map < String , String > data ) { doLogin ( data . get ( \"Username\" ), data . get ( \"Password\" ), data . get ( \"Isvalid\" )); assertLoginMsg ( data . get ( \"ExpectedMsg\" )) } recId,Username,password,isValid,expectedMsg Wrong Password,admin,admin,false,Invalid Username Or Password. Please Try Again. Wrong Username and Password,Admin,Admin,false,Invalid Username Or Password. Please Try Again. Wrong Username,admin,admin123,false,Invalid Username Or Password. Please Try Again.","title":"Text Data Provider"},{"location":"latest/faqs/maketest_data_driven_in_qas/#configureoverride-dataprovider","text":"Moreover, you can configure/override QAFDataProvider parameters. To configure parameters globally for all data driven test you can set property \"global.testdata\" . Below are examples: global.testdata = [<param>=value] global.testdata = dataFile = \"resources/data/${class}/${method}.csv\" global.testdata = dataFile= \"resources/data/testdata.xls\"; sheetName=\"${class}\";labelName=\"${method}\" global.testdata = dataFile = \"resources/data/${class}.xls\"; sheetName=\"${ method }\" global.testdata = key=\"${ method }/data\" In above example you can notice ${class} and ${method} parameters are used which you can use as per the requirement. To set data provider parameters for individual test method you can provide property as below: <tc_name>.testdata=[<param>=value] login.testdata=dataFile = \"resources/data/testdata.xls\"; sheetName=\"login\" login.testdata= sqlQuery = \" select col1, col2,col3 from tbl \" Priority for parameters to take effect is: Parameters set using test method specific test data property, i.e. \" .testdata\" Parameters set using global test data property, i.e. \"gloabal.testdata\" Parameters hardcoded in QAFDataProvider annotation itself data recId Username Password Isvalid ExpectedMsg Wrong password chirag12 test123 FALSE Invalid Username Or Password. Please Try Again. Wrong User name and Wrong Password test wrongtest FALSE Invalid Username Or Password. Please Try Again. wrong Username chirag abc123 FALSE Invalid Username Or Password. Please Try Again. data","title":"Configure/Override DataProvider"},{"location":"latest/faqs/product_license_has/","text":"Follow below steps to resolve. To Request for new License key, Please refer self-service tool for license QASLicenseModule QMetry Automation Studio support team will provide you a new license key. Now: Start your QMetry Automation Studio and go to window \u2192 Preferences \u2192 QAS Preference Replace the existing license key with the new one. Click Apply and OK Your License is updated now for QAS as well as all open automation projects. {% include note.html content=\"If any automation project is closed or not updated with license key then check application properties in the project and update 'license.key' property value with latest license key\" %}","title":"Product license has been expired\u2026"},{"location":"latest/faqs/qmetry5_test_management_tool_tntegration_with_qas/","text":"First of all please make sure that QmetryWSClient.jar and QMScheduler.jar file is present in your lib folder. If you do not have these jar files, please find attachment of this document. when you what to integrate Qmetry Test cases with Qmetry Automation Framework, Please ensure that below dependencies should be present in your IVY.XML file. <dependency org= \"org.apache.axis\" name= \"axis\" rev= \"1.4\" /> <dependency org= \"org.apache.axis\" name= \"axis-jaxrpc\" rev= \"1.4\" /> <dependency org= \"org.apache.axis\" name= \"axis-saaj\" rev= \"1.4\" /> <dependency org= \"org.apache.axis\" name= \"axis-ant\" rev= \"1.4\" /> <dependency org= \"commons-discovery\" name= \"commons-discovery\" rev= \"0.4\" /><dependency org= \"wsdl4j\" name= \"wsdl4j\" rev= \"1.6.2\" /> <dependency org= \"org.apache.ws.commons.axiom\" name= \"axiom-impl\" rev= \"1.2.7\" /> To integrate your QMetry test cases with QMetry Automation Framework, you need to set below properties in your application.properties file. Following are the required properties. integration.tool.qmetry=1 integration.param.qmetry.service.url=http:// <qmetry-instance> /WEB-INF/ws/service.php integration.param.qmetry.user=user name integration.param.qmetry.pwd=password integration.param.qmetry.project= name of your Qmetry Project (i.e MyQmetryProject) integration.param.qmetry.release=your Qmetry Release name (i.e Release 1.0.0-beta) integration.param.qmetry.build=Build number (i.e 201408111111) integration.param.qmetry.platform=Platform ID integration.param.qmetry.suitid=TestSuit ID Following are the optional properties to be set. integration.param.qmetry.suit.path integration.param.qmetry.suit.rundesc qmetry.schedule.file integration.tool.qmetry.uploadattachments You can provide these properties in application.properties file. {% include note.html content=\"If you are using QMetry scheduler provided xml then only required to provide url, user and password related properties from above.\" %} Add listener \u00b6 In your xml configuration file add following listener entry in : <suite \u2026 > <listeners> <listener class-name= \"com.qmetry.qaf.automation.integration.qmetry.testnglistener.QmetrySchedulerFilter\" /> </listeners> \u2026 </suite> TestCase Mapping: \u00b6 Mapping with Prefix Test cases with Qmery testcase id and prefix TC. For example if test case id in qmetry is 12345 then your test method will be: TC12345. Mapping with annotation If you want to map a test case that\u2019s method name not follows above standard than use QmetryTestCase annotation for example: For java testsuite, @QmetryTestCase(TC_ID=\"12345\") @Test(description = \"Sample test\") public void TCtest() throws Exception { //test code } Running test that are scheduled: If you want to run with Qmetry scheduler provided xml then provide qmetry.schedule.file property value. You can provide it in multiple ways: 1. Provide seleniumtestrunner.properties file under scripts dir: qmetry.schedule.file= 2. Edit bat file \u201cseleniumTestRunner.bat\u201d under scripts dir ant -f scripts/seleniumtestrunner.xml -Dtestng.suite.file=testNG_config.xml -Dqmetry.schedule.file= 3.Edit bat file to get value at runtime ant -f scripts/seleniumtestrunner.xml -Dtestng.suite.file=testNG_config.xml %1 -Then you need to pass command line arg to bat file as -Dqmetry.schedule.file= 4.Form Project home execute ant as: ant -Dtestng.suite.file=testNG_config.xml -Dqmetry.schedule.file= QMScheduler.jar QmetryWSClient.jar","title":"Qmetry5 Test Management Tool Integration with Qmetry Automation framework"},{"location":"latest/faqs/qmetry5_test_management_tool_tntegration_with_qas/#add-listener","text":"In your xml configuration file add following listener entry in : <suite \u2026 > <listeners> <listener class-name= \"com.qmetry.qaf.automation.integration.qmetry.testnglistener.QmetrySchedulerFilter\" /> </listeners> \u2026 </suite>","title":"Add listener"},{"location":"latest/faqs/qmetry5_test_management_tool_tntegration_with_qas/#testcase-mapping","text":"Mapping with Prefix Test cases with Qmery testcase id and prefix TC. For example if test case id in qmetry is 12345 then your test method will be: TC12345. Mapping with annotation If you want to map a test case that\u2019s method name not follows above standard than use QmetryTestCase annotation for example: For java testsuite, @QmetryTestCase(TC_ID=\"12345\") @Test(description = \"Sample test\") public void TCtest() throws Exception { //test code } Running test that are scheduled: If you want to run with Qmetry scheduler provided xml then provide qmetry.schedule.file property value. You can provide it in multiple ways: 1. Provide seleniumtestrunner.properties file under scripts dir: qmetry.schedule.file= 2. Edit bat file \u201cseleniumTestRunner.bat\u201d under scripts dir ant -f scripts/seleniumtestrunner.xml -Dtestng.suite.file=testNG_config.xml -Dqmetry.schedule.file= 3.Edit bat file to get value at runtime ant -f scripts/seleniumtestrunner.xml -Dtestng.suite.file=testNG_config.xml %1 -Then you need to pass command line arg to bat file as -Dqmetry.schedule.file= 4.Form Project home execute ant as: ant -Dtestng.suite.file=testNG_config.xml -Dqmetry.schedule.file= QMScheduler.jar QmetryWSClient.jar","title":"TestCase Mapping:"},{"location":"latest/faqs/qmetry_integration_with_qas/","text":"QMetry Automation Studio Multi-Property Editor How to integrate QMetry6 Test Management Tool? \u00b6 QMetry 6 integration require necessary properties which should be provided in application properties. Following properties must be available in application properties. integration.param.qmetry.service.url= integration.param.qmetry.user= integration.param.qmetry.pwd= integration.param.qmetry.project= integration.param.qmetry.release= integration.param.qmetry.cycle= integration.param.qmetry.build= integration.param.qmetry.platform= integration.param.qmetry.drop= integration.param.qmetry.suitid= or integration.param.qmetry.suitrunid= There are four possibility to integrate test case. Scenario 1: If suite_id and TC_ID are known then provide suite_id in application.properties. For BDD: Provide TC_ID by using tc_id. For Example, SCENARIO: Sample META-DATA: {\"tc_id\":\"\", \"description\":\"Sample Description\", \"groups\":[\"SMOKE\"]} #write content here END For JAVA: @QmetryTestCase ( TC_ID = \"your test case id\" ) public void sample () { } Scenario 2: If suit_run_id and TC_ID are known then provide suite_id in application.properties. integration.param.qmetry.suitid= For BDD: Provide TC_ID by using tc_id. For Example, SCENARIO: Sample META-DATA: {\"tc_id\":\"\", \"description\":\"Sample Description\", \"groups\":[\"SMOKE\"]} #write content here END For JAVA: @QmetryTestCase ( TC_ID = \"your test case id\" ) public void sample () { } Scenario 3: If suit_id and TC_RUN_ID are known then provide suite_id in application.properties. For BDD: Provide TC_RUN_ID by using runId. For Example, SCENARIO: Sample META-DATA: {\"runId\":\"\", \"description\":\"Sample Description\", \"groups\":[\"SMOKE\"]} #write content here END For JAVA: @QmetryTestCase ( runId = \"your test case run id\" ) public void sample () { } Scenario 4: If suit_run_id and TC_RUN_ID are known then provide suite_id in application.properties. integration.param.qmetry.suitid= For BDD: Provide TC_RUN_ID by using runId. For Example, SCENARIO: Sample META-DATA: {\"runId\":\"\", \"description\":\"Sample Description\", \"groups\":[\"SMOKE\"]} #write content here END For JAVA: @QmetryTestCase ( runId = \"your test case run id\" ) public void sample () { }","title":"Qmetry6 Test Management Tool Integration with Qmetry Automation framework"},{"location":"latest/faqs/qmetry_integration_with_qas/#how-to-integrate-qmetry6-test-management-tool","text":"QMetry 6 integration require necessary properties which should be provided in application properties. Following properties must be available in application properties. integration.param.qmetry.service.url= integration.param.qmetry.user= integration.param.qmetry.pwd= integration.param.qmetry.project= integration.param.qmetry.release= integration.param.qmetry.cycle= integration.param.qmetry.build= integration.param.qmetry.platform= integration.param.qmetry.drop= integration.param.qmetry.suitid= or integration.param.qmetry.suitrunid= There are four possibility to integrate test case. Scenario 1: If suite_id and TC_ID are known then provide suite_id in application.properties. For BDD: Provide TC_ID by using tc_id. For Example, SCENARIO: Sample META-DATA: {\"tc_id\":\"\", \"description\":\"Sample Description\", \"groups\":[\"SMOKE\"]} #write content here END For JAVA: @QmetryTestCase ( TC_ID = \"your test case id\" ) public void sample () { } Scenario 2: If suit_run_id and TC_ID are known then provide suite_id in application.properties. integration.param.qmetry.suitid= For BDD: Provide TC_ID by using tc_id. For Example, SCENARIO: Sample META-DATA: {\"tc_id\":\"\", \"description\":\"Sample Description\", \"groups\":[\"SMOKE\"]} #write content here END For JAVA: @QmetryTestCase ( TC_ID = \"your test case id\" ) public void sample () { } Scenario 3: If suit_id and TC_RUN_ID are known then provide suite_id in application.properties. For BDD: Provide TC_RUN_ID by using runId. For Example, SCENARIO: Sample META-DATA: {\"runId\":\"\", \"description\":\"Sample Description\", \"groups\":[\"SMOKE\"]} #write content here END For JAVA: @QmetryTestCase ( runId = \"your test case run id\" ) public void sample () { } Scenario 4: If suit_run_id and TC_RUN_ID are known then provide suite_id in application.properties. integration.param.qmetry.suitid= For BDD: Provide TC_RUN_ID by using runId. For Example, SCENARIO: Sample META-DATA: {\"runId\":\"\", \"description\":\"Sample Description\", \"groups\":[\"SMOKE\"]} #write content here END For JAVA: @QmetryTestCase ( runId = \"your test case run id\" ) public void sample () { }","title":"How to integrate QMetry6 Test Management Tool?"},{"location":"latest/faqs/sauce_on_demand_integration/","text":"To run test on cloud with Qmetry Automation Framework, all you need to change is the server, port and browser info provided by sauce labs. You can run your test in one or more environments without having your own infrastructure. The most powerful feature of QMetry Automation Framework is that it provides parallel-ready test harness to connect tests to Sauce Labs\u2019 service. Follow below steps to configure go to souce lab web site and sign up. sign up here Souce lab provide you a username and Access Key. Open Application.properties file and add Desired Capabilities mentioned in table. remote.server= \" http://username:AccessKey@ondemand.saucelabs.com:PortNumber/wd/hub \" You can specify extra capabilities for the driver you are using as follows driver.additional.capabilities={json_key_value_pair} i.e. for firefoxDriver or firefoxRemoteDriver this would be firefox.additional.capabilities = {\"version\":\"28\",\"platform\":\"windows\"} Now you can run your test case and it will execute on souce Lab VM. You can view the execution on Dashboard of Sauce Lab.","title":"Sauce on demand Integration"},{"location":"latest/faqs/testrun_config/","text":"<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite name= \"QAS Demo\" verbose= \"0\" > <parameter name= \"driver.name\" value= \"firefoxRemoteDriver\" /> <parameter name= \"remote.server\" value= \"http://hirenpan123:a3c53906-5257-483f-b7f7-fbd43a3e2693@ondemand.saucelabs.com:80/wd/hub\" ></parameter> <parameter name= \"firefox.additional.capabilities\" value= \"{'name':'SampleTest','platform':'Windows 8','version':'41.0'}\" /> <test name= \"KWD Test\" enabled= \"false\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.csv.KwdTestFactory\" ></class> </classes> </test> <test name= \"BDD Test\" enabled= \"true\" > <classes> <class name= \"com.qmetry.qaf.automation.step.client.text.BDDTestFactory\" ></class> </classes> </test> </suite>","title":"testrun_config.xml"},{"location":"latest/faqs/what_are_the_features_provided_by_qas/","text":"Extended WebDriver Provides extended webelemets Listeners Reporting Extended WebElement Self descriptive locator Inbuilt wait, verify and assert methods Listener support Can be extended for Application specific custom component/elements Lazy loaded webelements Auto wait for Ajax-Dynamic elements Descriptive report Easy configurable test run Enabling testing across multiple platforms with or without selenium grid Test Results integration with test management tools Integration with continuous integration/build automation systems Locale support Flexible data provider for data driven tests Auto retry analyzer for failing tests Descriptive report","title":"What are the features provided by Qmetry Automation Framework?"},{"location":"latest/faqs/what_is_self_descriptive_locator/","text":"Locator is used for locating the element on the page. In addition, using self descriptive locator you can provide description of the locator/element as well. The description will be used in different assertion/verification messages. String LOGOUT_LINK_LOC = \u201c { \u2018 locator \u2019 : ' css = a . logout \u2019 , ' desc \u2019 = ' Logout link \u2019 } \u201d ;","title":"What is self-descriptive locator?"},{"location":"latest/faqs/what_is_the_use_of_listeners/","text":"The general idea is that one or more objects (the listeners) register their interest in being notified of command execution on selenium/webdriver/webelement. The listener can perform some actions or track details before/after command execution as well as on failure. You can create listener by implementing appropriate listener interface of by extending adaptor class. To register listener set property \u201cwd.command.listeners\u201d for web driver listener and \u201cwe.command.listeners\u201d for web element listener. A simple but very useful example of listener is \u201clistener for sendkeys\u201d. As you know in webdriver send keys will append the text box, so each time we need to first call clear command and then use send keys command. Without listener firstName.clear(); firstName.sendKeys(\u201cfname\u201d); lastName.clear(); lastName.sendKeys(\u201clname\u201d); With listener firstName.sendKeys(\u201cfname\u201d); lastName.sendKeys(\u201clname\u201d); Listener for above requirement can be implemented as below: public class SendKeysListener extends QAFWebElementCommandAdapter { @Override public void beforeCommand ( QAFExtendedWebElement element , CommandTracker commandTracker ) { if ( commandTracker . getCommand (). equalsIgnoreCase ( DriverCommand . SEND_KEYS_TO_ELEMENT )) { element . clear (); } } }","title":"What is the use of listeners?"},{"location":"latest/reporting/qaf_reporting/","text":"Summary \u00b6 QAF generates json reports that can be viewed using report dashboard . Open dashboard.htm to view report. QAF reporting is a powerful and customizable reporting engine ensures that you have access to all relevant test data like test results,check points,test case time, test step time and environment information.Use powerful filters to slice and dice the data to drill down to exact result you seek. Comprehensive drill-down reporting, with each step result, step command log and screenshots. Live reporting enables you to view reports of executed tests without waiting for entire suite to finish. Get Detailed Reporting including Trending,root cause analysis and Automated screen capture. Reporting of test run includes below details Overview \u00b6 It summarize details of Over All Execution. It will display basic information about All Test. It shows test name, test execution duration, pass test case count, fail test case count, skip test case count, total test case count execution and rate of passing. Multiple Test Execution can be displayed here. View All Result link shows all test case of all test executed. {% include inline_image.html file=\"ReportTestCaseExecution.png\" alt=\"Test Case Execution Summary\" %} Tools and Filter \u00b6 There 3 types of operation can be perform using Tools And Filter. Filter - Test Case can be filtered by pass/fail/skip test case over here. Only Configuration type test case can be filtered by checking Configuration check box. Order - Test Case can be ordered by pass/fail/skip or by execution or name. Details - All test case details can be expand using Expand All radio button and collapse all test case details using Collapse All radio button. {% include inline_image.html file=\"toolsAndFilter.png\" alt=\"Tools and Filter \" %} Environment Information \u00b6 It provides information related to environment with following parameter. execution on - To show OS version, java version, operating system etc. build information - To shows build related information like QAF version with revision, QAF build time. desired capabilities - To shows desired capabilities which describes a series of key/value pairs that encapsulate aspects of a browser. Basically, the Desired Capabilities help to set properties for the Web Driver. actual capabilities - To shows actual capabilities which are actually at run time. run parameters - To shows run parameters used at run time. {% include inline_image.html file=\"environmentInfo.png\" alt=\"Environment Information \" %} Error Analysis \u00b6 It provides high level information about automation failure, data failure and application failure. Exceptions categorized into different categories. {% include inline_image.html file=\"errorAnalysis.png\" alt=\"Error Analysis \" %} User can customize this error bucket categories in qaf_dashboard.js file. Test Details \u00b6 After selecting test, it displays test details of test case. It shows useful parameter for test. It has following parameters. Description - It shows Test Case Description Groups - It shows List of groups on which test cases are executed Reference - It shows Location of BDD/KWD Start time - It shows Start time of Test Case End time - It shows End time of Test Case Meta-Data - It shows Meta-Data of Test Case. Actual time - It shows Actual Time of Test Case Check Points - It shows all steps and sub steps. {% include inline_image.html file=\"TestCaseDetails.png\" alt=\"Test Case Execution Report \" %} Test Case Tabs \u00b6 There are four tabs available provides detailed steps, timimings, command log and error of steps. Check Points ({% include inline_image.html file=\"checkpoints_bullet.png\" alt=\"Test Case Execution Report \" %}) :- It Shows executed steps and sub steps as checkpoints. Sub checkpoints will be displayed in collapse mode. {% include inline_image.html file=\"checkPointsDetails.png\" alt=\"Test Case Execution Report \" %} For verification/assertion checkpoint, attachment is also available. Click on {% include inline_image.html file=\"AttachmentIcon.png\" alt=\"Attachment\" %} to see screenshots. Step Time Analysis ({% include inline_image.html file=\"stepTimeAnalysis_icon.png\" %}) - It shows graph for comparing threshold and Duration of steps. {% include inline_image.html file=\"stepTimeAnalysis_Graph.png\" alt=\"Step Time Analysis Graph \" %} Command Log ({% include inline_image.html file=\"commandlogICON.png\" %}) - It shows log of all command which are executed with command name, arguments, status and duration. {% include inline_image.html file=\"commandLogDetails.png\" alt=\"Detailed Command Log \" %} Error Trace ({% include inline_image.html file=\"errorTraceICON.png\" %}) - If any error occurred in test case during execution, it will show as descriptive details.. It shows error trace of individual test case. For fail or skip test case, it shows well descriptive error. {% include inline_image.html file=\"errorTrace.png\" alt=\"Detailed Error Trace \" %} Trending \u00b6 It shows the trends of all execution respect to all execution and number of test cases. {% include inline_image.html file=\"trends.png\" alt=\"Trends \" %} Live Reporting \u00b6 Live Reporting can be useful to show result automatically as test results created. Enable live reporting by click on Auto Refresh icon. Live Demo {% include inline_image.html file=\"AutoRefreshButton.png\" alt=\"Auto Refresh \" %}","title":"QAF Reporting"},{"location":"latest/reporting/qaf_reporting/#summary","text":"QAF generates json reports that can be viewed using report dashboard . Open dashboard.htm to view report. QAF reporting is a powerful and customizable reporting engine ensures that you have access to all relevant test data like test results,check points,test case time, test step time and environment information.Use powerful filters to slice and dice the data to drill down to exact result you seek. Comprehensive drill-down reporting, with each step result, step command log and screenshots. Live reporting enables you to view reports of executed tests without waiting for entire suite to finish. Get Detailed Reporting including Trending,root cause analysis and Automated screen capture. Reporting of test run includes below details","title":"Summary"},{"location":"latest/reporting/qaf_reporting/#overview","text":"It summarize details of Over All Execution. It will display basic information about All Test. It shows test name, test execution duration, pass test case count, fail test case count, skip test case count, total test case count execution and rate of passing. Multiple Test Execution can be displayed here. View All Result link shows all test case of all test executed. {% include inline_image.html file=\"ReportTestCaseExecution.png\" alt=\"Test Case Execution Summary\" %}","title":"Overview"},{"location":"latest/reporting/qaf_reporting/#tools-and-filter","text":"There 3 types of operation can be perform using Tools And Filter. Filter - Test Case can be filtered by pass/fail/skip test case over here. Only Configuration type test case can be filtered by checking Configuration check box. Order - Test Case can be ordered by pass/fail/skip or by execution or name. Details - All test case details can be expand using Expand All radio button and collapse all test case details using Collapse All radio button. {% include inline_image.html file=\"toolsAndFilter.png\" alt=\"Tools and Filter \" %}","title":"Tools and Filter"},{"location":"latest/reporting/qaf_reporting/#environment-information","text":"It provides information related to environment with following parameter. execution on - To show OS version, java version, operating system etc. build information - To shows build related information like QAF version with revision, QAF build time. desired capabilities - To shows desired capabilities which describes a series of key/value pairs that encapsulate aspects of a browser. Basically, the Desired Capabilities help to set properties for the Web Driver. actual capabilities - To shows actual capabilities which are actually at run time. run parameters - To shows run parameters used at run time. {% include inline_image.html file=\"environmentInfo.png\" alt=\"Environment Information \" %}","title":"Environment Information"},{"location":"latest/reporting/qaf_reporting/#error-analysis","text":"It provides high level information about automation failure, data failure and application failure. Exceptions categorized into different categories. {% include inline_image.html file=\"errorAnalysis.png\" alt=\"Error Analysis \" %} User can customize this error bucket categories in qaf_dashboard.js file.","title":"Error Analysis"},{"location":"latest/reporting/qaf_reporting/#test-details","text":"After selecting test, it displays test details of test case. It shows useful parameter for test. It has following parameters. Description - It shows Test Case Description Groups - It shows List of groups on which test cases are executed Reference - It shows Location of BDD/KWD Start time - It shows Start time of Test Case End time - It shows End time of Test Case Meta-Data - It shows Meta-Data of Test Case. Actual time - It shows Actual Time of Test Case Check Points - It shows all steps and sub steps. {% include inline_image.html file=\"TestCaseDetails.png\" alt=\"Test Case Execution Report \" %}","title":"Test Details"},{"location":"latest/reporting/qaf_reporting/#test-case-tabs","text":"There are four tabs available provides detailed steps, timimings, command log and error of steps. Check Points ({% include inline_image.html file=\"checkpoints_bullet.png\" alt=\"Test Case Execution Report \" %}) :- It Shows executed steps and sub steps as checkpoints. Sub checkpoints will be displayed in collapse mode. {% include inline_image.html file=\"checkPointsDetails.png\" alt=\"Test Case Execution Report \" %} For verification/assertion checkpoint, attachment is also available. Click on {% include inline_image.html file=\"AttachmentIcon.png\" alt=\"Attachment\" %} to see screenshots. Step Time Analysis ({% include inline_image.html file=\"stepTimeAnalysis_icon.png\" %}) - It shows graph for comparing threshold and Duration of steps. {% include inline_image.html file=\"stepTimeAnalysis_Graph.png\" alt=\"Step Time Analysis Graph \" %} Command Log ({% include inline_image.html file=\"commandlogICON.png\" %}) - It shows log of all command which are executed with command name, arguments, status and duration. {% include inline_image.html file=\"commandLogDetails.png\" alt=\"Detailed Command Log \" %} Error Trace ({% include inline_image.html file=\"errorTraceICON.png\" %}) - If any error occurred in test case during execution, it will show as descriptive details.. It shows error trace of individual test case. For fail or skip test case, it shows well descriptive error. {% include inline_image.html file=\"errorTrace.png\" alt=\"Detailed Error Trace \" %}","title":"Test Case Tabs"},{"location":"latest/reporting/qaf_reporting/#trending","text":"It shows the trends of all execution respect to all execution and number of test cases. {% include inline_image.html file=\"trends.png\" alt=\"Trends \" %}","title":"Trending"},{"location":"latest/reporting/qaf_reporting/#live-reporting","text":"Live Reporting can be useful to show result automatically as test results created. Enable live reporting by click on Auto Refresh icon. Live Demo {% include inline_image.html file=\"AutoRefreshButton.png\" alt=\"Auto Refresh \" %}","title":"Live Reporting"},{"location":"latest/tags/tag_bdd/","text":"{% include taglogic.html %} {% include links.html %}","title":"BDD Related Pages"},{"location":"latest/tags/tag_bdl/","text":"{% include taglogic.html %} {% include links.html %}","title":"BDL Related Pages"},{"location":"latest/tags/tag_checkpoint/","text":"{% include taglogic.html %} {% include links.html %}","title":"Checkpoint Related Pages"},{"location":"latest/tags/tag_collaboration/","text":"{% include taglogic.html %} {% include links.html %}","title":"Collaboration pages"},{"location":"latest/tags/tag_component/","text":"{% include taglogic.html %} {% include links.html %}","title":"Component Related Pages"},{"location":"latest/tags/tag_content_types/","text":"{% include taglogic.html %} {% include links.html %}","title":"Content types pages"},{"location":"latest/tags/tag_data_driven/","text":"{% include taglogic.html %} {% include links.html %}","title":"DataDriven Related Pages"},{"location":"latest/tags/tag_execution/","text":"{% include taglogic.html %} {% include links.html %}","title":"Execution Related Pages"},{"location":"latest/tags/tag_formatting/","text":"{% include taglogic.html %} {% include links.html %}","title":"Formatting pages"},{"location":"latest/tags/tag_getting_started/","text":"{% include taglogic.html %} {% include links.html %}","title":"Getting started pages"},{"location":"latest/tags/tag_java/","text":"{% include taglogic.html %} {% include links.html %}","title":"Java Related Pages"},{"location":"latest/tags/tag_kwd/","text":"{% include taglogic.html %} {% include links.html %}","title":"KWD Related Pages"},{"location":"latest/tags/tag_listeners/","text":"{% include taglogic.html %} {% include links.html %}","title":"Listeners Related Pages"},{"location":"latest/tags/tag_locator/","text":"{% include taglogic.html %} {% include links.html %}","title":"Locator Related Pages"},{"location":"latest/tags/tag_mobile/","text":"{% include taglogic.html %} {% include links.html %}","title":"Mobile Pages"},{"location":"latest/tags/tag_navigation/","text":"{% include taglogic.html %} {% include links.html %}","title":"Navigation pages"},{"location":"latest/tags/tag_news/","text":"{% include taglogic.html %} {% include links.html %}","title":"News"},{"location":"latest/tags/tag_page/","text":"{% include taglogic.html %} {% include links.html %}","title":"Test Page Related Pages"},{"location":"latest/tags/tag_publishing/","text":"{% include taglogic.html %} {% include links.html %}","title":"Publishing pages"},{"location":"latest/tags/tag_reporting/","text":"{% include taglogic.html %} {% include links.html %}","title":"Reporting Related Pages"},{"location":"latest/tags/tag_scenario/","text":"{% include taglogic.html %} {% include links.html %}","title":"Scenario Related Pages"},{"location":"latest/tags/tag_selenium/","text":"{% include taglogic.html %} {% include links.html %}","title":"Selenium Related Pages"},{"location":"latest/tags/tag_single_sourcing/","text":"{% include taglogic.html %} {% include links.html %}","title":"Single sourcing pages"},{"location":"latest/tags/tag_special_layouts/","text":"{% include taglogic.html %} {% include links.html %}","title":"Special layout pages"},{"location":"latest/tags/tag_test_data/","text":"{% include taglogic.html %} {% include links.html %}","title":"Test Data Related Pages"},{"location":"latest/tags/tag_testng/","text":"{% include taglogic.html %} {% include links.html %}","title":"TestNG Related Pages"},{"location":"latest/tags/tag_troubleshooting/","text":"{% include taglogic.html %} {% include links.html %}","title":"Troubleshooting pages"},{"location":"latest/tags/tag_web_driver/","text":"{% include taglogic.html %} {% include links.html %}","title":"Web Driver Related Pages"},{"location":"latest/tags/tag_web_element/","text":"{% include taglogic.html %} {% include links.html %}","title":"Web Element Related Pages"},{"location":"latest/tags/tag_webdriver/","text":"{% include taglogic.html %} {% include links.html %}","title":"Web Driver Related Pages"},{"location":"latest/tags/tag_webelement/","text":"{% include taglogic.html %} {% include links.html %}","title":"Web Element Related Pages"},{"location":"latest/troubleshooting/incomplete_build_path/","text":"It is require to delete and add IVY dependency management library.You can delete and add IVY dependency management library by using following steps: 1)Right click on Project -> Properties -> Java Build Path -> Library -> Select ivy and remove. 2)Add ivy dependency management library again.Go to same place and click add library -> Ivy dependency management. 3)Resolved all dependency from scratch .Right click on project -> Ivy -> Resolve.","title":"The Project Was Not Built Since Its Build Path Is Incomplete."},{"location":"latest/troubleshooting/maven_with_testng_java/","text":"Solution for below error is as follows: Execute command \u2018mvn clean install\u2019 first. After running above command, run testNG suite for Java. It will run for Java. In Maven Project when user run Java test using testNG than following error appears in console. testng . TestNGException : Cannot find class in classpath : at org . testng . xml . XmlClass . loadClass ( java : 81 ) at org . testng . xml . XmlClass . init ( java : 73 ) at org . testng . xml . XmlClass . < init > ( java : 59 ) at org . testng . xml . TestNGContentHandler . startElement ( java : 544 ) at com . sun . org . apache . xerces . internal . parsers . AbstractSAXParser . startElement ( java : 509 ) at com . sun . org . apache . xerces . internal . impl . dtd . XMLDTDValidator . startElement ( java : 745 ) at com . sun . org . apache . xerces . internal . impl . XMLDocumentFragmentScannerImpl . scanStartElement ( java : 1363 ) at com . sun . org . apache . xerces . internal . impl . XMLDocumentFragmentScannerImpl$FragmentContentDriver . next ( java : 2786 ) at com . sun . org . apache . xerces . internal . impl . XMLDocumentScannerImpl . next ( java : 606 ) at com . sun . org . apache . xerces . internal . impl . XMLDocumentFragmentScannerImpl . scanDocument ( java : 510 ) at com . sun . org . apache . xerces . internal . parsers . XML11Configuration . parse ( java : 848 ) at com . sun . org . apache . xerces . internal . parsers . XML11Configuration . parse ( java : 777 ) at com . sun . org . apache . xerces . internal . parsers . XMLParser . parse ( java : 141 ) at com . sun . org . apache . xerces . internal . parsers . AbstractSAXParser . parse ( java : 1213 ) at com . sun . org . apache . xerces . internal . jaxp . SAXParserImpl$JAXPSAXParser . parse ( java : 649 ) at com . sun . org . apache . xerces . internal . jaxp . SAXParserImpl . parse ( java : 333 ) at javax . xml . parsers . SAXParser . parse ( java : 195 ) at org . testng . xml . XMLParser . parse ( java : 39 ) at org . testng . xml . SuiteXmlParser . parse ( java : 17 ) at org . testng . xml . SuiteXmlParser . parse ( java : 10 ) at org . testng . xml . Parser . parse ( java : 168 ) at org . testng . TestNG . initializeSuitesAndJarFile ( java : 311 ) at org . testng . remote . AbstractRemoteTestNG . run ( java : 103 ) at org . testng . remote . RemoteTestNG . initAndRun ( java : 137 ) at org . testng . remote . RemoteTestNG . main ( java : 58 )","title":"Maven With TestNG Suite Not Working For Java Test."},{"location":"latest/troubleshooting/problem_reflection_error/","text":"You can solve reflection error by following steps. Option 1 : step 1: Delete selenuim-test.jar from lib . step 2: Clean Project . step 3: Build Project. If it will not resolve using option 1 then follow option 2. Option 2 : step 1: Go to java build path. step 2: Set jre7 (jre-7u45). step 3: Delete all run configuration file of QAF Automated Test. step 4: Right click on build.xml. step 5: Go to Run as -> External Tools Configurations. step 6: Go to ant build configuration and click on JRE tab. step 7: set jre7 in separate JRE. step 8: apply config setting. step 9: Clean & Build Project.","title":"Reflection Error"},{"location":"plugins/awesome-pages/","text":"Awesome pages \u00b6 The mkdocs-awesome-pages-plugin omits the need to specify all pages in the nav entry of mkdocs.yml and gives you control over page visibility, titles and order on a directory level. Bundled with the official Docker image This plugin is already installed for your convenience when you use the official Docker image , so the installation step can be skipped. Read the getting started guide to get up and running with Docker. Installation \u00b6 Install the plugin using pip : pip install mkdocs-awesome-pages-plugin Configuration \u00b6 Add the following lines to mkdocs.yml : plugins : - search # necessary for search to work - awesome-pages Usage \u00b6 If the nav entry in mkdocs.yml is omitted, MkDocs will automatically include all pages in a specific order. This plugin allows for more fine-grained control on a per-directory basis. In order to configure behavior for a specific directory, create a YAML file named .pages in it and set one of the following options. Setting a directory title \u00b6 The directory title, which is shown as part of the navigation, can be set with: title : Lorem ipsum dolor sit amet Changing the order of pages \u00b6 The order of pages and subsections can be configured with: arrange : - page-1.md - page-2.md - subdirectory Excluding a directory \u00b6 A directory can be hidden (i.e. excluded) with: hide : true Collapsing single-page directories \u00b6 Directories which contain a single page can be collapsed with: collapse : true","title":"Awesome pages"},{"location":"plugins/awesome-pages/#awesome-pages","text":"The mkdocs-awesome-pages-plugin omits the need to specify all pages in the nav entry of mkdocs.yml and gives you control over page visibility, titles and order on a directory level. Bundled with the official Docker image This plugin is already installed for your convenience when you use the official Docker image , so the installation step can be skipped. Read the getting started guide to get up and running with Docker.","title":"Awesome pages"},{"location":"plugins/awesome-pages/#installation","text":"Install the plugin using pip : pip install mkdocs-awesome-pages-plugin","title":"Installation"},{"location":"plugins/awesome-pages/#configuration","text":"Add the following lines to mkdocs.yml : plugins : - search # necessary for search to work - awesome-pages","title":"Configuration"},{"location":"plugins/awesome-pages/#usage","text":"If the nav entry in mkdocs.yml is omitted, MkDocs will automatically include all pages in a specific order. This plugin allows for more fine-grained control on a per-directory basis. In order to configure behavior for a specific directory, create a YAML file named .pages in it and set one of the following options.","title":"Usage"},{"location":"plugins/awesome-pages/#setting-a-directory-title","text":"The directory title, which is shown as part of the navigation, can be set with: title : Lorem ipsum dolor sit amet","title":"Setting a directory title"},{"location":"plugins/awesome-pages/#changing-the-order-of-pages","text":"The order of pages and subsections can be configured with: arrange : - page-1.md - page-2.md - subdirectory","title":"Changing the order of pages"},{"location":"plugins/awesome-pages/#excluding-a-directory","text":"A directory can be hidden (i.e. excluded) with: hide : true","title":"Excluding a directory"},{"location":"plugins/awesome-pages/#collapsing-single-page-directories","text":"Directories which contain a single page can be collapsed with: collapse : true","title":"Collapsing single-page directories"},{"location":"plugins/minification/","text":"Minification \u00b6 The mkdocs-minify-plugin will minify all *.html files generated by mkdocs build in a post-processing step, stripping all unnecessary characters to reduce the payload served to the client. Bundled with the official Docker image This plugin is already installed for your convenience when you use the official Docker image , so the installation step can be skipped. Read the getting started guide to get up and running with Docker. Installation \u00b6 Install the plugin using pip : pip install mkdocs-minify-plugin Configuration \u00b6 Add the following lines to mkdocs.yml : plugins : - search # necessary for search to work - minify : minify_html : true Usage \u00b6 When enabled, all *.html will be minified automatically.","title":"Minification"},{"location":"plugins/minification/#minification","text":"The mkdocs-minify-plugin will minify all *.html files generated by mkdocs build in a post-processing step, stripping all unnecessary characters to reduce the payload served to the client. Bundled with the official Docker image This plugin is already installed for your convenience when you use the official Docker image , so the installation step can be skipped. Read the getting started guide to get up and running with Docker.","title":"Minification"},{"location":"plugins/minification/#installation","text":"Install the plugin using pip : pip install mkdocs-minify-plugin","title":"Installation"},{"location":"plugins/minification/#configuration","text":"Add the following lines to mkdocs.yml : plugins : - search # necessary for search to work - minify : minify_html : true","title":"Configuration"},{"location":"plugins/minification/#usage","text":"When enabled, all *.html will be minified automatically.","title":"Usage"},{"location":"plugins/revision-date/","text":"Revision date \u00b6 The mkdocs-git-revision-date-localized-plugin will add the date on which a Markdown file was last updated at the bottom of each page. Bundled with the official Docker image This plugin is already installed for your convenience when you use the official Docker image , so the installation step can be skipped. Read the getting started guide to get up and running with Docker. Requirements The date is extracted at the time of the build, so mkdocs build must be triggered from within a git repository. Installation \u00b6 Install the plugin using pip : pip install mkdocs-git-revision-date-localized-plugin Configuration \u00b6 Add the following lines to mkdocs.yml : plugins : - search # necessary for search to work - git-revision-date-localized Note that the date is printed according to the locale which is determined through the theme language that was set in mkdocs.yml . Language \u00b6 The language (i.e. locale) is deduced from the theme.language option. Format \u00b6 Default: date To change the date format, set the type parameter to one of date , datetime , iso_date , iso_datetime or timeago , e.g.: plugins : - search # necessary for search to work - git-revision-date-localized : type : date The following formats are supported: 28 November, 2019 # type: date 28 November, 2019 13:57:28 # type: datetime 2019-11-28 # type: iso_date 2019-11-28 13:57:26 # type: iso_datetime 20 hours ago # type: timeago Usage \u00b6 When enabled, the respective date is automatically added at the bottom of each page, e.g.: Last updated: 28 November, 2019","title":"Revision date"},{"location":"plugins/revision-date/#revision-date","text":"The mkdocs-git-revision-date-localized-plugin will add the date on which a Markdown file was last updated at the bottom of each page. Bundled with the official Docker image This plugin is already installed for your convenience when you use the official Docker image , so the installation step can be skipped. Read the getting started guide to get up and running with Docker. Requirements The date is extracted at the time of the build, so mkdocs build must be triggered from within a git repository.","title":"Revision date"},{"location":"plugins/revision-date/#installation","text":"Install the plugin using pip : pip install mkdocs-git-revision-date-localized-plugin","title":"Installation"},{"location":"plugins/revision-date/#configuration","text":"Add the following lines to mkdocs.yml : plugins : - search # necessary for search to work - git-revision-date-localized Note that the date is printed according to the locale which is determined through the theme language that was set in mkdocs.yml .","title":"Configuration"},{"location":"plugins/revision-date/#language","text":"The language (i.e. locale) is deduced from the theme.language option.","title":"Language"},{"location":"plugins/revision-date/#format","text":"Default: date To change the date format, set the type parameter to one of date , datetime , iso_date , iso_datetime or timeago , e.g.: plugins : - search # necessary for search to work - git-revision-date-localized : type : date The following formats are supported: 28 November, 2019 # type: date 28 November, 2019 13:57:28 # type: datetime 2019-11-28 # type: iso_date 2019-11-28 13:57:26 # type: iso_datetime 20 hours ago # type: timeago","title":"Format"},{"location":"plugins/revision-date/#usage","text":"When enabled, the respective date is automatically added at the bottom of each page, e.g.: Last updated: 28 November, 2019","title":"Usage"},{"location":"plugins/search/","text":"Search \u00b6 The built-in search plugin provides client-side search inside the browser and is implemented using lunr.js which includes stemmers for the English language by default, while stemmers for other languages are included with lunr-languages , both of which are integrated with this theme. Make search work offline While search will not work for the file:// protocol, as web workers and the use of XMLHTTPRequest are both blocked by modern browsers for security reasons, the localsearch plugin and @squidfunk 's iframe-worker polyfill add support for cases where this is a mandatory requirement, e.g., for offline use. Installation \u00b6 The search plugin is a built-in plugin, and thus doesn't need to be installed. Configuration \u00b6 Add the following lines to mkdocs.yml : plugins : - search Language \u00b6 Default: best match for theme.language , automatically set Material for MkDocs selects the (best-)matching stemmer for the given theme language. Multilingual search can be enabled in mkdocs.yml by explicitly defining the search language(s): plugins : - search : lang : - en - de - ru The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } ar / Arabic da / Danish du / Dutch en / English fi / Finnish fr / French de / German hu / Hungarian it / Italian ja / Japanese no / Norwegian pt / Portuguese ro / Romanian ru / Russian es / Spanish sv / Swedish th / Thai tr / Turkish vi / Vietnamese Only specify the languages you really need Be aware that including support for other languages increases the general JavaScript payload by around 20kb (before gzip ) and by another 15-30kb per language. Tokenization \u00b6 Default: [\\s\\-]+ The separator for tokenization can be customized which makes it possible to index parts of words that are separated by - or . : plugins : - search : separator : '[\\s\\-\\.]+' Prebuilding \u00b6 Default: false MkDocs can generate a prebuilt index of all pages during build time, which provides performance improvements at the cost of more bandwidth. This may be beneficial for large documentation projects that are served with appropriate HTTP headers (e.g. Content-Encoding: gzip ). Material for MkDocs 5 finally brings experimental support for prebuilt indexes which can be enabled by adding the following lines to mkdocs.yml : plugins : - search : prebuild_index : true Usage \u00b6 When enabled, a search bar is shown in the header.","title":"Search"},{"location":"plugins/search/#search","text":"The built-in search plugin provides client-side search inside the browser and is implemented using lunr.js which includes stemmers for the English language by default, while stemmers for other languages are included with lunr-languages , both of which are integrated with this theme. Make search work offline While search will not work for the file:// protocol, as web workers and the use of XMLHTTPRequest are both blocked by modern browsers for security reasons, the localsearch plugin and @squidfunk 's iframe-worker polyfill add support for cases where this is a mandatory requirement, e.g., for offline use.","title":"Search"},{"location":"plugins/search/#installation","text":"The search plugin is a built-in plugin, and thus doesn't need to be installed.","title":"Installation"},{"location":"plugins/search/#configuration","text":"Add the following lines to mkdocs.yml : plugins : - search","title":"Configuration"},{"location":"plugins/search/#language","text":"Default: best match for theme.language , automatically set Material for MkDocs selects the (best-)matching stemmer for the given theme language. Multilingual search can be enabled in mkdocs.yml by explicitly defining the search language(s): plugins : - search : lang : - en - de - ru The following language codes are supported: .md-language-list { -webkit-columns: 2; -moz-columns: 2; columns: 2; } .md-language-list li { -webkit-column-break-inside: avoid; page-break-inside: avoid; break-inside: avoid; } ar / Arabic da / Danish du / Dutch en / English fi / Finnish fr / French de / German hu / Hungarian it / Italian ja / Japanese no / Norwegian pt / Portuguese ro / Romanian ru / Russian es / Spanish sv / Swedish th / Thai tr / Turkish vi / Vietnamese Only specify the languages you really need Be aware that including support for other languages increases the general JavaScript payload by around 20kb (before gzip ) and by another 15-30kb per language.","title":"Language"},{"location":"plugins/search/#tokenization","text":"Default: [\\s\\-]+ The separator for tokenization can be customized which makes it possible to index parts of words that are separated by - or . : plugins : - search : separator : '[\\s\\-\\.]+'","title":"Tokenization"},{"location":"plugins/search/#prebuilding","text":"Default: false MkDocs can generate a prebuilt index of all pages during build time, which provides performance improvements at the cost of more bandwidth. This may be beneficial for large documentation projects that are served with appropriate HTTP headers (e.g. Content-Encoding: gzip ). Material for MkDocs 5 finally brings experimental support for prebuilt indexes which can be enabled by adding the following lines to mkdocs.yml : plugins : - search : prebuild_index : true","title":"Prebuilding"},{"location":"plugins/search/#usage","text":"When enabled, a search bar is shown in the header.","title":"Usage"},{"location":"releases/4/","text":"Upgrading to 4.x \u00b6 Highlights \u00b6 Material for MkDocs 4 fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from 10px to 20px which means all rem values needed to be updated. Within the theme, px to rem calculation is now encapsulated in a new function called px2rem which is part of the SASS code base. If you use Material for MkDocs with custom CSS that is based on rem values, note that those values must now be divided by 2. Now, 1.0rem doesn't map to 10px , but 20px . To learn more about the problem and implications, please refer to the issue in which the problem was discovered and fixed. How to upgrade \u00b6 Changes to mkdocs.yml \u00b6 None. Changes to *.html files \u00b6 None.","title":"Upgrading to 4.x"},{"location":"releases/4/#upgrading-to-4x","text":"","title":"Upgrading to 4.x"},{"location":"releases/4/#highlights","text":"Material for MkDocs 4 fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from 10px to 20px which means all rem values needed to be updated. Within the theme, px to rem calculation is now encapsulated in a new function called px2rem which is part of the SASS code base. If you use Material for MkDocs with custom CSS that is based on rem values, note that those values must now be divided by 2. Now, 1.0rem doesn't map to 10px , but 20px . To learn more about the problem and implications, please refer to the issue in which the problem was discovered and fixed.","title":"Highlights"},{"location":"releases/4/#how-to-upgrade","text":"","title":"How to upgrade"},{"location":"releases/4/#changes-to-mkdocsyml","text":"None.","title":"Changes to mkdocs.yml"},{"location":"releases/4/#changes-to-html-files","text":"None.","title":"Changes to *.html files"},{"location":"releases/5/","text":"Upgrading to 5.x \u00b6 Highlights \u00b6 Reactive architecture \u2013 try app.dialog$.next(\"Hi!\") in the console Instant loading \u2013 make Material behave like a Single Page Application Improved CSS customization with CSS variables \u2013 set your brand's colors Improved CSS resilience, e.g. proper sidebar locking for customized headers Improved icon integration and configuration \u2013 now including over 5k icons Added possibility to use any icon for logo, repository and social links Search UI does not freeze anymore (moved to web worker) Search index built only once when using instant loading Improved extensible keyboard handling Support for prebuilt search indexes Support for displaying stars and forks for GitLab repositories Support for scroll snapping of sidebars and search results Reduced HTML and CSS footprint due to deprecation of Internet Explorer support Slight facelifting of some UI elements (Admonitions, tables, ...) How to upgrade \u00b6 Changes to mkdocs.yml \u00b6 Following is a list of changes that need to be made to mkdocs.yml . Note that you only have to adjust the value if you defined it, so if your configuration does not contain the key, you can skip it. theme.feature \u00b6 Optional features like tabs and instant loading are now implemented as flags and can be enabled by listing them in mkdocs.yml under theme.features : 5.x theme : features : - tabs - instant 4.x theme : feature : tabs : true theme.logo.icon \u00b6 The logo icon configuration was centralized under theme.icon.logo and can now be set to any of the icons bundled with the theme : 5.x theme : icon : logo : material/cloud 4.x theme : logo : icon : cloud extra.repo_icon \u00b6 The repo icon configuration was centralized under theme.icon.repo and can now be set to any of the icons bundled with the theme : 5.x theme : icon : repo : fontawesome/brands/gitlab 4.x extra : repo_icon : gitlab extra.search.* \u00b6 Search is now configured as part of the plugin options . Note that the search languages must now be listed as an array of strings and the tokenizer was renamed to separator : 5.x plugins : - search : separator : '[\\s\\-\\.]+' lang : - en - de - ru 4.x extra : search : language : en, de, ru tokenizer : [ \\s\\-\\. ] + extra.social.* \u00b6 Social links stayed in the same place, but the type key was renamed to icon in order to match the new way of specifying which icon to be used: 5.x extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk 4.x extra : social : - type : github link : https://github.com/squidfunk Changes to *.html files \u00b6 The templates have undergone a set of changes to make them future-proof. If you've used theme extension to override a block or template, make sure that it matches the new structure: If you've overridden a block , check base.html for potential changes If you've overridden a template , check the respective *.html file for potential changes base.html \u00b6 @@ -2,7 +2,6 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -{% set feature = config.theme.feature %} {% set palette = config.theme.palette %} {% set font = config.theme.font %} <!doctype html> @@ -30,19 +29,6 @@ {% elif config.site_author %} <meta name=\"author\" content=\"{{ config.site_author }}\"> {% endif %} - {% for key in [ - \"clipboard.copy\", - \"clipboard.copied\", - \"search.language\", - \"search.pipeline.stopwords\", - \"search.pipeline.trimmer\", - \"search.result.none\", - \"search.result.one\", - \"search.result.other\", - \"search.tokenizer\" - ] %} - <meta name=\"lang:{{ key }}\" content=\"{{ lang.t(key) }}\"> - {% endfor %} <link rel=\"shortcut icon\" href=\"{{ config.theme.favicon | url }}\"> <meta name=\"generator\" content=\"mkdocs-{{ mkdocs_version }}, mkdocs-material-5.0.0\"> {% endblock %} @@ -56,9 +42,9 @@ {% endif %} {% endblock %} {% block styles %} - <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application.********.css' | url }}\"> + <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/main.********.min.css' | url }}\"> {% if palette.primary or palette.accent %} - <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application-palette.********.css' | url }}\"> + <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/palette.********.min.css' | url }}\"> {% endif %} {% if palette.primary %} {% import \"partials/palette.html\" as map %} @@ -69,20 +55,17 @@ {% endif %} {% endblock %} {% block libs %} - <script src=\"{{ 'assets/javascripts/modernizr.********.js' | url }}\"></script> {% endblock %} {% block fonts %} {% if font != false %} <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin> <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family={{ font.text | replace(' ', '+') + ':300,400,400i,700%7C' + font.code | replace(' ', '+') }}&display=fallback\"> <style>body,input{font-family:\"{{ font.text }}\",\"Helvetica Neue\",Helvetica,Arial,sans-serif}code,kbd,pre{font-family:\"{{ font.code }}\",\"Courier New\",Courier,monospace}</style> {% endif %} {% endblock %} - <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/material-icons.css' | url }}\"> {% if config.extra.manifest %} <link rel=\"manifest\" href=\"{{ config.extra.manifest | url }}\" crossorigin=\"use-credentials\"> {% endif %} @@ -95,47 +77,50 @@ {% endblock %} {% block extrahead %}{% endblock %} </head> + {% set direction = config.theme.direction | default(lang.t('direction')) %} {% if palette.primary or palette.accent %} {% set primary = palette.primary | replace(\" \", \"-\") | lower %} {% set accent = palette.accent | replace(\" \", \"-\") | lower %} - <body dir=\"{{ lang.t('direction') }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\"> + <body dir=\"{{ direction }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\"> {% else %} - <body dir=\"{{ lang.t('direction') }}\"> + <body dir=\"{{ direction }}\"> {% endif %} - <svg class=\"md-svg\"> - <defs> - {% set platform = config.extra.repo_icon or config.repo_url %} - {% if \"github\" in platform %} - {% include \"assets/images/icons/github.f0b8504a.svg\" %} - {% elif \"gitlab\" in platform %} - {% include \"assets/images/icons/gitlab.6dd19c00.svg\" %} - {% elif \"bitbucket\" in platform %} - {% include \"assets/images/icons/bitbucket.1b09e088.svg\" %} - {% endif %} - </defs> - </svg> <input class=\"md-toggle\" data-md-toggle=\"drawer\" type=\"checkbox\" id=\"__drawer\" autocomplete=\"off\"> <input class=\"md-toggle\" data-md-toggle=\"search\" type=\"checkbox\" id=\"__search\" autocomplete=\"off\"> - <label class=\"md-overlay\" data-md-component=\"overlay\" for=\"__drawer\"></label> + <label class=\"md-overlay\" for=\"__drawer\"></label> + <div data-md-component=\"skip\"> + {% if page.toc | first is defined %} + {% set skip = page.toc | first %} + <a href=\"{{ skip.url | url }}\" class=\"md-skip\"> + {{ lang.t('skip.link.title') }} + </a> + {% endif %} + </div> + <div data-md-component=\"announce\"> + {% if self.announce() %} + <aside class=\"md-announce\"> + <div class=\"md-announce__inner md-grid md-typeset\"> + {% block announce %}{% endblock %} + </div> + </aside> + {% endif %} + </div> {% block header %} {% include \"partials/header.html\" %} {% endblock %} - <div class=\"md-container\"> + <div class=\"md-container\" data-md-component=\"container\"> {% block hero %} {% if page and page.meta and page.meta.hero %} {% include \"partials/hero.html\" with context %} {% endif %} {% endblock %} - {% if feature.tabs %} - {% include \"partials/tabs.html\" %} - {% endif %} + {% block tabs %} + {% if \"tabs\" in config.theme.features %} + {% include \"partials/tabs.html\" %} + {% endif %} + {% endblock %} - <main class=\"md-main\" role=\"main\"> - <div class=\"md-main__inner md-grid\" data-md-component=\"container\"> + <main class=\"md-main\" data-md-component=\"main\"> + <div class=\"md-main__inner md-grid\"> {% block site_nav %} {% if nav %} <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"navigation\"> @@ -160,41 +141,25 @@ <article class=\"md-content__inner md-typeset\"> {% block content %} {% if page.edit_url %} - <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-icon md-content__icon\">&#xE3C9;</a> + <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-content__button md-icon\"> + {% include \".icons/material/pencil.svg\" %} + </a> {% endif %} + {% block source %} + {% if page and page.meta and page.meta.source %} + {% include \"partials/source-link.html\" %} + {% endif %} + {% endblock %} {% if not \"\\x3ch1\" in page.content %} <h1>{{ page.title | default(config.site_name, true)}}</h1> {% endif %} {{ page.content }} - {% block source %} - {% if page and page.meta and page.meta.source %} - <h2 id=\"__source\">{{ lang.t(\"meta.source\") }}</h2> - {% set repo = config.repo_url %} - {% if repo | last == \"/\" %} - {% set repo = repo[:-1] %} - {% endif %} - {% set path = page.meta.path | default([\"\"]) %} - {% set file = page.meta.source %} - <a href=\"{{ [repo, path, file] | join('/') }}\" title=\"{{ file }}\" class=\"md-source-file\"> - {{ file }} - </a> - {% endif %} - {% endblock %} + {% if page and page.meta %} + {% if page.meta.git_revision_date_localized or + page.meta.revision_date + %} + {% include \"partials/source-date.html\" %} - {% if page and page.meta and ( - page.meta.git_revision_date_localized or - page.meta.revision_date - ) %} - {% set label = lang.t(\"source.revision.date\") %} - <hr> - <div class=\"md-source-date\"> - <small> - {% if page.meta.git_revision_date_localized %} - {{ label }}: {{ page.meta.git_revision_date_localized }} - {% elif page.meta.revision_date %} - {{ label }}: {{ page.meta.revision_date }} - {% endif %} - </small> - </div> {% endif %} {% endblock %} {% block disqus %} @@ -208,29 +174,35 @@ {% include \"partials/footer.html\" %} {% endblock %} </div> {% block scripts %} - <script src=\"{{ 'assets/javascripts/application.********.js' | url }}\"></script> - {% if lang.t(\"search.language\") != \"en\" %} - {% set languages = lang.t(\"search.language\").split(\",\") %} - {% if languages | length and languages[0] != \"\" %} - {% set path = \"assets/javascripts/lunr/\" %} - <script src=\"{{ (path ~ 'lunr.stemmer.support.js') | url }}\"></script> - {% for language in languages | map(\"trim\") %} - {% if language != \"en\" %} - {% if language == \"ja\" %} - <script src=\"{{ (path ~ 'tinyseg.js') | url }}\"></script> - {% endif %} - {% if language in (\"ar\", \"da\", \"de\", \"es\", \"fi\", \"fr\", \"hu\", \"it\", \"ja\", \"nl\", \"no\", \"pt\", \"ro\", \"ru\", \"sv\", \"th\", \"tr\", \"vi\") %} - <script src=\"{{ (path ~ 'lunr.' ~ language ~ '.js') | url }}\"></script> - {% endif %} - {% endif %} - {% endfor %} - {% if languages | length > 1 %} - <script src=\"{{ (path ~ 'lunr.multi.js') | url }}\"></script> - {% endif %} - {% endif %} - {% endif %} - <script>app.initialize({version:\"{{ mkdocs_version }}\",url:{base:\"{{ base_url }}\"}})</script> + <script src=\"{{ 'assets/javascripts/vendor.********.min.js' | url }}\"></script> + <script src=\"{{ 'assets/javascripts/bundle.********.min.js' | url }}\"></script> + {%- set translations = {} -%} + {%- for key in [ + \"clipboard.copy\", + \"clipboard.copied\", + \"search.config.lang\", + \"search.config.pipeline\", + \"search.config.separator\", + \"search.result.placeholder\", + \"search.result.none\", + \"search.result.one\", + \"search.result.other\" + ] -%} + {%- set _ = translations.update({ key: lang.t(key) }) -%} + {%- endfor -%} + <script id=\"__lang\" type=\"application/json\"> + {{- translations | tojson -}} + </script> + {% block config %}{% endblock %} + <script> + app = initialize({ + base: \"{{ base_url }}\", + features: {{ config.theme.features | tojson }}, + search: Object.assign({ + worker: \"{{ 'assets/javascripts/worker/search.********.min.js' | url }}\" + }, typeof search !== \"undefined\" && search) + }) + </script> {% for path in config[\"extra_javascript\"] %} <script src=\"{{ path | url }}\"></script> {% endfor %} partials/footer.html \u00b6 @@ -5,34 +5,34 @@ <div class=\"md-footer-nav\"> - <nav class=\"md-footer-nav__inner md-grid\"> + <nav class=\"md-footer-nav__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\"> {% if page.previous_page %} - <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-flex md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <i class=\"md-icon md-icon--arrow-back md-footer-nav__button\"></i> + <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> + <div class=\"md-footer-nav__button md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} </div> - <div class=\"md-flex__cell md-flex__cell--stretch md-footer-nav__title\"> - <span class=\"md-flex__ellipsis\"> + <div class=\"md-footer-nav__title\"> + <div class=\"md-ellipsis\"> <span class=\"md-footer-nav__direction\"> {{ lang.t(\"footer.previous\") }} </span> {{ page.previous_page.title }} - </span> + </div> </div> </a> {% endif %} {% if page.next_page %} - <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-flex md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> - <div class=\"md-flex__cell md-flex__cell--stretch md-footer-nav__title\"> - <span class=\"md-flex__ellipsis\"> + <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> + <div class=\"md-footer-nav__title\"> + <div class=\"md-ellipsis\"> <span class=\"md-footer-nav__direction\"> {{ lang.t(\"footer.next\") }} </span> {{ page.next_page.title }} - </span> + </div> </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <i class=\"md-icon md-icon--arrow-forward md-footer-nav__button\"></i> + <div class=\"md-footer-nav__button md-icon\"> + {% include \".icons/material/arrow-right.svg\" %} </div> </a> {% endif %} partials/header.html \u00b6 @@ -2,51 +2,43 @@ This file was automatically generated - do not edit -#} <header class=\"md-header\" data-md-component=\"header\"> - <nav class=\"md-header-nav md-grid\"> - <div class=\"md-flex\"> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" aria-label=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\"> - {% if config.theme.logo.icon %} - <i class=\"md-icon\">{{ config.theme.logo.icon }}</i> - {% else %} - <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"24\" height=\"24\"> - {% endif %} - </a> - </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <label class=\"md-icon md-icon--menu md-header-nav__button\" for=\"__drawer\"></label> - </div> - <div class=\"md-flex__cell md-flex__cell--stretch\"> - <div class=\"md-flex__ellipsis md-header-nav__title\" data-md-component=\"title\"> - {% if config.site_name == page.title %} - {{ config.site_name }} - {% else %} - <span class=\"md-header-nav__topic\"> - {{ config.site_name }} - </span> - <span class=\"md-header-nav__topic\"> - {% if page and page.meta and page.meta.title %} - {{ page.meta.title }} - {% else %} - {{ page.title }} - {% endif %} - </span> - {% endif %} + <nav class=\"md-header-nav md-grid\" aria-label=\"{{ lang.t('header.title') }}\"> + <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + {% include \"partials/logo.html\" %} + </a> + <label class=\"md-header-nav__button md-icon\" for=\"__drawer\"> + {% include \".icons/material/menu\" ~ \".svg\" %} + </label> + <div class=\"md-header-nav__title\" data-md-component=\"header-title\"> + {% if config.site_name == page.title %} + <div class=\"md-header-nav__ellipsis md-ellipsis\"> + {{ config.site_name }} </div> - </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - {% if \"search\" in config[\"plugins\"] %} - <label class=\"md-icon md-icon--search md-header-nav__button\" for=\"__search\"></label> - {% include \"partials/search.html\" %} - {% endif %} - </div> - {% if config.repo_url %} - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <div class=\"md-header-nav__source\"> - {% include \"partials/source.html\" %} - </div> + {% else %} + <div class=\"md-header-nav__ellipsis\"> + <span class=\"md-header-nav__topic md-ellipsis\"> + {{ config.site_name }} + </span> + <span class=\"md-header-nav__topic md-ellipsis\"> + {% if page and page.meta and page.meta.title %} + {{ page.meta.title }} + {% else %} + {{ page.title }} + {% endif %} + </span> </div> {% endif %} </div> + {% if \"search\" in config[\"plugins\"] %} + <label class=\"md-header-nav__button md-icon\" for=\"__search\"> + {% include \".icons/material/magnify.svg\" %} + </label> + {% include \"partials/search.html\" %} + {% endif %} + {% if config.repo_url %} + <div class=\"md-header-nav__source\"> + {% include \"partials/source.html\" %} + </div> + {% endif %} </nav> </header> partials/hero.html \u00b6 @@ -1,9 +1,8 @@ {#- This file was automatically generated - do not edit -#} -{% set feature = config.theme.feature %} {% set class = \"md-hero\" %} -{% if not feature.tabs %} +{% if \"tabs\" not in config.theme.features %} {% set class = \"md-hero md-hero--expand\" %} {% endif %} <div class=\"{{ class }}\" data-md-component=\"hero\"> partials/language.html \u00b6 @@ -3,12 +3,4 @@ -#} {% import \"partials/language/\" + config.theme.language + \".html\" as lang %} {% import \"partials/language/en.html\" as fallback %} -{% macro t(key) %}{{ { - \"direction\": config.theme.direction, - \"search.language\": ( - config.extra.search | default({}) - ).language, - \"search.tokenizer\": ( - config.extra.search | default({}) - ).tokenizer | default(\"\", true), -}[key] or lang.t(key) or fallback.t(key) }}{% endmacro %} +{% macro t(key) %}{{ lang.t(key) | default(fallback.t(key)) }}{% endmacro %} partials/logo.html \u00b6 @@ -0,0 +1,9 @@ +{#- + This file was automatically generated - do not edit +-#} +{% if config.theme.logo %} + <img src=\"{{ config.theme.logo | url }}\" alt=\"logo\"> +{% else %} + {% set icon = config.theme.icon.logo or \"material/library\" %} + {% include \".icons/\" ~ icon ~ \".svg\" %} +{% endif %} partials/nav-item.html \u00b6 @@ -14,9 +14,15 @@ {% endif %} <label class=\"md-nav__link\" for=\"{{ path }}\"> {{ nav_item.title }} + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/chevron-right.svg\" %} + </span> </label> - <nav class=\"md-nav\" data-md-component=\"collapsible\" data-md-level=\"{{ level }}\"> + <nav class=\"md-nav\" aria-label=\"{{ nav_item.title }}\" data-md-level=\"{{ level }}\"> <label class=\"md-nav__title\" for=\"{{ path }}\"> + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </span> {{ nav_item.title }} </label> <ul class=\"md-nav__list\" data-md-scrollfix> @@ -39,6 +45,9 @@ {% if toc | first is defined %} <label class=\"md-nav__link md-nav__link--active\" for=\"__toc\"> {{ nav_item.title }} + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/table-of-contents.svg\" %} + </span> </label> {% endif %} <a href=\"{{ nav_item.url | url }}\" title=\"{{ nav_item.title | striptags }}\" class=\"md-nav__link md-nav__link--active\"> partials/nav.html \u00b6 @@ -1,14 +1,10 @@ {#- This file was automatically generated - do not edit -#} -<nav class=\"md-nav md-nav--primary\" data-md-level=\"0\"> - <label class=\"md-nav__title md-nav__title--site\" for=\"__drawer\"> - <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\"> - {% if config.theme.logo.icon %} - <i class=\"md-icon\">{{ config.theme.logo.icon }}</i> - {% else %} - <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"48\" height=\"48\"> - {% endif %} +<nav class=\"md-nav md-nav--primary\" aria-label=\"{{ lang.t('nav.title') }}\" data-md-level=\"0\"> + <label class=\"md-nav__title\" for=\"__drawer\"> + <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + {% include \"partials/logo.html\" %} </a> {{ config.site_name }} </label> partials/search.html \u00b6 @@ -6,15 +6,18 @@ <label class=\"md-search__overlay\" for=\"__search\"></label> <div class=\"md-search__inner\" role=\"search\"> <form class=\"md-search__form\" name=\"search\"> - <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"Search\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"query\" data-md-state=\"active\"> + <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"{{ lang.t('search.placeholder') }}\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"search-query\" data-md-state=\"active\"> <label class=\"md-search__icon md-icon\" for=\"__search\"> + {% include \".icons/material/magnify.svg\" %} + {% include \".icons/material/arrow-left.svg\" %} </label> - <button type=\"reset\" class=\"md-icon md-search__icon\" data-md-component=\"reset\" tabindex=\"-1\"> - &#xE5CD; + <button type=\"reset\" class=\"md-search__icon md-icon\" aria-label=\"{{ lang.t('search.reset') }}\" data-md-component=\"search-reset\" tabindex=\"-1\"> + {% include \".icons/material/close.svg\" %} </button> </form> <div class=\"md-search__output\"> <div class=\"md-search__scrollwrap\" data-md-scrollfix> - <div class=\"md-search-result\" data-md-component=\"result\"> + <div class=\"md-search-result\" data-md-component=\"search-result\"> <div class=\"md-search-result__meta\"> {{ lang.t(\"search.result.placeholder\") }} </div> partials/social.html \u00b6 @@ -3,9 +3,12 @@ -#} {% if config.extra.social %} <div class=\"md-footer-social\"> - <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/font-awesome.css' | url }}\"> {% for social in config.extra.social %} - <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ social.type }}\" class=\"md-footer-social__link fa fa-{{ social.type }}\"></a> + {% set _,rest = social.link.split(\"//\") %} + {% set domain = rest.split(\"/\")[0] %} + <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ domain }}\" class=\"md-footer-social__link\"> + {% include \".icons/\" ~ social.icon ~ \".svg\" %} + </a> {% endfor %} </div> {% endif %} partials/source-date.html \u00b6 @@ -0,0 +1,15 @@ +{#- + This file was automatically generated - do not edit +-#} +{% import \"partials/language.html\" as lang with context %} +{% set label = lang.t(\"source.revision.date\") %} +<hr> +<div class=\"md-source-date\"> + <small> + {% if page.meta.git_revision_date_localized %} + {{ label }}: {{ page.meta.git_revision_date_localized }} + {% elif page.meta.revision_date %} + {{ label }}: {{ page.meta.revision_date }} + {% endif %} + </small> +</div> partials/source-link.html \u00b6 @@ -0,0 +1,13 @@ +{#- + This file was automatically generated - do not edit +-#} +{% import \"partials/language.html\" as lang with context %} +{% set repo = config.repo_url %} +{% if repo | last == \"/\" %} + {% set repo = repo[:-1] %} +{% endif %} +{% set path = page.meta.path | default([\"\"]) %} +<a href=\"{{ [repo, path, page.meta.source] | join('/') }}\" title=\"{{ file }}\" class=\"md-content__button md-icon\"> + {{ lang.t(\"meta.source\") }} + {% include \".icons/\" ~ config.theme.icon.repo ~ \".svg\" %} +</a> partials/source.html \u00b6 @@ -2,24 +2,11 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -{% set platform = config.extra.repo_icon or config.repo_url %} -{% if \"github\" in platform %} - {% set repo_type = \"github\" %} -{% elif \"gitlab\" in platform %} - {% set repo_type = \"gitlab\" %} -{% elif \"bitbucket\" in platform %} - {% set repo_type = \"bitbucket\" %} -{% else %} - {% set repo_type = \"\" %} -{% endif %} -<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\" data-md-source=\"{{ repo_type }}\"> - {% if repo_type %} - <div class=\"md-source__icon\"> - <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"> - <use xlink:href=\"#__{{ repo_type }}\" width=\"24\" height=\"24\"></use> - </svg> - </div> - {% endif %} +<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\"> + <div class=\"md-source__icon md-icon\"> + {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %} + {% include \".icons/\" ~ icon ~ \".svg\" %} + </div> <div class=\"md-source__repository\"> {{ config.repo_name }} </div> partials/tabs-item.html \u00b6 @@ -1,7 +1,7 @@ {#- This file was automatically generated - do not edit -#} -{% if nav_item.is_homepage %} +{% if nav_item.is_homepage or nav_item.url == \"index.html\" %} <li class=\"md-tabs__item\"> {% if not page.ancestors | length and nav | selectattr(\"url\", page.url) %} <a href=\"{{ nav_item.url | url }}\" class=\"md-tabs__link md-tabs__link--active\"> partials/tabs.html \u00b6 @@ -5,7 +5,7 @@ {% if page.ancestors | length > 0 %} {% set class = \"md-tabs md-tabs--active\" %} {% endif %} -<nav class=\"{{ class }}\" data-md-component=\"tabs\"> +<nav class=\"{{ class }}\" aria-label=\"{{ lang.t('tabs.title') }}\" data-md-component=\"tabs\"> <div class=\"md-tabs__inner md-grid\"> <ul class=\"md-tabs__list\"> {% for nav_item in nav %} partials/toc-item.html \u00b6 @@ -6,7 +6,7 @@ {{ toc_item.title }} </a> {% if toc_item.children %} - <nav class=\"md-nav\"> + <nav class=\"md-nav\" aria-label=\"{{ toc_item.title }}\"> <ul class=\"md-nav__list\"> {% for toc_item in toc_item.children %} {% include \"partials/toc-item.html\" %} partials/toc.html \u00b6 @@ -2,35 +2,22 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -<nav class=\"md-nav md-nav--secondary\"> +<nav class=\"md-nav md-nav--secondary\" aria-label=\"{{ lang.t('toc.title') }}\"> {% endif %} {% if toc | first is defined %} <label class=\"md-nav__title\" for=\"__toc\"> + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </span> {{ lang.t(\"toc.title\") }} </label> <ul class=\"md-nav__list\" data-md-scrollfix> {% for toc_item in toc %} {% include \"partials/toc-item.html\" %} {% endfor %} - {% if page.meta.source and page.meta.source | length > 0 %} - <li class=\"md-nav__item\"> - <a href=\"#__source\" class=\"md-nav__link md-nav__link--active\"> - {{ lang.t(\"meta.source\") }} - </a> - </li> - {% endif %} - {% set disqus = config.extra.disqus %} - {% if page and page.meta and page.meta.disqus is string %} - {% set disqus = page.meta.disqus %} - {% endif %} - {% if not page.is_homepage and disqus %} - <li class=\"md-nav__item\"> - <a href=\"#__comments\" class=\"md-nav__link md-nav__link--active\"> - {{ lang.t(\"meta.comments\") }} - </a> - </li> - {% endif %} </ul> {% endif %} </nav>","title":"Upgrading to 5.x"},{"location":"releases/5/#upgrading-to-5x","text":"","title":"Upgrading to 5.x"},{"location":"releases/5/#highlights","text":"Reactive architecture \u2013 try app.dialog$.next(\"Hi!\") in the console Instant loading \u2013 make Material behave like a Single Page Application Improved CSS customization with CSS variables \u2013 set your brand's colors Improved CSS resilience, e.g. proper sidebar locking for customized headers Improved icon integration and configuration \u2013 now including over 5k icons Added possibility to use any icon for logo, repository and social links Search UI does not freeze anymore (moved to web worker) Search index built only once when using instant loading Improved extensible keyboard handling Support for prebuilt search indexes Support for displaying stars and forks for GitLab repositories Support for scroll snapping of sidebars and search results Reduced HTML and CSS footprint due to deprecation of Internet Explorer support Slight facelifting of some UI elements (Admonitions, tables, ...)","title":"Highlights"},{"location":"releases/5/#how-to-upgrade","text":"","title":"How to upgrade"},{"location":"releases/5/#changes-to-mkdocsyml","text":"Following is a list of changes that need to be made to mkdocs.yml . Note that you only have to adjust the value if you defined it, so if your configuration does not contain the key, you can skip it.","title":"Changes to mkdocs.yml"},{"location":"releases/5/#themefeature","text":"Optional features like tabs and instant loading are now implemented as flags and can be enabled by listing them in mkdocs.yml under theme.features : 5.x theme : features : - tabs - instant 4.x theme : feature : tabs : true","title":"theme.feature"},{"location":"releases/5/#themelogoicon","text":"The logo icon configuration was centralized under theme.icon.logo and can now be set to any of the icons bundled with the theme : 5.x theme : icon : logo : material/cloud 4.x theme : logo : icon : cloud","title":"theme.logo.icon"},{"location":"releases/5/#extrarepo_icon","text":"The repo icon configuration was centralized under theme.icon.repo and can now be set to any of the icons bundled with the theme : 5.x theme : icon : repo : fontawesome/brands/gitlab 4.x extra : repo_icon : gitlab","title":"extra.repo_icon"},{"location":"releases/5/#extrasearch","text":"Search is now configured as part of the plugin options . Note that the search languages must now be listed as an array of strings and the tokenizer was renamed to separator : 5.x plugins : - search : separator : '[\\s\\-\\.]+' lang : - en - de - ru 4.x extra : search : language : en, de, ru tokenizer : [ \\s\\-\\. ] +","title":"extra.search.*"},{"location":"releases/5/#extrasocial","text":"Social links stayed in the same place, but the type key was renamed to icon in order to match the new way of specifying which icon to be used: 5.x extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk 4.x extra : social : - type : github link : https://github.com/squidfunk","title":"extra.social.*"},{"location":"releases/5/#changes-to-html-files","text":"The templates have undergone a set of changes to make them future-proof. If you've used theme extension to override a block or template, make sure that it matches the new structure: If you've overridden a block , check base.html for potential changes If you've overridden a template , check the respective *.html file for potential changes","title":"Changes to *.html files"},{"location":"releases/5/#basehtml","text":"@@ -2,7 +2,6 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -{% set feature = config.theme.feature %} {% set palette = config.theme.palette %} {% set font = config.theme.font %} <!doctype html> @@ -30,19 +29,6 @@ {% elif config.site_author %} <meta name=\"author\" content=\"{{ config.site_author }}\"> {% endif %} - {% for key in [ - \"clipboard.copy\", - \"clipboard.copied\", - \"search.language\", - \"search.pipeline.stopwords\", - \"search.pipeline.trimmer\", - \"search.result.none\", - \"search.result.one\", - \"search.result.other\", - \"search.tokenizer\" - ] %} - <meta name=\"lang:{{ key }}\" content=\"{{ lang.t(key) }}\"> - {% endfor %} <link rel=\"shortcut icon\" href=\"{{ config.theme.favicon | url }}\"> <meta name=\"generator\" content=\"mkdocs-{{ mkdocs_version }}, mkdocs-material-5.0.0\"> {% endblock %} @@ -56,9 +42,9 @@ {% endif %} {% endblock %} {% block styles %} - <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application.********.css' | url }}\"> + <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/main.********.min.css' | url }}\"> {% if palette.primary or palette.accent %} - <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application-palette.********.css' | url }}\"> + <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/palette.********.min.css' | url }}\"> {% endif %} {% if palette.primary %} {% import \"partials/palette.html\" as map %} @@ -69,20 +55,17 @@ {% endif %} {% endblock %} {% block libs %} - <script src=\"{{ 'assets/javascripts/modernizr.********.js' | url }}\"></script> {% endblock %} {% block fonts %} {% if font != false %} <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin> <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family={{ font.text | replace(' ', '+') + ':300,400,400i,700%7C' + font.code | replace(' ', '+') }}&display=fallback\"> <style>body,input{font-family:\"{{ font.text }}\",\"Helvetica Neue\",Helvetica,Arial,sans-serif}code,kbd,pre{font-family:\"{{ font.code }}\",\"Courier New\",Courier,monospace}</style> {% endif %} {% endblock %} - <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/material-icons.css' | url }}\"> {% if config.extra.manifest %} <link rel=\"manifest\" href=\"{{ config.extra.manifest | url }}\" crossorigin=\"use-credentials\"> {% endif %} @@ -95,47 +77,50 @@ {% endblock %} {% block extrahead %}{% endblock %} </head> + {% set direction = config.theme.direction | default(lang.t('direction')) %} {% if palette.primary or palette.accent %} {% set primary = palette.primary | replace(\" \", \"-\") | lower %} {% set accent = palette.accent | replace(\" \", \"-\") | lower %} - <body dir=\"{{ lang.t('direction') }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\"> + <body dir=\"{{ direction }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\"> {% else %} - <body dir=\"{{ lang.t('direction') }}\"> + <body dir=\"{{ direction }}\"> {% endif %} - <svg class=\"md-svg\"> - <defs> - {% set platform = config.extra.repo_icon or config.repo_url %} - {% if \"github\" in platform %} - {% include \"assets/images/icons/github.f0b8504a.svg\" %} - {% elif \"gitlab\" in platform %} - {% include \"assets/images/icons/gitlab.6dd19c00.svg\" %} - {% elif \"bitbucket\" in platform %} - {% include \"assets/images/icons/bitbucket.1b09e088.svg\" %} - {% endif %} - </defs> - </svg> <input class=\"md-toggle\" data-md-toggle=\"drawer\" type=\"checkbox\" id=\"__drawer\" autocomplete=\"off\"> <input class=\"md-toggle\" data-md-toggle=\"search\" type=\"checkbox\" id=\"__search\" autocomplete=\"off\"> - <label class=\"md-overlay\" data-md-component=\"overlay\" for=\"__drawer\"></label> + <label class=\"md-overlay\" for=\"__drawer\"></label> + <div data-md-component=\"skip\"> + {% if page.toc | first is defined %} + {% set skip = page.toc | first %} + <a href=\"{{ skip.url | url }}\" class=\"md-skip\"> + {{ lang.t('skip.link.title') }} + </a> + {% endif %} + </div> + <div data-md-component=\"announce\"> + {% if self.announce() %} + <aside class=\"md-announce\"> + <div class=\"md-announce__inner md-grid md-typeset\"> + {% block announce %}{% endblock %} + </div> + </aside> + {% endif %} + </div> {% block header %} {% include \"partials/header.html\" %} {% endblock %} - <div class=\"md-container\"> + <div class=\"md-container\" data-md-component=\"container\"> {% block hero %} {% if page and page.meta and page.meta.hero %} {% include \"partials/hero.html\" with context %} {% endif %} {% endblock %} - {% if feature.tabs %} - {% include \"partials/tabs.html\" %} - {% endif %} + {% block tabs %} + {% if \"tabs\" in config.theme.features %} + {% include \"partials/tabs.html\" %} + {% endif %} + {% endblock %} - <main class=\"md-main\" role=\"main\"> - <div class=\"md-main__inner md-grid\" data-md-component=\"container\"> + <main class=\"md-main\" data-md-component=\"main\"> + <div class=\"md-main__inner md-grid\"> {% block site_nav %} {% if nav %} <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"navigation\"> @@ -160,41 +141,25 @@ <article class=\"md-content__inner md-typeset\"> {% block content %} {% if page.edit_url %} - <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-icon md-content__icon\">&#xE3C9;</a> + <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-content__button md-icon\"> + {% include \".icons/material/pencil.svg\" %} + </a> {% endif %} + {% block source %} + {% if page and page.meta and page.meta.source %} + {% include \"partials/source-link.html\" %} + {% endif %} + {% endblock %} {% if not \"\\x3ch1\" in page.content %} <h1>{{ page.title | default(config.site_name, true)}}</h1> {% endif %} {{ page.content }} - {% block source %} - {% if page and page.meta and page.meta.source %} - <h2 id=\"__source\">{{ lang.t(\"meta.source\") }}</h2> - {% set repo = config.repo_url %} - {% if repo | last == \"/\" %} - {% set repo = repo[:-1] %} - {% endif %} - {% set path = page.meta.path | default([\"\"]) %} - {% set file = page.meta.source %} - <a href=\"{{ [repo, path, file] | join('/') }}\" title=\"{{ file }}\" class=\"md-source-file\"> - {{ file }} - </a> - {% endif %} - {% endblock %} + {% if page and page.meta %} + {% if page.meta.git_revision_date_localized or + page.meta.revision_date + %} + {% include \"partials/source-date.html\" %} - {% if page and page.meta and ( - page.meta.git_revision_date_localized or - page.meta.revision_date - ) %} - {% set label = lang.t(\"source.revision.date\") %} - <hr> - <div class=\"md-source-date\"> - <small> - {% if page.meta.git_revision_date_localized %} - {{ label }}: {{ page.meta.git_revision_date_localized }} - {% elif page.meta.revision_date %} - {{ label }}: {{ page.meta.revision_date }} - {% endif %} - </small> - </div> {% endif %} {% endblock %} {% block disqus %} @@ -208,29 +174,35 @@ {% include \"partials/footer.html\" %} {% endblock %} </div> {% block scripts %} - <script src=\"{{ 'assets/javascripts/application.********.js' | url }}\"></script> - {% if lang.t(\"search.language\") != \"en\" %} - {% set languages = lang.t(\"search.language\").split(\",\") %} - {% if languages | length and languages[0] != \"\" %} - {% set path = \"assets/javascripts/lunr/\" %} - <script src=\"{{ (path ~ 'lunr.stemmer.support.js') | url }}\"></script> - {% for language in languages | map(\"trim\") %} - {% if language != \"en\" %} - {% if language == \"ja\" %} - <script src=\"{{ (path ~ 'tinyseg.js') | url }}\"></script> - {% endif %} - {% if language in (\"ar\", \"da\", \"de\", \"es\", \"fi\", \"fr\", \"hu\", \"it\", \"ja\", \"nl\", \"no\", \"pt\", \"ro\", \"ru\", \"sv\", \"th\", \"tr\", \"vi\") %} - <script src=\"{{ (path ~ 'lunr.' ~ language ~ '.js') | url }}\"></script> - {% endif %} - {% endif %} - {% endfor %} - {% if languages | length > 1 %} - <script src=\"{{ (path ~ 'lunr.multi.js') | url }}\"></script> - {% endif %} - {% endif %} - {% endif %} - <script>app.initialize({version:\"{{ mkdocs_version }}\",url:{base:\"{{ base_url }}\"}})</script> + <script src=\"{{ 'assets/javascripts/vendor.********.min.js' | url }}\"></script> + <script src=\"{{ 'assets/javascripts/bundle.********.min.js' | url }}\"></script> + {%- set translations = {} -%} + {%- for key in [ + \"clipboard.copy\", + \"clipboard.copied\", + \"search.config.lang\", + \"search.config.pipeline\", + \"search.config.separator\", + \"search.result.placeholder\", + \"search.result.none\", + \"search.result.one\", + \"search.result.other\" + ] -%} + {%- set _ = translations.update({ key: lang.t(key) }) -%} + {%- endfor -%} + <script id=\"__lang\" type=\"application/json\"> + {{- translations | tojson -}} + </script> + {% block config %}{% endblock %} + <script> + app = initialize({ + base: \"{{ base_url }}\", + features: {{ config.theme.features | tojson }}, + search: Object.assign({ + worker: \"{{ 'assets/javascripts/worker/search.********.min.js' | url }}\" + }, typeof search !== \"undefined\" && search) + }) + </script> {% for path in config[\"extra_javascript\"] %} <script src=\"{{ path | url }}\"></script> {% endfor %}","title":"base.html"},{"location":"releases/5/#partialsfooterhtml","text":"@@ -5,34 +5,34 @@ <div class=\"md-footer-nav\"> - <nav class=\"md-footer-nav__inner md-grid\"> + <nav class=\"md-footer-nav__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\"> {% if page.previous_page %} - <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-flex md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <i class=\"md-icon md-icon--arrow-back md-footer-nav__button\"></i> + <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> + <div class=\"md-footer-nav__button md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} </div> - <div class=\"md-flex__cell md-flex__cell--stretch md-footer-nav__title\"> - <span class=\"md-flex__ellipsis\"> + <div class=\"md-footer-nav__title\"> + <div class=\"md-ellipsis\"> <span class=\"md-footer-nav__direction\"> {{ lang.t(\"footer.previous\") }} </span> {{ page.previous_page.title }} - </span> + </div> </div> </a> {% endif %} {% if page.next_page %} - <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-flex md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> - <div class=\"md-flex__cell md-flex__cell--stretch md-footer-nav__title\"> - <span class=\"md-flex__ellipsis\"> + <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> + <div class=\"md-footer-nav__title\"> + <div class=\"md-ellipsis\"> <span class=\"md-footer-nav__direction\"> {{ lang.t(\"footer.next\") }} </span> {{ page.next_page.title }} - </span> + </div> </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <i class=\"md-icon md-icon--arrow-forward md-footer-nav__button\"></i> + <div class=\"md-footer-nav__button md-icon\"> + {% include \".icons/material/arrow-right.svg\" %} </div> </a> {% endif %}","title":"partials/footer.html"},{"location":"releases/5/#partialsheaderhtml","text":"@@ -2,51 +2,43 @@ This file was automatically generated - do not edit -#} <header class=\"md-header\" data-md-component=\"header\"> - <nav class=\"md-header-nav md-grid\"> - <div class=\"md-flex\"> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" aria-label=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\"> - {% if config.theme.logo.icon %} - <i class=\"md-icon\">{{ config.theme.logo.icon }}</i> - {% else %} - <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"24\" height=\"24\"> - {% endif %} - </a> - </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <label class=\"md-icon md-icon--menu md-header-nav__button\" for=\"__drawer\"></label> - </div> - <div class=\"md-flex__cell md-flex__cell--stretch\"> - <div class=\"md-flex__ellipsis md-header-nav__title\" data-md-component=\"title\"> - {% if config.site_name == page.title %} - {{ config.site_name }} - {% else %} - <span class=\"md-header-nav__topic\"> - {{ config.site_name }} - </span> - <span class=\"md-header-nav__topic\"> - {% if page and page.meta and page.meta.title %} - {{ page.meta.title }} - {% else %} - {{ page.title }} - {% endif %} - </span> - {% endif %} + <nav class=\"md-header-nav md-grid\" aria-label=\"{{ lang.t('header.title') }}\"> + <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + {% include \"partials/logo.html\" %} + </a> + <label class=\"md-header-nav__button md-icon\" for=\"__drawer\"> + {% include \".icons/material/menu\" ~ \".svg\" %} + </label> + <div class=\"md-header-nav__title\" data-md-component=\"header-title\"> + {% if config.site_name == page.title %} + <div class=\"md-header-nav__ellipsis md-ellipsis\"> + {{ config.site_name }} </div> - </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - {% if \"search\" in config[\"plugins\"] %} - <label class=\"md-icon md-icon--search md-header-nav__button\" for=\"__search\"></label> - {% include \"partials/search.html\" %} - {% endif %} - </div> - {% if config.repo_url %} - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <div class=\"md-header-nav__source\"> - {% include \"partials/source.html\" %} - </div> + {% else %} + <div class=\"md-header-nav__ellipsis\"> + <span class=\"md-header-nav__topic md-ellipsis\"> + {{ config.site_name }} + </span> + <span class=\"md-header-nav__topic md-ellipsis\"> + {% if page and page.meta and page.meta.title %} + {{ page.meta.title }} + {% else %} + {{ page.title }} + {% endif %} + </span> </div> {% endif %} </div> + {% if \"search\" in config[\"plugins\"] %} + <label class=\"md-header-nav__button md-icon\" for=\"__search\"> + {% include \".icons/material/magnify.svg\" %} + </label> + {% include \"partials/search.html\" %} + {% endif %} + {% if config.repo_url %} + <div class=\"md-header-nav__source\"> + {% include \"partials/source.html\" %} + </div> + {% endif %} </nav> </header>","title":"partials/header.html"},{"location":"releases/5/#partialsherohtml","text":"@@ -1,9 +1,8 @@ {#- This file was automatically generated - do not edit -#} -{% set feature = config.theme.feature %} {% set class = \"md-hero\" %} -{% if not feature.tabs %} +{% if \"tabs\" not in config.theme.features %} {% set class = \"md-hero md-hero--expand\" %} {% endif %} <div class=\"{{ class }}\" data-md-component=\"hero\">","title":"partials/hero.html"},{"location":"releases/5/#partialslanguagehtml","text":"@@ -3,12 +3,4 @@ -#} {% import \"partials/language/\" + config.theme.language + \".html\" as lang %} {% import \"partials/language/en.html\" as fallback %} -{% macro t(key) %}{{ { - \"direction\": config.theme.direction, - \"search.language\": ( - config.extra.search | default({}) - ).language, - \"search.tokenizer\": ( - config.extra.search | default({}) - ).tokenizer | default(\"\", true), -}[key] or lang.t(key) or fallback.t(key) }}{% endmacro %} +{% macro t(key) %}{{ lang.t(key) | default(fallback.t(key)) }}{% endmacro %}","title":"partials/language.html"},{"location":"releases/5/#partialslogohtml","text":"@@ -0,0 +1,9 @@ +{#- + This file was automatically generated - do not edit +-#} +{% if config.theme.logo %} + <img src=\"{{ config.theme.logo | url }}\" alt=\"logo\"> +{% else %} + {% set icon = config.theme.icon.logo or \"material/library\" %} + {% include \".icons/\" ~ icon ~ \".svg\" %} +{% endif %}","title":"partials/logo.html"},{"location":"releases/5/#partialsnav-itemhtml","text":"@@ -14,9 +14,15 @@ {% endif %} <label class=\"md-nav__link\" for=\"{{ path }}\"> {{ nav_item.title }} + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/chevron-right.svg\" %} + </span> </label> - <nav class=\"md-nav\" data-md-component=\"collapsible\" data-md-level=\"{{ level }}\"> + <nav class=\"md-nav\" aria-label=\"{{ nav_item.title }}\" data-md-level=\"{{ level }}\"> <label class=\"md-nav__title\" for=\"{{ path }}\"> + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </span> {{ nav_item.title }} </label> <ul class=\"md-nav__list\" data-md-scrollfix> @@ -39,6 +45,9 @@ {% if toc | first is defined %} <label class=\"md-nav__link md-nav__link--active\" for=\"__toc\"> {{ nav_item.title }} + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/table-of-contents.svg\" %} + </span> </label> {% endif %} <a href=\"{{ nav_item.url | url }}\" title=\"{{ nav_item.title | striptags }}\" class=\"md-nav__link md-nav__link--active\">","title":"partials/nav-item.html"},{"location":"releases/5/#partialsnavhtml","text":"@@ -1,14 +1,10 @@ {#- This file was automatically generated - do not edit -#} -<nav class=\"md-nav md-nav--primary\" data-md-level=\"0\"> - <label class=\"md-nav__title md-nav__title--site\" for=\"__drawer\"> - <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\"> - {% if config.theme.logo.icon %} - <i class=\"md-icon\">{{ config.theme.logo.icon }}</i> - {% else %} - <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"48\" height=\"48\"> - {% endif %} +<nav class=\"md-nav md-nav--primary\" aria-label=\"{{ lang.t('nav.title') }}\" data-md-level=\"0\"> + <label class=\"md-nav__title\" for=\"__drawer\"> + <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + {% include \"partials/logo.html\" %} </a> {{ config.site_name }} </label>","title":"partials/nav.html"},{"location":"releases/5/#partialssearchhtml","text":"@@ -6,15 +6,18 @@ <label class=\"md-search__overlay\" for=\"__search\"></label> <div class=\"md-search__inner\" role=\"search\"> <form class=\"md-search__form\" name=\"search\"> - <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"Search\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"query\" data-md-state=\"active\"> + <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"{{ lang.t('search.placeholder') }}\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"search-query\" data-md-state=\"active\"> <label class=\"md-search__icon md-icon\" for=\"__search\"> + {% include \".icons/material/magnify.svg\" %} + {% include \".icons/material/arrow-left.svg\" %} </label> - <button type=\"reset\" class=\"md-icon md-search__icon\" data-md-component=\"reset\" tabindex=\"-1\"> - &#xE5CD; + <button type=\"reset\" class=\"md-search__icon md-icon\" aria-label=\"{{ lang.t('search.reset') }}\" data-md-component=\"search-reset\" tabindex=\"-1\"> + {% include \".icons/material/close.svg\" %} </button> </form> <div class=\"md-search__output\"> <div class=\"md-search__scrollwrap\" data-md-scrollfix> - <div class=\"md-search-result\" data-md-component=\"result\"> + <div class=\"md-search-result\" data-md-component=\"search-result\"> <div class=\"md-search-result__meta\"> {{ lang.t(\"search.result.placeholder\") }} </div>","title":"partials/search.html"},{"location":"releases/5/#partialssocialhtml","text":"@@ -3,9 +3,12 @@ -#} {% if config.extra.social %} <div class=\"md-footer-social\"> - <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/font-awesome.css' | url }}\"> {% for social in config.extra.social %} - <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ social.type }}\" class=\"md-footer-social__link fa fa-{{ social.type }}\"></a> + {% set _,rest = social.link.split(\"//\") %} + {% set domain = rest.split(\"/\")[0] %} + <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ domain }}\" class=\"md-footer-social__link\"> + {% include \".icons/\" ~ social.icon ~ \".svg\" %} + </a> {% endfor %} </div> {% endif %}","title":"partials/social.html"},{"location":"releases/5/#partialssource-datehtml","text":"@@ -0,0 +1,15 @@ +{#- + This file was automatically generated - do not edit +-#} +{% import \"partials/language.html\" as lang with context %} +{% set label = lang.t(\"source.revision.date\") %} +<hr> +<div class=\"md-source-date\"> + <small> + {% if page.meta.git_revision_date_localized %} + {{ label }}: {{ page.meta.git_revision_date_localized }} + {% elif page.meta.revision_date %} + {{ label }}: {{ page.meta.revision_date }} + {% endif %} + </small> +</div>","title":"partials/source-date.html"},{"location":"releases/5/#partialssource-linkhtml","text":"@@ -0,0 +1,13 @@ +{#- + This file was automatically generated - do not edit +-#} +{% import \"partials/language.html\" as lang with context %} +{% set repo = config.repo_url %} +{% if repo | last == \"/\" %} + {% set repo = repo[:-1] %} +{% endif %} +{% set path = page.meta.path | default([\"\"]) %} +<a href=\"{{ [repo, path, page.meta.source] | join('/') }}\" title=\"{{ file }}\" class=\"md-content__button md-icon\"> + {{ lang.t(\"meta.source\") }} + {% include \".icons/\" ~ config.theme.icon.repo ~ \".svg\" %} +</a>","title":"partials/source-link.html"},{"location":"releases/5/#partialssourcehtml","text":"@@ -2,24 +2,11 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -{% set platform = config.extra.repo_icon or config.repo_url %} -{% if \"github\" in platform %} - {% set repo_type = \"github\" %} -{% elif \"gitlab\" in platform %} - {% set repo_type = \"gitlab\" %} -{% elif \"bitbucket\" in platform %} - {% set repo_type = \"bitbucket\" %} -{% else %} - {% set repo_type = \"\" %} -{% endif %} -<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\" data-md-source=\"{{ repo_type }}\"> - {% if repo_type %} - <div class=\"md-source__icon\"> - <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"> - <use xlink:href=\"#__{{ repo_type }}\" width=\"24\" height=\"24\"></use> - </svg> - </div> - {% endif %} +<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\"> + <div class=\"md-source__icon md-icon\"> + {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %} + {% include \".icons/\" ~ icon ~ \".svg\" %} + </div> <div class=\"md-source__repository\"> {{ config.repo_name }} </div>","title":"partials/source.html"},{"location":"releases/5/#partialstabs-itemhtml","text":"@@ -1,7 +1,7 @@ {#- This file was automatically generated - do not edit -#} -{% if nav_item.is_homepage %} +{% if nav_item.is_homepage or nav_item.url == \"index.html\" %} <li class=\"md-tabs__item\"> {% if not page.ancestors | length and nav | selectattr(\"url\", page.url) %} <a href=\"{{ nav_item.url | url }}\" class=\"md-tabs__link md-tabs__link--active\">","title":"partials/tabs-item.html"},{"location":"releases/5/#partialstabshtml","text":"@@ -5,7 +5,7 @@ {% if page.ancestors | length > 0 %} {% set class = \"md-tabs md-tabs--active\" %} {% endif %} -<nav class=\"{{ class }}\" data-md-component=\"tabs\"> +<nav class=\"{{ class }}\" aria-label=\"{{ lang.t('tabs.title') }}\" data-md-component=\"tabs\"> <div class=\"md-tabs__inner md-grid\"> <ul class=\"md-tabs__list\"> {% for nav_item in nav %}","title":"partials/tabs.html"},{"location":"releases/5/#partialstoc-itemhtml","text":"@@ -6,7 +6,7 @@ {{ toc_item.title }} </a> {% if toc_item.children %} - <nav class=\"md-nav\"> + <nav class=\"md-nav\" aria-label=\"{{ toc_item.title }}\"> <ul class=\"md-nav__list\"> {% for toc_item in toc_item.children %} {% include \"partials/toc-item.html\" %}","title":"partials/toc-item.html"},{"location":"releases/5/#partialstochtml","text":"@@ -2,35 +2,22 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -<nav class=\"md-nav md-nav--secondary\"> +<nav class=\"md-nav md-nav--secondary\" aria-label=\"{{ lang.t('toc.title') }}\"> {% endif %} {% if toc | first is defined %} <label class=\"md-nav__title\" for=\"__toc\"> + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </span> {{ lang.t(\"toc.title\") }} </label> <ul class=\"md-nav__list\" data-md-scrollfix> {% for toc_item in toc %} {% include \"partials/toc-item.html\" %} {% endfor %} - {% if page.meta.source and page.meta.source | length > 0 %} - <li class=\"md-nav__item\"> - <a href=\"#__source\" class=\"md-nav__link md-nav__link--active\"> - {{ lang.t(\"meta.source\") }} - </a> - </li> - {% endif %} - {% set disqus = config.extra.disqus %} - {% if page and page.meta and page.meta.disqus is string %} - {% set disqus = page.meta.disqus %} - {% endif %} - {% if not page.is_homepage and disqus %} - <li class=\"md-nav__item\"> - <a href=\"#__comments\" class=\"md-nav__link md-nav__link--active\"> - {{ lang.t(\"meta.comments\") }} - </a> - </li> - {% endif %} </ul> {% endif %} </nav>","title":"partials/toc.html"},{"location":"releases/changelog/","text":"Upgrading \u00b6 To upgrade to the latest version: pip install --upgrade mkdocs-material To inspect the currently installed version: pip show mkdocs-material Changelog \u00b6 5.2.2 _ May 26, 2020 \u00b6 Fixed #1728 : Legacy Edge doesn't support deg values in hsla colors 5.2.1 _ May 22, 2020 \u00b6 Fixed color of links in table headers, e.g. footnotes Fixed color scheme not being applied without primary or accent color Fixed hover delay for links inside code blocks 5.2.0 _ May 18, 2020 \u00b6 Added color schemes implementation + dark mode Fixed #1583 : Missing option for separate link colors 5.1.7 _ May 16, 2020 \u00b6 Added keyboard focus support for overflowing code blocks Fixed #1696 : Infinite loop in some cases when using instant loading 5.1.6 _ May 9, 2020 \u00b6 Added Burmese translations Added general anchor offset solution using scroll-margin-top Fixed #1653 : Instant loading shouldn't intercept links to *.html files 5.1.5 _ May 3, 2020 \u00b6 Added name attribute for social links to set link title Fixed #1623 : Allow arbitrary links in social links Fixed #1664 : Height of iframe is not adjustable Fixed #1667 : Sidebars are scrolled to bottom on load (bug in Chrome 81+) 5.1.4 _ April 30, 2020 \u00b6 Switched to @mdi/svg Material Design icon package Fixed #1655 : Navigation may disappear after switching viewports Fixed #1659 : Unnecessary scrollbar for search results on Windows Fixed occasional distortions for images with explicit dimensions Fixed errors in German translations 5.1.3 _ April 26, 2020 \u00b6 Fixed overflowing content area after switch to flexbox 5.1.2 _ April 26, 2020 \u00b6 Added status information to search observable Added status information to search modal Removed announcement bar from print media Removed media query packing logic due to race conditions Fixed #1520 : Gracefully disable search on file:// if Worker fails Fixed re-submission of query after search is initialized Fixed jitter of sidebars on all browsers by switching to sticky 5.1.1 _ April 17, 2020 \u00b6 Added new FontAwesome icons Fixed #1609 : Instant loading doesn't honor target=_blank Fixed GitHub stars count rounding errors Fixed GitLab stars count retrieval 5.1.0 _ April 12, 2020 \u00b6 Added support for icons from Markdown through mkdocs-material-extensions 5.0.2 _ April 10, 2020 \u00b6 Added CSS source maps to distribution files Fixed errors in Chinese (Traditional) translations Fixed creation of stale directory on installation from git Improved overflow scrolling behavior on iOS (reduced bundle size by 4kb ) 5.0.1 _ April 7, 2020 \u00b6 Fixed syntax error in Spanish translation 5.0.0 _ April 7, 2020 \u00b6 Reactive architecture \u2013 try app.dialog$.next(\"Hi!\") in the console Instant loading \u2013 make Material behave like a Single Page Application Improved CSS customization with CSS variables \u2013 set your brand's colors Improved CSS resilience, e.g. proper sidebar locking for customized headers Improved icon integration and configuration \u2013 now including over 5k icons Added possibility to use any icon for logo, repository and social links Search UI does not freeze anymore (moved to web worker) Search index built only once when using instant loading Improved extensible keyboard handling Support for prebuilt search indexes Support for displaying stars and forks for GitLab repositories Support for scroll snapping of sidebars and search results Reduced HTML and CSS footprint due to deprecation of Internet Explorer support Slight facelifting of some UI elements (Admonitions, tables, ...) 4.6.3 _ February 14, 2020 \u00b6 Removed optional third-party plugins from requirements.txt Updated Docker image to contain all supported third-party plugins 4.6.2 _ February 8, 2020 \u00b6 Added Romanian translations Fixed #1451 : Inconsistent spacing for fenced code blocks 4.6.1 _ February 8, 2020 \u00b6 Fixed #1324 : Metadata author only rendering first character Fixed #1393 : Set tabindex to 0 for skip to content link Fixed code blocks after Markdown 3.2 release Fixed errors in Japanese translations Improved Google Lighthouse score 4.6.0 _ December 11, 2019 \u00b6 Added support for mkdocs-git-revision-date-localized-plugin Fixed invalid character in Google Fonts URL 4.5.1 _ December 2, 2019 \u00b6 Added Thai translations Fixed missing assets in GitHub release .zip and .tar.gz 4.5.0 _ November 16, 2019 \u00b6 Fixed #1330 : Upgraded EmojiOne to Tweomji due to licensing issues Fixed #1339 : Temporarily pinned PyMdown and Markdown due to Fixed errors in Greek translations Improved GitHub statistics retrieval 4.4.3 _ October 3, 2019 \u00b6 Added Estonian translations Fixed removal of copyright banners in minified JavaScript Removed unnecessary title attributes from links in table of contents 4.4.2 _ August 27, 2019 \u00b6 Added Afrikaans translations Fixed broken page title when h1 contained HTML tags Improved accessibility for IE users Removed unnecessary title attributes from links in navigation 4.4.1 _ August 22, 2019 \u00b6 Added support for black as a primary color Fixed broken footer bar when h1 contained HTML tags 4.4.0 _ June 15, 2019 \u00b6 Added Slovenian translations Reverted template minification in favor of mkdocs-minify-plugin Fixed #1114 : Tabs don't reappear when default font-size is smaller than 16 4.3.1 _ May 23, 2019 \u00b6 Fixed spelling error in Danish translations 4.3.0 _ May 17, 2019 \u00b6 Added support for changing header through metadata title property Added font-display: swap to Google Font loading logic Removed whitespace from templates, saving 4kb ( .7kb gzipped) per request Fixed alignment of repository icons on tablet and desktop 4.2.0 _ April 28, 2019 \u00b6 Added Norwegian (Nynorsk) translations Fixed loss of focus in non-form input elements due to search hotkeys Fixed #1067 : Search hotkeys not working for mobile/tablet screensize Fixed #1068 : Search not correctly aligned for tablet screensize 4.1.2 _ April 16, 2019 \u00b6 Fixed #1072 : HTML tags appearing in navigation link titles 4.1.1 _ March 28, 2019 \u00b6 Fixed minor CSS errors detected during validation 4.1.0 _ March 22, 2019 \u00b6 Fixed #1023 : Search for Asian languages broken after Lunr.js update Fixed #1026 : contenteditable elements loose focus on hotkeys 4.0.2 _ March 1, 2019 \u00b6 Fixed #1012 : HTML character entities appear in search result titles 4.0.1 _ February 13, 2019 \u00b6 Fixed #762 , #816 : Glitch in sidebar when collapsing items Fixed #869 : Automatically expand details before printing 4.0.0 _ February 13, 2019 \u00b6 Added background on hover for table rows Removed Google Tag Manager and reverted to Google Analytics Removed blocks in partials - Jinja doesn't support them Fixed #911 : Chrome breaks layout if system language is Chinese ( BREAKING ) Fixed #976 : Removed FastClick 3.3.0 _ January 29, 2019 \u00b6 Moved Google Analytics integration into head using Google Tag Manager Fixed #972 : Unicode slugifier breaks table of contents blur on scroll Fixed #974 : Additional links in table of contents break blur on scroll 3.2.0 _ December 28, 2018 \u00b6 Added support for redirects using metadata refresh Fixed #921 : Load Google Analytics snippet asynchronously 3.1.0 _ November 17, 2018 \u00b6 Added support for Progressive Web App Manifest Fixed #915 : Search bug in Safari (upgraded Lunr.js) 3.0.6 _ October 26, 2018 \u00b6 Added Taiwanese translations Fixed #906 : JavaScript code blocks evaluated in search results 3.0.5 _ October 23, 2018 \u00b6 Added Croatian and Indonesian translations Fixed #899 : Skip-to-content link invalid from 2 nd level on Fixed #902 : Missing URL filter in footer for FontAwesome link 3.0.4 _ September 3, 2018 \u00b6 Updated Dutch translations Fixed #856 : Removed preconnect meta tag if Google Fonts are disabled 3.0.3 _ August 7, 2018 \u00b6 Fixed #841 : Additional path levels for extra CSS and JS 3.0.2 _ August 6, 2018 \u00b6 Fixed #839 : Lunr.js stemmer imports incorrect 3.0.1 _ August 5, 2018 \u00b6 Fixed #838 : Search result links incorrect 3.0.0 _ August 5, 2018 \u00b6 Upgraded MkDocs to 1.0 ( BREAKING ) Upgraded Python in official Docker image to 3.6 Added Serbian and Serbo-Croatian translations 2.9.4 _ July 29, 2018 \u00b6 Fixed build error after MkDocs upgrade 2.9.3 _ July 29, 2018 \u00b6 Added link to home for logo in drawer Fixed dependency problems between MkDocs and Tornado 2.9.2 _ June 29, 2018 \u00b6 Added Hindi and Czech translations 2.9.1 _ June 18, 2018 \u00b6 Added support for different spellings for theme color Fixed #799 : Added support for webfont minification in production Fixed #800 : Added .highlighttable as an alias for .codehilitetable 2.9.0 _ June 13, 2018 \u00b6 Added support for theme color on Android Fixed #796 : Rendering of nested tabbed code blocks 2.8.0 _ June 10, 2018 \u00b6 Added support for grouping code blocks with tabs Added Material and FontAwesome icon fonts to distribution files (GDPR) Added note on compliance with GDPR Added Slovak translations Fixed #790 : Prefixed id attributes with __ to avoid name clashes 2.7.3 _ April 26, 2018 \u00b6 Added Finnish translations 2.7.2 _ April 9, 2018 \u00b6 Fixed rendering issue for details on Edge 2.7.1 _ March 21, 2018 \u00b6 Added Galician translations Fixed #730 : Scroll chasing error on home page if Disqus is enabled Fixed #736 : Reset drawer and search upon back button invocation 2.7.0 _ March 6, 2018 \u00b6 Added ability to set absolute URL for logo Added Hebrew translations 2.6.6 _ February 22, 2018 \u00b6 Added preconnect for Google Fonts for faster loading Fixed #710 : With tabs sidebar disappears if JavaScript is not available 2.6.5 _ February 22, 2018 \u00b6 Reverted --dev-addr flag removal from Dockerfile 2.6.4 _ February 21, 2018 \u00b6 Added Catalan translations Fixed incorrect margins for buttons in Firefox and Safari Replaced package manager yarn with npm 5.6 Reverted GitHub stars rounding method Removed --dev-addr flag from Dockerfile for Windows compatibility 2.6.3 _ February 18, 2018 \u00b6 Added Vietnamese translations 2.6.2 _ February 12, 2018 \u00b6 Added Arabic translations Fixed incorrect rounding of amount of GitHub stars Fixed double-layered borders for tables 2.6.1 _ February 11, 2018 \u00b6 Added ability to override Disqus integration using metadata Fixed #690 : Duplicate slashes in source file URLs Fixed #696 : Active page highlight not working with default palette Adjusted German translations 2.6.0 _ February 2, 2018 \u00b6 Moved default search configuration to default translation (English) Added support to automatically set text direction from translation Added support to disable search stop word filter in translation Added support to disable search trimmer in translation Added Persian translations Fixed support for Polish search Fixed disappearing GitHub, GitLab and Bitbucket repository icons 2.5.5 _ January 31, 2018 \u00b6 Added Hungarian translations 2.5.4 _ January 29, 2018 \u00b6 Fixed #683 : gh-deploy fails inside Docker 2.5.3 _ January 25, 2018 \u00b6 Added Ukrainian translations 2.5.2 _ January 22, 2018 \u00b6 Added default search language mappings for all localizations Fixed #673 : Error loading non-existent search language Fixed #675 : Uncaught reference error when search plugin disabled 2.5.1 _ January 20, 2018 \u00b6 Fixed permalink for main headline Improved missing translation handling with English as a fallback Improved accessibility with skip-to-content link 2.5.0 _ January 13, 2018 \u00b6 Added support for right-to-left languages 2.4.0 _ January 11, 2018 \u00b6 Added focus state for clipboard buttons Fixed #400 : Search bar steals tab focus Fixed search not closing on Enter when result is selected Fixed search not closing when losing focus due to Tab Fixed collapsed navigation links getting focus Fixed outline being cut off on Tab focus of navigation links Fixed bug with first search result navigation being ignored Removed search result navigation via Tab (use Up and Down ) Removed outline resets for links Improved general tabbing behavior on desktop 2.3.0 _ January 9, 2018 \u00b6 Added example (synonym: snippet ) style for Admonition Added synonym abstract for summary style for Admonition 2.2.6 _ December 27, 2017 \u00b6 Added Turkish translations Fixed unclickable area below header in case JavaScript is not available 2.2.5 _ December 18, 2017 \u00b6 Fixed #639 : Broken default favicon 2.2.4 _ December 18, 2017 \u00b6 Fixed #638 : Build breaks with Jinja < 2.9 2.2.3 _ December 13, 2017 \u00b6 Fixed #630 : Admonition sets padding on any last child Adjusted Chinese (Traditional) translations 2.2.2 _ December 8, 2017 \u00b6 Added Dutch translations Adjusted targeted link and footnote offsets Simplified Admonition styles and fixed padding bug 2.2.1 _ December 2, 2017 \u00b6 Fixed #616 : Minor styling error with title-only admonition blocks Removed border for table of contents and improved spacing 2.2.0 _ November 22, 2017 \u00b6 Added support for hero teaser Added Portuguese translations Fixed #586 : Footnote backref target offset regression Fixed #605 : Search stemmers not correctly loaded 2.1.1 _ November 21, 2017 \u00b6 Replaced deprecated babel-preset-es2015 with babel-preset-env Refactored Gulp build pipeline with Webpack Removed right border on sidebars Fixed broken color transition on header 2.1.0 _ November 19, 2017 \u00b6 Added support for white as a primary color Added support for sliding site name and title Fixed redundant clipboard button when using line numbers on code blocks Improved header appearance by making it taller Improved tabs appearance Improved CSS customizability by leveraging inheritance Removed scroll shadows via background-attachment 2.0.4 _ November 5, 2017 \u00b6 Fixed details not opening with footnote reference 2.0.3 _ November 5, 2017 \u00b6 Added Japanese translations Fixed #540 : Jumping to anchor inside details doesn't open it Fixed active link colors in footer 2.0.2 _ November 1, 2017 \u00b6 Added Russian translations Fixed #542 : Horizontal scrollbar between 1220px and 1234px Fixed #553 : Metadata values only rendering first character Fixed #558 : Flash of unstyled content Fixed favicon regression caused by deprecation upstream 2.0.1 _ October 31, 2017 \u00b6 Fixed error when initializing search Fixed styles for link to edit the current page Fixed styles on nested admonition in details 2.0.0 _ October 31, 2017 \u00b6 Upgraded MkDocs to 0.17.1 ( BREAKING ) Added support for easier configuration of search tokenizer Added support to disable search Added Korean translations 1.12.2 _ October 26, 2017 \u00b6 Added Italian, Norwegian, French and Chinese translations 1.12.1 _ October 22, 2017 \u00b6 Added Polish, Swedish and Spanish translations Improved downward compatibility with custom partials Temporarily pinned MkDocs version within Docker image to 0.16.3 Fixed #519 : Missing theme configuration file 1.12.0 _ October 20, 2017 \u00b6 Added support for setting language(s) via mkdocs.yml Added support for default localization Added German and Danish translations Fixed #374 : Search bar misalignment on big screens 1.11.0 _ October 19, 2017 \u00b6 Added localization to clipboard Refactored localization logic 1.10.4 _ October 18, 2017 \u00b6 Improved print styles of code blocks Improved search UX (don't close on enter if no selection) Fixed #495 : Vertical scrollbar on short pages 1.10.3 _ October 11, 2017 \u00b6 Fixed #484 : Vertical scrollbar on some MathJax formulas Fixed #483 : Footnote backref target offset regression 1.10.2 _ October 6, 2017 \u00b6 Fixed #468 : Sidebar shows scrollbar if content is shorter (in Safari) 1.10.1 _ September 14, 2017 \u00b6 Fixed #455 : Bold code blocks rendered with normal font weight 1.10.0 _ September 1, 2017 \u00b6 Added support to make logo default icon configurable Fixed uninitialized overflow scrolling on main pane for iOS Fixed error in mobile navigation in case JavaScript is not available Fixed incorrect color transition for nested panes in mobile navigation Improved checkbox styles for Tasklist from PyMdown Extension package 1.9.0 _ August 29, 2017 \u00b6 Added info (synonym: todo ) style for Admonition Added question (synonym: help , faq ) style for Admonition Added support for Details from PyMdown Extensions package Improved Admonition styles to match Details Improved styles for social links in footer Replaced ligatures with Unicode code points to avoid broken layout Upgraded PyMdown Extensions package dependency to >= 3.4 1.8.1 _ August 7, 2017 \u00b6 Fixed #421 : Missing pagination for GitHub API 1.8.0 _ August 2, 2017 \u00b6 Added support for lazy-loading of search results for better performance Added support for customization of search tokenizer/separator Fixed #424 : Search doesn't handle capital letters anymore Fixed #419 : Search doesn't work on whole words 1.7.5 _ July 25, 2017 \u00b6 Fixed #398 : Forms broken due to search shortcuts Improved search overall user experience Improved search matching and highlighting Improved search accessibility 1.7.4 _ June 21, 2017 \u00b6 Fixed functional link colors in table of contents for active palette Fixed #368 : Compatibility issues with IE11 1.7.3 _ June 7, 2017 \u00b6 Fixed error when setting language to Japanese for site search 1.7.2 _ June 6, 2017 \u00b6 Fixed offset of search box when repo_url is not set Fixed non-disappearing tooltip 1.7.1 _ June 1, 2017 \u00b6 Fixed wrong z-index order of header, overlay and drawer Fixed wrong offset of targeted footnote back references 1.7.0 _ June 1, 2017 \u00b6 Added \"copy to clipboard\" buttons to code blocks Added support for multilingual site search Fixed search term highlighting for non-latin languages 1.6.4 _ May 24, 2017 \u00b6 Fixed #337 : JavaScript error for GitHub organization URLs 1.6.3 _ May 16, 2017 \u00b6 Fixed #329 : Broken source stats for private or unknown GitHub repos 1.6.2 _ May 15, 2017 \u00b6 Fixed #316 : Fatal error for git clone on Windows Fixed #320 : Chrome 58 creates double underline for abbr tags Fixed #323 : Ligatures rendered inside code blocks Fixed miscalculated sidebar height due to missing margin collapse Changed deprecated MathJax CDN to Cloudflare 1.6.1 _ April 23, 2017 \u00b6 Fixed following of active/focused element if search input is focused Fixed layer order of search component elements 1.6.0 _ April 22, 2017 \u00b6 Added build test for Docker image on Travis Added search overlay for better user experience (focus) Added language from localizations to html tag Fixed #270 : source links broken for absolute URLs Fixed missing top spacing for first targeted element in content Fixed too small footnote divider when using larger font sizes 1.5.5 _ April 20, 2017 \u00b6 Fixed #282 : Browser search ( Meta + F ) is hijacked 1.5.4 _ April 8, 2017 \u00b6 Fixed broken highlighting for two or more search terms Fixed missing search results when only a h1 is present Fixed unresponsive overlay on Android 1.5.3 _ April 7, 2017 \u00b6 Fixed deprecated calls for template variables Fixed wrong palette color for focused search result Fixed JavaScript errors on 404 page Fixed missing top spacing on 404 page Fixed missing right spacing on overflow of source container 1.5.2 _ April 5, 2017 \u00b6 Added requirements as explicit dependencies in setup.py Fixed non-synchronized transitions in search form 1.5.1 _ March 30, 2017 \u00b6 Fixed rendering and offset of targeted footnotes Fixed #238 : Link on logo is not set to site_url 1.5.0 _ March 24, 2017 \u00b6 Added support for localization of search placeholder Added keyboard events for quick access of search Added keyboard events for search control Added opacity on hover for search buttons Added git hook to skip CI build on non-src changes Fixed non-resetting search placeholder when input is cleared Fixed error for unescaped parentheses in search term Fixed #229 : Button to clear search missing Fixed #231 : Escape key doesn't exit search Removed old-style figures from font feature settings 1.4.1 _ March 16, 2017 \u00b6 Fixed invalid destructuring attempt on NodeList (in Safari, Edge, IE) 1.4.0 _ March 16, 2017 \u00b6 Added support for grouping searched sections by documents Added support for highlighting of search terms Added support for localization of search results Fixed #216 : table of contents icon doesn't show if h1 is not present Reworked style and layout of search results for better usability 1.3.0 _ March 11, 2017 \u00b6 Added support for page-specific title and description using metadata Added support for linking source files to documentation Fixed jitter and offset of sidebar when zooming browser Fixed incorrectly initialized tablet sidebar height Fixed regression for #1 : GitHub stars break if repo_url ends with a / Fixed undesired white line below copyright footer due to base font scaling Fixed issue with whitespace in path for scripts Fixed #205 : support non-fixed (static) header Refactored footnote references for better visibility Reduced repaints to a minimum for non-tabs configuration Reduced contrast of edit button (slightly) 1.2.0 _ March 3, 2017 \u00b6 Added quote (synonym: cite ) style for Admonition Added help message to build pipeline Fixed wrong navigation link colors when applying palette Fixed #197 : Link missing in tabs navigation on deeply nested items Removed unnecessary dev dependencies 1.1.1 _ February 26, 2017 \u00b6 Fixed incorrectly displayed nested lists when using tabs 1.1.0 _ February 26, 2017 \u00b6 Added tabs navigation feature (optional) Added Disqus integration (optional) Added a high resolution Favicon with the new logo Added static type checking using Facebook's Flow Fixed #173 : Dictionary elements have no bottom spacing Fixed #175 : Tables cannot be set to 100% width Fixed race conditions in build related to asset revisioning Fixed accidentally re-introduced Permalink on top-level headline Fixed alignment of logo in drawer on IE11 Refactored styles related to tables Refactored and automated Docker build and PyPI release Refactored build scripts 1.0.5 _ February 18, 2017 \u00b6 Fixed #153 : Sidebar flows out of constrained area in Chrome 56 Fixed #159 : Footer jitter due to JavaScript if content is short 1.0.4 _ February 16, 2017 \u00b6 Fixed #142 : Documentation build errors if h1 is defined as raw HTML Fixed #164 : PyPI release does not build and install Fixed offsets of targeted headlines Increased sidebar font size by 0.12rem 1.0.3 _ January 22, 2017 \u00b6 Fixed #117 : Table of contents items don't blur on fast scrolling Refactored sidebar positioning logic Further reduction of repaints 1.0.2 _ January 15, 2017 \u00b6 Fixed #108 : Horizontal scrollbar in content area 1.0.1 _ January 14, 2017 \u00b6 Fixed massive repaints happening when scrolling Fixed footer back reference positions in case of overflow Fixed header logo from showing when the menu icon is rendered Changed scrollbar behavior to only show when content overflows 1.0.0 _ January 13, 2017 \u00b6 Introduced Webpack for more sophisticated JavaScript bundling Introduced ESLint and Stylelint for code style checks Introduced more accurate Material Design colors and shadows Introduced modular scales for harmonic font sizing Introduced git-hooks for better development workflow Rewrite of CSS using the BEM methodology and SassDoc guidelines Rewrite of JavaScript using ES6 and Babel as a transpiler Rewrite of Admonition, Permalinks and CodeHilite integration Rewrite of the complete typographical system Rewrite of Gulp asset pipeline in ES6 and separation of tasks Removed Bower as a dependency in favor of NPM Removed custom icon build in favor of the Material Design icon set Removed _blank targets on links due to vulnerability: http://bit.ly/1Mk2Rtw Removed unversioned assets from build directory Restructured templates into base templates and partials Added build and watch scripts in package.json Added support for Metadata and Footnotes Markdown extensions Added support for PyMdown Extensions package Added support for collapsible sections in navigation Added support for separate table of contents Added support for better accessibility through REM-based layout Added icons for GitHub, GitLab and BitBucket integrations Added more detailed documentation on specimen, extensions etc. Added a 404.html error page for deployment on GitHub Pages Fixed live reload chain in watch mode when saving a template Fixed variable references to work with MkDocs 0.16 0.2.4 _ June 26, 2016 \u00b6 Fixed improperly set default favicon Fixed #33 : Protocol relative URL for webfonts doesn't work with file:// Fixed #34 : IE11 on Windows 7 doesn't honor max-width on main tag Fixed #35 : Add styling for blockquotes 0.2.3 _ May 16, 2016 \u00b6 Fixed #25 : Highlight inline fenced blocks Fixed #26 : Better highlighting for keystrokes Fixed #30 : Suboptimal syntax highlighting for PHP 0.2.2 _ March 20, 2016 \u00b6 Fixed #15 : Document Pygments dependency for CodeHilite Fixed #16 : Favicon could not be set through mkdocs.yml Fixed #17 : Put version into own container for styling Fixed #20 : Fix rounded borders for tables 0.2.1 _ March 12, 2016 \u00b6 Fixed #10 : Invisible header after closing search bar with ESC key Fixed #13 : Table cells don't wrap Fixed empty list in table of contents when no headline is defined Corrected wrong path for static asset monitoring in Gulpfile.js Set up tracking of site search for Google Analytics 0.2.0 _ February 24, 2016 \u00b6 Fixed #6 : Include multiple color palettes via mkdocs.yml Fixed #7 : Better colors for links inside admonition notes and warnings Fixed #9 : Text for prev/next footer navigation should be customizable Refactored templates (replaced if / else with modifiers where possible) 0.1.3 _ February 21, 2016 \u00b6 Fixed #3 : Ordered lists within an unordered list have ::before content Fixed #4 : Click on Logo/Title without Github-Repository: \"None\" Fixed #5 : Page without headlines renders empty list in table of contents Moved Modernizr to top to ensure basic usability in IE8 0.1.2 _ February 16, 2016 \u00b6 Fixed styles for deep navigational hierarchies Fixed webfont delivery problem when hosted in subdirectories Fixed print styles in mobile/tablet configuration Added option to configure fonts in mkdocs.yml with fallbacks Changed styles for admonition notes and warnings Set download link to latest version if available Set up tracking of outgoing links and actions for Google Analytics 0.1.1 _ February 11, 2016 \u00b6 Fixed #1 : GitHub stars don't work if the repo_url ends with a / Updated NPM and Bower dependencies to most recent versions Changed footer/copyright link to Material theme to GitHub pages Made MkDocs building/serving in build process optional Set up continuous integration with Travis 0.1.0 _ February 9, 2016 \u00b6 Initial release","title":"Upgrading"},{"location":"releases/changelog/#upgrading","text":"To upgrade to the latest version: pip install --upgrade mkdocs-material To inspect the currently installed version: pip show mkdocs-material","title":"Upgrading"},{"location":"releases/changelog/#changelog","text":"","title":"Changelog"},{"location":"releases/changelog/#522-_-may-26-2020","text":"Fixed #1728 : Legacy Edge doesn't support deg values in hsla colors","title":"5.2.2 _ May 26, 2020"},{"location":"releases/changelog/#521-_-may-22-2020","text":"Fixed color of links in table headers, e.g. footnotes Fixed color scheme not being applied without primary or accent color Fixed hover delay for links inside code blocks","title":"5.2.1 _ May 22, 2020"},{"location":"releases/changelog/#520-_-may-18-2020","text":"Added color schemes implementation + dark mode Fixed #1583 : Missing option for separate link colors","title":"5.2.0 _ May 18, 2020"},{"location":"releases/changelog/#517-_-may-16-2020","text":"Added keyboard focus support for overflowing code blocks Fixed #1696 : Infinite loop in some cases when using instant loading","title":"5.1.7 _ May 16, 2020"},{"location":"releases/changelog/#516-_-may-9-2020","text":"Added Burmese translations Added general anchor offset solution using scroll-margin-top Fixed #1653 : Instant loading shouldn't intercept links to *.html files","title":"5.1.6 _ May 9, 2020"},{"location":"releases/changelog/#515-_-may-3-2020","text":"Added name attribute for social links to set link title Fixed #1623 : Allow arbitrary links in social links Fixed #1664 : Height of iframe is not adjustable Fixed #1667 : Sidebars are scrolled to bottom on load (bug in Chrome 81+)","title":"5.1.5 _ May 3, 2020"},{"location":"releases/changelog/#514-_-april-30-2020","text":"Switched to @mdi/svg Material Design icon package Fixed #1655 : Navigation may disappear after switching viewports Fixed #1659 : Unnecessary scrollbar for search results on Windows Fixed occasional distortions for images with explicit dimensions Fixed errors in German translations","title":"5.1.4 _ April 30, 2020"},{"location":"releases/changelog/#513-_-april-26-2020","text":"Fixed overflowing content area after switch to flexbox","title":"5.1.3 _ April 26, 2020"},{"location":"releases/changelog/#512-_-april-26-2020","text":"Added status information to search observable Added status information to search modal Removed announcement bar from print media Removed media query packing logic due to race conditions Fixed #1520 : Gracefully disable search on file:// if Worker fails Fixed re-submission of query after search is initialized Fixed jitter of sidebars on all browsers by switching to sticky","title":"5.1.2 _ April 26, 2020"},{"location":"releases/changelog/#511-_-april-17-2020","text":"Added new FontAwesome icons Fixed #1609 : Instant loading doesn't honor target=_blank Fixed GitHub stars count rounding errors Fixed GitLab stars count retrieval","title":"5.1.1 _ April 17, 2020"},{"location":"releases/changelog/#510-_-april-12-2020","text":"Added support for icons from Markdown through mkdocs-material-extensions","title":"5.1.0 _ April 12, 2020"},{"location":"releases/changelog/#502-_-april-10-2020","text":"Added CSS source maps to distribution files Fixed errors in Chinese (Traditional) translations Fixed creation of stale directory on installation from git Improved overflow scrolling behavior on iOS (reduced bundle size by 4kb )","title":"5.0.2 _ April 10, 2020"},{"location":"releases/changelog/#501-_-april-7-2020","text":"Fixed syntax error in Spanish translation","title":"5.0.1 _ April 7, 2020"},{"location":"releases/changelog/#500-_-april-7-2020","text":"Reactive architecture \u2013 try app.dialog$.next(\"Hi!\") in the console Instant loading \u2013 make Material behave like a Single Page Application Improved CSS customization with CSS variables \u2013 set your brand's colors Improved CSS resilience, e.g. proper sidebar locking for customized headers Improved icon integration and configuration \u2013 now including over 5k icons Added possibility to use any icon for logo, repository and social links Search UI does not freeze anymore (moved to web worker) Search index built only once when using instant loading Improved extensible keyboard handling Support for prebuilt search indexes Support for displaying stars and forks for GitLab repositories Support for scroll snapping of sidebars and search results Reduced HTML and CSS footprint due to deprecation of Internet Explorer support Slight facelifting of some UI elements (Admonitions, tables, ...)","title":"5.0.0 _ April 7, 2020"},{"location":"releases/changelog/#463-_-february-14-2020","text":"Removed optional third-party plugins from requirements.txt Updated Docker image to contain all supported third-party plugins","title":"4.6.3 _ February 14, 2020"},{"location":"releases/changelog/#462-_-february-8-2020","text":"Added Romanian translations Fixed #1451 : Inconsistent spacing for fenced code blocks","title":"4.6.2 _ February 8, 2020"},{"location":"releases/changelog/#461-_-february-8-2020","text":"Fixed #1324 : Metadata author only rendering first character Fixed #1393 : Set tabindex to 0 for skip to content link Fixed code blocks after Markdown 3.2 release Fixed errors in Japanese translations Improved Google Lighthouse score","title":"4.6.1 _ February 8, 2020"},{"location":"releases/changelog/#460-_-december-11-2019","text":"Added support for mkdocs-git-revision-date-localized-plugin Fixed invalid character in Google Fonts URL","title":"4.6.0 _ December 11, 2019"},{"location":"releases/changelog/#451-_-december-2-2019","text":"Added Thai translations Fixed missing assets in GitHub release .zip and .tar.gz","title":"4.5.1 _ December 2, 2019"},{"location":"releases/changelog/#450-_-november-16-2019","text":"Fixed #1330 : Upgraded EmojiOne to Tweomji due to licensing issues Fixed #1339 : Temporarily pinned PyMdown and Markdown due to Fixed errors in Greek translations Improved GitHub statistics retrieval","title":"4.5.0 _ November 16, 2019"},{"location":"releases/changelog/#443-_-october-3-2019","text":"Added Estonian translations Fixed removal of copyright banners in minified JavaScript Removed unnecessary title attributes from links in table of contents","title":"4.4.3 _ October 3, 2019"},{"location":"releases/changelog/#442-_-august-27-2019","text":"Added Afrikaans translations Fixed broken page title when h1 contained HTML tags Improved accessibility for IE users Removed unnecessary title attributes from links in navigation","title":"4.4.2 _ August 27, 2019"},{"location":"releases/changelog/#441-_-august-22-2019","text":"Added support for black as a primary color Fixed broken footer bar when h1 contained HTML tags","title":"4.4.1 _ August 22, 2019"},{"location":"releases/changelog/#440-_-june-15-2019","text":"Added Slovenian translations Reverted template minification in favor of mkdocs-minify-plugin Fixed #1114 : Tabs don't reappear when default font-size is smaller than 16","title":"4.4.0 _ June 15, 2019"},{"location":"releases/changelog/#431-_-may-23-2019","text":"Fixed spelling error in Danish translations","title":"4.3.1 _ May 23, 2019"},{"location":"releases/changelog/#430-_-may-17-2019","text":"Added support for changing header through metadata title property Added font-display: swap to Google Font loading logic Removed whitespace from templates, saving 4kb ( .7kb gzipped) per request Fixed alignment of repository icons on tablet and desktop","title":"4.3.0 _ May 17, 2019"},{"location":"releases/changelog/#420-_-april-28-2019","text":"Added Norwegian (Nynorsk) translations Fixed loss of focus in non-form input elements due to search hotkeys Fixed #1067 : Search hotkeys not working for mobile/tablet screensize Fixed #1068 : Search not correctly aligned for tablet screensize","title":"4.2.0 _ April 28, 2019"},{"location":"releases/changelog/#412-_-april-16-2019","text":"Fixed #1072 : HTML tags appearing in navigation link titles","title":"4.1.2 _ April 16, 2019"},{"location":"releases/changelog/#411-_-march-28-2019","text":"Fixed minor CSS errors detected during validation","title":"4.1.1 _ March 28, 2019"},{"location":"releases/changelog/#410-_-march-22-2019","text":"Fixed #1023 : Search for Asian languages broken after Lunr.js update Fixed #1026 : contenteditable elements loose focus on hotkeys","title":"4.1.0 _ March 22, 2019"},{"location":"releases/changelog/#402-_-march-1-2019","text":"Fixed #1012 : HTML character entities appear in search result titles","title":"4.0.2 _ March 1, 2019"},{"location":"releases/changelog/#401-_-february-13-2019","text":"Fixed #762 , #816 : Glitch in sidebar when collapsing items Fixed #869 : Automatically expand details before printing","title":"4.0.1 _ February 13, 2019"},{"location":"releases/changelog/#400-_-february-13-2019","text":"Added background on hover for table rows Removed Google Tag Manager and reverted to Google Analytics Removed blocks in partials - Jinja doesn't support them Fixed #911 : Chrome breaks layout if system language is Chinese ( BREAKING ) Fixed #976 : Removed FastClick","title":"4.0.0 _ February 13, 2019"},{"location":"releases/changelog/#330-_-january-29-2019","text":"Moved Google Analytics integration into head using Google Tag Manager Fixed #972 : Unicode slugifier breaks table of contents blur on scroll Fixed #974 : Additional links in table of contents break blur on scroll","title":"3.3.0 _ January 29, 2019"},{"location":"releases/changelog/#320-_-december-28-2018","text":"Added support for redirects using metadata refresh Fixed #921 : Load Google Analytics snippet asynchronously","title":"3.2.0 _ December 28, 2018"},{"location":"releases/changelog/#310-_-november-17-2018","text":"Added support for Progressive Web App Manifest Fixed #915 : Search bug in Safari (upgraded Lunr.js)","title":"3.1.0 _ November 17, 2018"},{"location":"releases/changelog/#306-_-october-26-2018","text":"Added Taiwanese translations Fixed #906 : JavaScript code blocks evaluated in search results","title":"3.0.6 _ October 26, 2018"},{"location":"releases/changelog/#305-_-october-23-2018","text":"Added Croatian and Indonesian translations Fixed #899 : Skip-to-content link invalid from 2 nd level on Fixed #902 : Missing URL filter in footer for FontAwesome link","title":"3.0.5 _ October 23, 2018"},{"location":"releases/changelog/#304-_-september-3-2018","text":"Updated Dutch translations Fixed #856 : Removed preconnect meta tag if Google Fonts are disabled","title":"3.0.4 _ September 3, 2018"},{"location":"releases/changelog/#303-_-august-7-2018","text":"Fixed #841 : Additional path levels for extra CSS and JS","title":"3.0.3 _ August 7, 2018"},{"location":"releases/changelog/#302-_-august-6-2018","text":"Fixed #839 : Lunr.js stemmer imports incorrect","title":"3.0.2 _ August 6, 2018"},{"location":"releases/changelog/#301-_-august-5-2018","text":"Fixed #838 : Search result links incorrect","title":"3.0.1 _ August 5, 2018"},{"location":"releases/changelog/#300-_-august-5-2018","text":"Upgraded MkDocs to 1.0 ( BREAKING ) Upgraded Python in official Docker image to 3.6 Added Serbian and Serbo-Croatian translations","title":"3.0.0 _ August 5, 2018"},{"location":"releases/changelog/#294-_-july-29-2018","text":"Fixed build error after MkDocs upgrade","title":"2.9.4 _ July 29, 2018"},{"location":"releases/changelog/#293-_-july-29-2018","text":"Added link to home for logo in drawer Fixed dependency problems between MkDocs and Tornado","title":"2.9.3 _ July 29, 2018"},{"location":"releases/changelog/#292-_-june-29-2018","text":"Added Hindi and Czech translations","title":"2.9.2 _ June 29, 2018"},{"location":"releases/changelog/#291-_-june-18-2018","text":"Added support for different spellings for theme color Fixed #799 : Added support for webfont minification in production Fixed #800 : Added .highlighttable as an alias for .codehilitetable","title":"2.9.1 _ June 18, 2018"},{"location":"releases/changelog/#290-_-june-13-2018","text":"Added support for theme color on Android Fixed #796 : Rendering of nested tabbed code blocks","title":"2.9.0 _ June 13, 2018"},{"location":"releases/changelog/#280-_-june-10-2018","text":"Added support for grouping code blocks with tabs Added Material and FontAwesome icon fonts to distribution files (GDPR) Added note on compliance with GDPR Added Slovak translations Fixed #790 : Prefixed id attributes with __ to avoid name clashes","title":"2.8.0 _ June 10, 2018"},{"location":"releases/changelog/#273-_-april-26-2018","text":"Added Finnish translations","title":"2.7.3 _ April 26, 2018"},{"location":"releases/changelog/#272-_-april-9-2018","text":"Fixed rendering issue for details on Edge","title":"2.7.2 _ April 9, 2018"},{"location":"releases/changelog/#271-_-march-21-2018","text":"Added Galician translations Fixed #730 : Scroll chasing error on home page if Disqus is enabled Fixed #736 : Reset drawer and search upon back button invocation","title":"2.7.1 _ March 21, 2018"},{"location":"releases/changelog/#270-_-march-6-2018","text":"Added ability to set absolute URL for logo Added Hebrew translations","title":"2.7.0 _ March 6, 2018"},{"location":"releases/changelog/#266-_-february-22-2018","text":"Added preconnect for Google Fonts for faster loading Fixed #710 : With tabs sidebar disappears if JavaScript is not available","title":"2.6.6 _ February 22, 2018"},{"location":"releases/changelog/#265-_-february-22-2018","text":"Reverted --dev-addr flag removal from Dockerfile","title":"2.6.5 _ February 22, 2018"},{"location":"releases/changelog/#264-_-february-21-2018","text":"Added Catalan translations Fixed incorrect margins for buttons in Firefox and Safari Replaced package manager yarn with npm 5.6 Reverted GitHub stars rounding method Removed --dev-addr flag from Dockerfile for Windows compatibility","title":"2.6.4 _ February 21, 2018"},{"location":"releases/changelog/#263-_-february-18-2018","text":"Added Vietnamese translations","title":"2.6.3 _ February 18, 2018"},{"location":"releases/changelog/#262-_-february-12-2018","text":"Added Arabic translations Fixed incorrect rounding of amount of GitHub stars Fixed double-layered borders for tables","title":"2.6.2 _ February 12, 2018"},{"location":"releases/changelog/#261-_-february-11-2018","text":"Added ability to override Disqus integration using metadata Fixed #690 : Duplicate slashes in source file URLs Fixed #696 : Active page highlight not working with default palette Adjusted German translations","title":"2.6.1 _ February 11, 2018"},{"location":"releases/changelog/#260-_-february-2-2018","text":"Moved default search configuration to default translation (English) Added support to automatically set text direction from translation Added support to disable search stop word filter in translation Added support to disable search trimmer in translation Added Persian translations Fixed support for Polish search Fixed disappearing GitHub, GitLab and Bitbucket repository icons","title":"2.6.0 _ February 2, 2018"},{"location":"releases/changelog/#255-_-january-31-2018","text":"Added Hungarian translations","title":"2.5.5 _ January 31, 2018"},{"location":"releases/changelog/#254-_-january-29-2018","text":"Fixed #683 : gh-deploy fails inside Docker","title":"2.5.4 _ January 29, 2018"},{"location":"releases/changelog/#253-_-january-25-2018","text":"Added Ukrainian translations","title":"2.5.3 _ January 25, 2018"},{"location":"releases/changelog/#252-_-january-22-2018","text":"Added default search language mappings for all localizations Fixed #673 : Error loading non-existent search language Fixed #675 : Uncaught reference error when search plugin disabled","title":"2.5.2 _ January 22, 2018"},{"location":"releases/changelog/#251-_-january-20-2018","text":"Fixed permalink for main headline Improved missing translation handling with English as a fallback Improved accessibility with skip-to-content link","title":"2.5.1 _ January 20, 2018"},{"location":"releases/changelog/#250-_-january-13-2018","text":"Added support for right-to-left languages","title":"2.5.0 _ January 13, 2018"},{"location":"releases/changelog/#240-_-january-11-2018","text":"Added focus state for clipboard buttons Fixed #400 : Search bar steals tab focus Fixed search not closing on Enter when result is selected Fixed search not closing when losing focus due to Tab Fixed collapsed navigation links getting focus Fixed outline being cut off on Tab focus of navigation links Fixed bug with first search result navigation being ignored Removed search result navigation via Tab (use Up and Down ) Removed outline resets for links Improved general tabbing behavior on desktop","title":"2.4.0 _ January 11, 2018"},{"location":"releases/changelog/#230-_-january-9-2018","text":"Added example (synonym: snippet ) style for Admonition Added synonym abstract for summary style for Admonition","title":"2.3.0 _ January 9, 2018"},{"location":"releases/changelog/#226-_-december-27-2017","text":"Added Turkish translations Fixed unclickable area below header in case JavaScript is not available","title":"2.2.6 _ December 27, 2017"},{"location":"releases/changelog/#225-_-december-18-2017","text":"Fixed #639 : Broken default favicon","title":"2.2.5 _ December 18, 2017"},{"location":"releases/changelog/#224-_-december-18-2017","text":"Fixed #638 : Build breaks with Jinja < 2.9","title":"2.2.4 _ December 18, 2017"},{"location":"releases/changelog/#223-_-december-13-2017","text":"Fixed #630 : Admonition sets padding on any last child Adjusted Chinese (Traditional) translations","title":"2.2.3 _ December 13, 2017"},{"location":"releases/changelog/#222-_-december-8-2017","text":"Added Dutch translations Adjusted targeted link and footnote offsets Simplified Admonition styles and fixed padding bug","title":"2.2.2 _ December 8, 2017"},{"location":"releases/changelog/#221-_-december-2-2017","text":"Fixed #616 : Minor styling error with title-only admonition blocks Removed border for table of contents and improved spacing","title":"2.2.1 _ December 2, 2017"},{"location":"releases/changelog/#220-_-november-22-2017","text":"Added support for hero teaser Added Portuguese translations Fixed #586 : Footnote backref target offset regression Fixed #605 : Search stemmers not correctly loaded","title":"2.2.0 _ November 22, 2017"},{"location":"releases/changelog/#211-_-november-21-2017","text":"Replaced deprecated babel-preset-es2015 with babel-preset-env Refactored Gulp build pipeline with Webpack Removed right border on sidebars Fixed broken color transition on header","title":"2.1.1 _ November 21, 2017"},{"location":"releases/changelog/#210-_-november-19-2017","text":"Added support for white as a primary color Added support for sliding site name and title Fixed redundant clipboard button when using line numbers on code blocks Improved header appearance by making it taller Improved tabs appearance Improved CSS customizability by leveraging inheritance Removed scroll shadows via background-attachment","title":"2.1.0 _ November 19, 2017"},{"location":"releases/changelog/#204-_-november-5-2017","text":"Fixed details not opening with footnote reference","title":"2.0.4 _ November 5, 2017"},{"location":"releases/changelog/#203-_-november-5-2017","text":"Added Japanese translations Fixed #540 : Jumping to anchor inside details doesn't open it Fixed active link colors in footer","title":"2.0.3 _ November 5, 2017"},{"location":"releases/changelog/#202-_-november-1-2017","text":"Added Russian translations Fixed #542 : Horizontal scrollbar between 1220px and 1234px Fixed #553 : Metadata values only rendering first character Fixed #558 : Flash of unstyled content Fixed favicon regression caused by deprecation upstream","title":"2.0.2 _ November 1, 2017"},{"location":"releases/changelog/#201-_-october-31-2017","text":"Fixed error when initializing search Fixed styles for link to edit the current page Fixed styles on nested admonition in details","title":"2.0.1 _ October 31, 2017"},{"location":"releases/changelog/#200-_-october-31-2017","text":"Upgraded MkDocs to 0.17.1 ( BREAKING ) Added support for easier configuration of search tokenizer Added support to disable search Added Korean translations","title":"2.0.0 _ October 31, 2017"},{"location":"releases/changelog/#1122-_-october-26-2017","text":"Added Italian, Norwegian, French and Chinese translations","title":"1.12.2 _ October 26, 2017"},{"location":"releases/changelog/#1121-_-october-22-2017","text":"Added Polish, Swedish and Spanish translations Improved downward compatibility with custom partials Temporarily pinned MkDocs version within Docker image to 0.16.3 Fixed #519 : Missing theme configuration file","title":"1.12.1 _ October 22, 2017"},{"location":"releases/changelog/#1120-_-october-20-2017","text":"Added support for setting language(s) via mkdocs.yml Added support for default localization Added German and Danish translations Fixed #374 : Search bar misalignment on big screens","title":"1.12.0 _ October 20, 2017"},{"location":"releases/changelog/#1110-_-october-19-2017","text":"Added localization to clipboard Refactored localization logic","title":"1.11.0 _ October 19, 2017"},{"location":"releases/changelog/#1104-_-october-18-2017","text":"Improved print styles of code blocks Improved search UX (don't close on enter if no selection) Fixed #495 : Vertical scrollbar on short pages","title":"1.10.4 _ October 18, 2017"},{"location":"releases/changelog/#1103-_-october-11-2017","text":"Fixed #484 : Vertical scrollbar on some MathJax formulas Fixed #483 : Footnote backref target offset regression","title":"1.10.3 _ October 11, 2017"},{"location":"releases/changelog/#1102-_-october-6-2017","text":"Fixed #468 : Sidebar shows scrollbar if content is shorter (in Safari)","title":"1.10.2 _ October 6, 2017"},{"location":"releases/changelog/#1101-_-september-14-2017","text":"Fixed #455 : Bold code blocks rendered with normal font weight","title":"1.10.1 _ September 14, 2017"},{"location":"releases/changelog/#1100-_-september-1-2017","text":"Added support to make logo default icon configurable Fixed uninitialized overflow scrolling on main pane for iOS Fixed error in mobile navigation in case JavaScript is not available Fixed incorrect color transition for nested panes in mobile navigation Improved checkbox styles for Tasklist from PyMdown Extension package","title":"1.10.0 _ September 1, 2017"},{"location":"releases/changelog/#190-_-august-29-2017","text":"Added info (synonym: todo ) style for Admonition Added question (synonym: help , faq ) style for Admonition Added support for Details from PyMdown Extensions package Improved Admonition styles to match Details Improved styles for social links in footer Replaced ligatures with Unicode code points to avoid broken layout Upgraded PyMdown Extensions package dependency to >= 3.4","title":"1.9.0 _ August 29, 2017"},{"location":"releases/changelog/#181-_-august-7-2017","text":"Fixed #421 : Missing pagination for GitHub API","title":"1.8.1 _ August 7, 2017"},{"location":"releases/changelog/#180-_-august-2-2017","text":"Added support for lazy-loading of search results for better performance Added support for customization of search tokenizer/separator Fixed #424 : Search doesn't handle capital letters anymore Fixed #419 : Search doesn't work on whole words","title":"1.8.0 _ August 2, 2017"},{"location":"releases/changelog/#175-_-july-25-2017","text":"Fixed #398 : Forms broken due to search shortcuts Improved search overall user experience Improved search matching and highlighting Improved search accessibility","title":"1.7.5 _ July 25, 2017"},{"location":"releases/changelog/#174-_-june-21-2017","text":"Fixed functional link colors in table of contents for active palette Fixed #368 : Compatibility issues with IE11","title":"1.7.4 _ June 21, 2017"},{"location":"releases/changelog/#173-_-june-7-2017","text":"Fixed error when setting language to Japanese for site search","title":"1.7.3 _ June 7, 2017"},{"location":"releases/changelog/#172-_-june-6-2017","text":"Fixed offset of search box when repo_url is not set Fixed non-disappearing tooltip","title":"1.7.2 _ June 6, 2017"},{"location":"releases/changelog/#171-_-june-1-2017","text":"Fixed wrong z-index order of header, overlay and drawer Fixed wrong offset of targeted footnote back references","title":"1.7.1 _ June 1, 2017"},{"location":"releases/changelog/#170-_-june-1-2017","text":"Added \"copy to clipboard\" buttons to code blocks Added support for multilingual site search Fixed search term highlighting for non-latin languages","title":"1.7.0 _ June 1, 2017"},{"location":"releases/changelog/#164-_-may-24-2017","text":"Fixed #337 : JavaScript error for GitHub organization URLs","title":"1.6.4 _ May 24, 2017"},{"location":"releases/changelog/#163-_-may-16-2017","text":"Fixed #329 : Broken source stats for private or unknown GitHub repos","title":"1.6.3 _ May 16, 2017"},{"location":"releases/changelog/#162-_-may-15-2017","text":"Fixed #316 : Fatal error for git clone on Windows Fixed #320 : Chrome 58 creates double underline for abbr tags Fixed #323 : Ligatures rendered inside code blocks Fixed miscalculated sidebar height due to missing margin collapse Changed deprecated MathJax CDN to Cloudflare","title":"1.6.2 _ May 15, 2017"},{"location":"releases/changelog/#161-_-april-23-2017","text":"Fixed following of active/focused element if search input is focused Fixed layer order of search component elements","title":"1.6.1 _ April 23, 2017"},{"location":"releases/changelog/#160-_-april-22-2017","text":"Added build test for Docker image on Travis Added search overlay for better user experience (focus) Added language from localizations to html tag Fixed #270 : source links broken for absolute URLs Fixed missing top spacing for first targeted element in content Fixed too small footnote divider when using larger font sizes","title":"1.6.0 _ April 22, 2017"},{"location":"releases/changelog/#155-_-april-20-2017","text":"Fixed #282 : Browser search ( Meta + F ) is hijacked","title":"1.5.5 _ April 20, 2017"},{"location":"releases/changelog/#154-_-april-8-2017","text":"Fixed broken highlighting for two or more search terms Fixed missing search results when only a h1 is present Fixed unresponsive overlay on Android","title":"1.5.4 _ April 8, 2017"},{"location":"releases/changelog/#153-_-april-7-2017","text":"Fixed deprecated calls for template variables Fixed wrong palette color for focused search result Fixed JavaScript errors on 404 page Fixed missing top spacing on 404 page Fixed missing right spacing on overflow of source container","title":"1.5.3 _ April 7, 2017"},{"location":"releases/changelog/#152-_-april-5-2017","text":"Added requirements as explicit dependencies in setup.py Fixed non-synchronized transitions in search form","title":"1.5.2 _ April 5, 2017"},{"location":"releases/changelog/#151-_-march-30-2017","text":"Fixed rendering and offset of targeted footnotes Fixed #238 : Link on logo is not set to site_url","title":"1.5.1 _ March 30, 2017"},{"location":"releases/changelog/#150-_-march-24-2017","text":"Added support for localization of search placeholder Added keyboard events for quick access of search Added keyboard events for search control Added opacity on hover for search buttons Added git hook to skip CI build on non-src changes Fixed non-resetting search placeholder when input is cleared Fixed error for unescaped parentheses in search term Fixed #229 : Button to clear search missing Fixed #231 : Escape key doesn't exit search Removed old-style figures from font feature settings","title":"1.5.0 _ March 24, 2017"},{"location":"releases/changelog/#141-_-march-16-2017","text":"Fixed invalid destructuring attempt on NodeList (in Safari, Edge, IE)","title":"1.4.1 _ March 16, 2017"},{"location":"releases/changelog/#140-_-march-16-2017","text":"Added support for grouping searched sections by documents Added support for highlighting of search terms Added support for localization of search results Fixed #216 : table of contents icon doesn't show if h1 is not present Reworked style and layout of search results for better usability","title":"1.4.0 _ March 16, 2017"},{"location":"releases/changelog/#130-_-march-11-2017","text":"Added support for page-specific title and description using metadata Added support for linking source files to documentation Fixed jitter and offset of sidebar when zooming browser Fixed incorrectly initialized tablet sidebar height Fixed regression for #1 : GitHub stars break if repo_url ends with a / Fixed undesired white line below copyright footer due to base font scaling Fixed issue with whitespace in path for scripts Fixed #205 : support non-fixed (static) header Refactored footnote references for better visibility Reduced repaints to a minimum for non-tabs configuration Reduced contrast of edit button (slightly)","title":"1.3.0 _ March 11, 2017"},{"location":"releases/changelog/#120-_-march-3-2017","text":"Added quote (synonym: cite ) style for Admonition Added help message to build pipeline Fixed wrong navigation link colors when applying palette Fixed #197 : Link missing in tabs navigation on deeply nested items Removed unnecessary dev dependencies","title":"1.2.0 _ March 3, 2017"},{"location":"releases/changelog/#111-_-february-26-2017","text":"Fixed incorrectly displayed nested lists when using tabs","title":"1.1.1 _ February 26, 2017"},{"location":"releases/changelog/#110-_-february-26-2017","text":"Added tabs navigation feature (optional) Added Disqus integration (optional) Added a high resolution Favicon with the new logo Added static type checking using Facebook's Flow Fixed #173 : Dictionary elements have no bottom spacing Fixed #175 : Tables cannot be set to 100% width Fixed race conditions in build related to asset revisioning Fixed accidentally re-introduced Permalink on top-level headline Fixed alignment of logo in drawer on IE11 Refactored styles related to tables Refactored and automated Docker build and PyPI release Refactored build scripts","title":"1.1.0 _ February 26, 2017"},{"location":"releases/changelog/#105-_-february-18-2017","text":"Fixed #153 : Sidebar flows out of constrained area in Chrome 56 Fixed #159 : Footer jitter due to JavaScript if content is short","title":"1.0.5 _ February 18, 2017"},{"location":"releases/changelog/#104-_-february-16-2017","text":"Fixed #142 : Documentation build errors if h1 is defined as raw HTML Fixed #164 : PyPI release does not build and install Fixed offsets of targeted headlines Increased sidebar font size by 0.12rem","title":"1.0.4 _ February 16, 2017"},{"location":"releases/changelog/#103-_-january-22-2017","text":"Fixed #117 : Table of contents items don't blur on fast scrolling Refactored sidebar positioning logic Further reduction of repaints","title":"1.0.3 _ January 22, 2017"},{"location":"releases/changelog/#102-_-january-15-2017","text":"Fixed #108 : Horizontal scrollbar in content area","title":"1.0.2 _ January 15, 2017"},{"location":"releases/changelog/#101-_-january-14-2017","text":"Fixed massive repaints happening when scrolling Fixed footer back reference positions in case of overflow Fixed header logo from showing when the menu icon is rendered Changed scrollbar behavior to only show when content overflows","title":"1.0.1 _ January 14, 2017"},{"location":"releases/changelog/#100-_-january-13-2017","text":"Introduced Webpack for more sophisticated JavaScript bundling Introduced ESLint and Stylelint for code style checks Introduced more accurate Material Design colors and shadows Introduced modular scales for harmonic font sizing Introduced git-hooks for better development workflow Rewrite of CSS using the BEM methodology and SassDoc guidelines Rewrite of JavaScript using ES6 and Babel as a transpiler Rewrite of Admonition, Permalinks and CodeHilite integration Rewrite of the complete typographical system Rewrite of Gulp asset pipeline in ES6 and separation of tasks Removed Bower as a dependency in favor of NPM Removed custom icon build in favor of the Material Design icon set Removed _blank targets on links due to vulnerability: http://bit.ly/1Mk2Rtw Removed unversioned assets from build directory Restructured templates into base templates and partials Added build and watch scripts in package.json Added support for Metadata and Footnotes Markdown extensions Added support for PyMdown Extensions package Added support for collapsible sections in navigation Added support for separate table of contents Added support for better accessibility through REM-based layout Added icons for GitHub, GitLab and BitBucket integrations Added more detailed documentation on specimen, extensions etc. Added a 404.html error page for deployment on GitHub Pages Fixed live reload chain in watch mode when saving a template Fixed variable references to work with MkDocs 0.16","title":"1.0.0 _ January 13, 2017"},{"location":"releases/changelog/#024-_-june-26-2016","text":"Fixed improperly set default favicon Fixed #33 : Protocol relative URL for webfonts doesn't work with file:// Fixed #34 : IE11 on Windows 7 doesn't honor max-width on main tag Fixed #35 : Add styling for blockquotes","title":"0.2.4 _ June 26, 2016"},{"location":"releases/changelog/#023-_-may-16-2016","text":"Fixed #25 : Highlight inline fenced blocks Fixed #26 : Better highlighting for keystrokes Fixed #30 : Suboptimal syntax highlighting for PHP","title":"0.2.3 _ May 16, 2016"},{"location":"releases/changelog/#022-_-march-20-2016","text":"Fixed #15 : Document Pygments dependency for CodeHilite Fixed #16 : Favicon could not be set through mkdocs.yml Fixed #17 : Put version into own container for styling Fixed #20 : Fix rounded borders for tables","title":"0.2.2 _ March 20, 2016"},{"location":"releases/changelog/#021-_-march-12-2016","text":"Fixed #10 : Invisible header after closing search bar with ESC key Fixed #13 : Table cells don't wrap Fixed empty list in table of contents when no headline is defined Corrected wrong path for static asset monitoring in Gulpfile.js Set up tracking of site search for Google Analytics","title":"0.2.1 _ March 12, 2016"},{"location":"releases/changelog/#020-_-february-24-2016","text":"Fixed #6 : Include multiple color palettes via mkdocs.yml Fixed #7 : Better colors for links inside admonition notes and warnings Fixed #9 : Text for prev/next footer navigation should be customizable Refactored templates (replaced if / else with modifiers where possible)","title":"0.2.0 _ February 24, 2016"},{"location":"releases/changelog/#013-_-february-21-2016","text":"Fixed #3 : Ordered lists within an unordered list have ::before content Fixed #4 : Click on Logo/Title without Github-Repository: \"None\" Fixed #5 : Page without headlines renders empty list in table of contents Moved Modernizr to top to ensure basic usability in IE8","title":"0.1.3 _ February 21, 2016"},{"location":"releases/changelog/#012-_-february-16-2016","text":"Fixed styles for deep navigational hierarchies Fixed webfont delivery problem when hosted in subdirectories Fixed print styles in mobile/tablet configuration Added option to configure fonts in mkdocs.yml with fallbacks Changed styles for admonition notes and warnings Set download link to latest version if available Set up tracking of outgoing links and actions for Google Analytics","title":"0.1.2 _ February 16, 2016"},{"location":"releases/changelog/#011-_-february-11-2016","text":"Fixed #1 : GitHub stars don't work if the repo_url ends with a / Updated NPM and Bower dependencies to most recent versions Changed footer/copyright link to Material theme to GitHub pages Made MkDocs building/serving in build process optional Set up continuous integration with Travis","title":"0.1.1 _ February 11, 2016"},{"location":"releases/changelog/#010-_-february-9-2016","text":"Initial release","title":"0.1.0 _ February 9, 2016"}]}